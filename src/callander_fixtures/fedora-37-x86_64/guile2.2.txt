callander: permitted syscalls: read(any u32, any, any) @ libc.so.6+0xfb27f(__read+15)
read(any u32, any, any) @ libc.so.6+0xfb2ba(__read+74)
read(any u32, any, any) @ libc.so.6+0x1001b6(__read_nocancel+6)
write(any u32, any, any) @ libc.so.6+0xfb322(write+18)
write(any u32, any, any) @ libc.so.6+0xfb35d(write+77)
write(any u32, any, any) @ libc.so.6+0x100229(__write_nocancel+9)
close(any u32) @ libc.so.6+0xfb9e2(close+18)
close(any u32) @ libc.so.6+0xfba08(close+56)
close(any u32) @ libc.so.6+0xffef9(__close_nocancel+9)
poll(any, any u32, any u32) @ libc.so.6+0xff282(__poll+18)
poll(any, any u32, any u32) @ libc.so.6+0xff2bd(__poll+77)
lseek(any u32, any, any) @ libc.so.6+0xfb3b9(lseek+9)
mmap(any, any, PROT_NONE-PROT_READ, any u32, any u32, 0) @ libc.so.6+0x104b65(mmap+21)
mmap(any, any, PROT_READ|PROT_WRITE, any u32, -1 as u32, 0) @ libc.so.6+0x104b65(mmap+21)
mmap(any, any, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_ANONYMOUS, -1 as u32, 0) @ libc.so.6+0x104b65(mmap+21)
mprotect(any, any, PROT_READ) @ libc.so.6+0x104be9(mprotect+9)
mprotect(any, any, PROT_READ|PROT_WRITE) @ libc.so.6+0x104be9(mprotect+9)
mprotect(any, any, PROT_READ|PROT_EXEC) @ libc.so.6+0x104be9(mprotect+9)
mprotect(any, any, PROT_READ|PROT_WRITE|PROT_EXEC) @ libc.so.6+0x104be9(mprotect+9)
munmap(any, any) @ libc.so.6+0x104bb9(munmap+9)
brk(any) @ libc.so.6+0x100ce9(brk+9)
rt_sigaction(any u32, any, 0, 8) @ libc.so.6+0x3cc31(__libc_sigaction+193)
rt_sigaction(SIGABRT-SIGBUS, any, any, 8) @ libc.so.6+0x3cc31(__libc_sigaction+193)
rt_sigaction(SIGSEGV, any, any, 8) @ libc.so.6+0x3cc31(__libc_sigaction+193)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ libc.so.6+0x267b2(abort+141)
rt_sigprocmask(SIG_BLOCK, 0, any, 8) @ libc.so.6+0x3fc7f(getcontext+239)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ libc.so.6+0x8b947(pthread_create+1559)
rt_sigprocmask(SIG_BLOCK, libc.so.6+0x1a1038(sigall_set), any, 8) @ libc.so.6+0x8ce0d(__pthread_kill_implementation+77)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ libc.so.6+0x8ce58(__pthread_kill_implementation+152)
rt_sigprocmask(SIG_BLOCK-SIG_UNBLOCK, any, any, 8) @ libc.so.6+0x91ef6(pthread_sigmask+70)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ libc.so.6+0x91ef6(pthread_sigmask+70)
rt_sigreturn(any) @ libc.so.6+0x3cb67
ioctl(any u32, TCGETS, any) @ libc.so.6+0x100518(tcgetattr+40)
writev(STDERR_FILENO, any, any) @ libc.so.6+0x8105e(__libc_message+510)
access(any, W_OK) @ libc.so.6+0xfb3e9(access+9)
sched_yield() @ libc.so.6+0xf11a9(sched_yield+9)
mremap(any, any, any, MREMAP_MAYMOVE, any) @ libc.so.6+0x10cd7d(mremap+45)
madvise(any, any, MADV_DONTNEED) @ libc.so.6+0x104cb9(madvise+9)
madvise(any, any, MADV_HUGEPAGE) @ libc.so.6+0x104cb9(madvise+9)
dup(STDIN_FILENO-0xfffffffe) @ libc.so.6+0xfba69(dup+9)
getpid() @ libc.so.6+0xd8029(getpid+9)
exit(0) @ libc.so.6+0x27574(__libc_start_call_main+164)
fcntl(any u32, F_SETFD, 1) @ libc.so.6+0xfff63(__fcntl64_nocancel+67)
fcntl(any u32, F_GETFL, any) @ libc.so.6+0xfff63(__fcntl64_nocancel+67)
fcntl(STDIN_FILENO-0xfffffffe, F_GETFL, libc.so.6+0x19706d) @ libc.so.6+0xffff2(__fcntl64_nocancel_adjusted+34)
fcntl(any u32, F_GETFD, 0) @ libc.so.6+0xffff2(__fcntl64_nocancel_adjusted+34)
fcntl(any u32, F_SETFD, any u32) @ libc.so.6+0xffff2(__fcntl64_nocancel_adjusted+34)
fcntl(any u32, F_GETFL, libguile-2.2.so.1+0xeffc0) @ libc.so.6+0xffff2(__fcntl64_nocancel_adjusted+34)
fcntl(any u32, F_SETFL, any u16) @ libc.so.6+0xffff2(__fcntl64_nocancel_adjusted+34)
ftruncate(any u32, any) @ libc.so.6+0x1031f9(ftruncate64+9)
getcwd(non-NULL, any) @ libc.so.6+0xfbcd0(getcwd+128)
mkdir(any, 0700) @ libc.so.6+0xfaef9(mkdir+9)
unlink(any) @ libc.so.6+0xfcb49(unlink+9)
gettimeofday(any, any) @ libc.so.6+0xc6d5e(__gettimeofday_syscall+14)
sysinfo(any) @ libc.so.6+0x10d439(sysinfo+9)
times(any) @ libc.so.6+0xd64f9(times+9)
sigaltstack(0, any) @ libc.so.6+0x11b9dd(____longjmp_chk+77)
sched_getparam(0, any) @ libc.so.6+0xf1119(sched_getparam+9)
sched_setscheduler(0, 0, any) @ libc.so.6+0xf1149(sched_setscheduler+9)
sched_getscheduler(any u32) @ libc.so.6+0xf1179(__sched_getscheduler+9)
sched_get_priority_max(1) @ libc.so.6+0xf11d9(__sched_get_priority_max+9)
sched_get_priority_min(1) @ libc.so.6+0xf1209(sched_get_priority_min+9)
arch_prctl(0x3001, any) @ libc.so.6+0x3fc13(getcontext+131)
gettid() @ libc.so.6+0x8ceb5(__pthread_kill_implementation+245)
time(any) @ libc.so.6+0xc6c59(time_syscall+9)
futex(any, any u8, any u32, 0, any, any)
futex(libgc.so.1+0x2803e0, any u32, 0, 0, 0, -1 as u32)
sched_getaffinity(any u32, 32, non-NULL) @ libc.so.6+0x8c2fe(pthread_getaffinity_np+30)
sched_getaffinity(any u32, 64, non-NULL) @ libc.so.6+0x8c2fe(pthread_getaffinity_np+30)
sched_getaffinity(any u32, 128, non-NULL) @ libc.so.6+0x8c2fe(pthread_getaffinity_np+30)
sched_getaffinity(any u32, 256, non-NULL) @ libc.so.6+0x8c2fe(pthread_getaffinity_np+30)
sched_getaffinity(any u32, 512, non-NULL) @ libc.so.6+0x8c2fe(pthread_getaffinity_np+30)
sched_getaffinity(any u32, 1024, non-NULL) @ libc.so.6+0x8c2fe(pthread_getaffinity_np+30)
sched_getaffinity(any u32, 2048, non-NULL) @ libc.so.6+0x8c2fe(pthread_getaffinity_np+30)
sched_getaffinity(any u32, 0x1000, non-NULL) @ libc.so.6+0x8c2fe(pthread_getaffinity_np+30)
sched_getaffinity(any u32, 0x2000, non-NULL) @ libc.so.6+0x8c2fe(pthread_getaffinity_np+30)
sched_getaffinity(any u32, 0x4000, non-NULL) @ libc.so.6+0x8c2fe(pthread_getaffinity_np+30)
sched_getaffinity(any u32, 0x8000, non-NULL) @ libc.so.6+0x8c2fe(pthread_getaffinity_np+30)
sched_getaffinity(any u32, 0x10000, non-NULL) @ libc.so.6+0x8c2fe(pthread_getaffinity_np+30)
sched_getaffinity(any u32, 0x20000, non-NULL) @ libc.so.6+0x8c2fe(pthread_getaffinity_np+30)
sched_getaffinity(any u32, 0x40000, non-NULL) @ libc.so.6+0x8c2fe(pthread_getaffinity_np+30)
sched_getaffinity(any u32, 0x80000, non-NULL) @ libc.so.6+0x8c2fe(pthread_getaffinity_np+30)
sched_getaffinity(any u32, 0x100000, non-NULL) @ libc.so.6+0x8c2fe(pthread_getaffinity_np+30)
sched_getaffinity(0, 0x1000, any) @ libc.so.6+0x107596(__get_nprocs_sched+54)
getdents64(any u32, any, any) @ libc.so.6+0xd2bc5(getdents64+21)
restart_syscall()
clock_gettime(CLOCK_REALTIME-CLOCK_PROCESS_CPUTIME_ID, any) @ libc.so.6+0xd1f95(__clock_gettime+53)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ libc.so.6+0xd2045(clock_nanosleep+37)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ libc.so.6+0xd2083(clock_nanosleep+99)
exit_group(0) @ ld-linux-x86-64.so.2+0x21e2f(_exit+31)
exit_group(5) @ ld-linux-x86-64.so.2+0x21e2f(_exit+31)
exit_group(127) @ ld-linux-x86-64.so.2+0x21e2f(_exit+31)
exit_group(any u32) @ libc.so.6+0xd6dff(_Exit+47)
tgkill(any u32, 0, any u32) @ libc.so.6+0x8ce97(__pthread_kill_implementation+215)
tgkill(any u32, any u32, any u32) @ libc.so.6+0x8ceca(__pthread_kill_implementation+266)
openat(AT_FDCWD, any, any u8, any) @ libc.so.6+0xfafd3(__open+83)
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0xfafd3(__open+83)
openat(AT_FDCWD, any, O_RDWR|O_EXCL|O_DIRECTORY|O_CLOEXEC|__O_TMPFILE, 0700) @ libc.so.6+0xfafd3(__open+83)
openat(AT_FDCWD, non-NULL, O_WRONLY|O_CREAT|O_APPEND, 0100) @ libc.so.6+0xfafd3(__open+83)
openat(AT_FDCWD, non-NULL, O_WRONLY|O_CREAT|O_APPEND, 0644) @ libc.so.6+0xfafd3(__open+83)
openat(AT_FDCWD, non-NULL, O_RDONLY|O_NOFOLLOW, any) @ libc.so.6+0xfafd3(__open+83)
openat(AT_FDCWD, any, any u8, any) @ libc.so.6+0xfb04e(__open+206)
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0xfb04e(__open+206)
openat(AT_FDCWD, any, O_RDWR|O_EXCL|O_DIRECTORY|O_CLOEXEC|__O_TMPFILE, 0700) @ libc.so.6+0xfb04e(__open+206)
openat(AT_FDCWD, non-NULL, O_WRONLY|O_CREAT|O_APPEND, 0100) @ libc.so.6+0xfb04e(__open+206)
openat(AT_FDCWD, non-NULL, O_WRONLY|O_CREAT|O_APPEND, 0644) @ libc.so.6+0xfb04e(__open+206)
openat(AT_FDCWD, non-NULL, O_RDONLY|O_NOFOLLOW, any) @ libc.so.6+0xfb04e(__open+206)
openat(any u32, libc.so.6+0x1989f3, O_RDONLY, any) @ libc.so.6+0xfb151(openat+65)
openat(any u32, libc.so.6+0x1989f3, O_RDONLY, any) @ libc.so.6+0xfb1de(openat+206)
openat(AT_FDCWD, any, any u8, any) @ libc.so.6+0x1000a3(__open_nocancel+67)
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0x1000a3(__open_nocancel+67)
openat(AT_FDCWD, non-NULL, O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC, any) @ libc.so.6+0x1000a3(__open_nocancel+67)
newfstatat(any u32, any, any, AT_SYMLINK_NOFOLLOW) @ libc.so.6+0xfa81c(fstatat64+12)
newfstatat(any u32, libc.so.6+0x196dd5, any, AT_EMPTY_PATH) @ libc.so.6+0xfa81c(fstatat64+12)
pipe2(any, 0) @ libc.so.6+0xfbafb(pipe+11)
pipe2(any, O_CLOEXEC) @ libc.so.6+0xfbb39(pipe2+9)
prlimit64(0, RLIMIT_STACK, 0, any) @ libc.so.6+0x100892(__getrlimit+18)
prlimit64(0, RLIMIT_NOFILE, 0, any) @ libc.so.6+0x100892(__getrlimit+18)
getrandom(any, 8, GRND_NONBLOCK) @ libc.so.6+0x3fe32(getrandom+18)
getrandom(any, 8, GRND_NONBLOCK) @ libc.so.6+0x3fe6d(getrandom+77)
memfd_create(any, MFD_CLOEXEC) @ libc.so.6+0x10d589(memfd_create+9)
