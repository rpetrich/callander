callander: permitted syscalls: read(any u32, any, any) @ libc.so.6+0xfb27f(__read+15)
read(any u32, any, any) @ libc.so.6+0xfb2ba(__read+74)
read(any u32, any, any) @ libc.so.6+0x1001b6(__read_nocancel+6)
write(any u32, any, any) @ libc.so.6+0xfb322(write+18)
write(any u32, any, any) @ libc.so.6+0xfb35d(write+77)
write(any u32, any, any) @ libc.so.6+0x100229(__write_nocancel+9)
close(any u32) @ libc.so.6+0xfb9e2(close+18)
close(any u32) @ libc.so.6+0xfba08(close+56)
close(any u32) @ libc.so.6+0xffef9(__close_nocancel+9)
poll(any, 1, any) @ libc.so.6+0xff282(__poll+18)
poll(any, 1, any u32) @ libc.so.6+0xff2bd(__poll+77)
lseek(any u32, any, any) @ libc.so.6+0xfb3b9(lseek+9)
mmap(0, 0, PROT_READ|PROT_WRITE, MAP_SHARED, STDIN_FILENO, 0) @ libc.so.6+0x104b65(mmap+21)
mmap(0, any, PROT_READ|PROT_WRITE, any u32, -1 as u32, 0) @ libc.so.6+0x104b65(mmap+21)
mmap(any, any, PROT_NONE-PROT_READ, any u32, any u32, 0) @ libc.so.6+0x104b65(mmap+21)
mprotect(any, any, PROT_READ|PROT_WRITE) @ libc.so.6+0x104be9(mprotect+9)
munmap(any, any) @ libc.so.6+0x104bb9(munmap+9)
brk(any) @ libc.so.6+0x100ce9(brk+9)
rt_sigaction(any u32, any, 0, 8) @ libc.so.6+0x3cc31(__libc_sigaction+193)
rt_sigaction(SIGHUP-SIGINT, 0, any, 8) @ libc.so.6+0x3cc31(__libc_sigaction+193)
rt_sigaction(SIGPIPE, 0, any, 8) @ libc.so.6+0x3cc31(__libc_sigaction+193)
rt_sigaction(SIGTERM, 0, any, 8) @ libc.so.6+0x3cc31(__libc_sigaction+193)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ libc.so.6+0x267b2(abort+141)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ libc.so.6+0x8b947(pthread_create+1559)
rt_sigprocmask(SIG_BLOCK, libc.so.6+0x1a1038(sigall_set), any, 8) @ libc.so.6+0x8ce0d(__pthread_kill_implementation+77)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ libc.so.6+0x8ce58(__pthread_kill_implementation+152)
rt_sigprocmask(SIG_BLOCK, any, any, 8) @ libc.so.6+0x91ef6(pthread_sigmask+70)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ libc.so.6+0x91ef6(pthread_sigmask+70)
rt_sigreturn(any) @ libc.so.6+0x3cb67
ioctl(any u32, TCGETS, any) @ libc.so.6+0x100518(tcgetattr+40)
ioctl(STDIN_FILENO, BLKREPORTZONE, non-NULL) @ libc.so.6+0x100e0d(ioctl+61)
ioctl(any u32, BLKROGET, any) @ libc.so.6+0x100e0d(ioctl+61)
ioctl(any u32, BLKGETSIZE, any) @ libc.so.6+0x100e0d(ioctl+61)
ioctl(any u32, BLKSSZGET, any) @ libc.so.6+0x100e0d(ioctl+61)
ioctl(any u32, BLKIOMIN-BLKDISCARDZEROES, any) @ libc.so.6+0x100e0d(ioctl+61)
ioctl(any u32, CDROMMULTISESSION, any) @ libc.so.6+0x100e0d(ioctl+61)
ioctl(any u32, CDROM_DRIVE_STATUS, INT_MAX) @ libc.so.6+0x100e0d(ioctl+61)
ioctl(any u32, CDROM_GET_CAPABILITY, 0) @ libc.so.6+0x100e0d(ioctl+61)
ioctl(any u32, CDROM_LAST_WRITTEN, any) @ libc.so.6+0x100e0d(ioctl+61)
ioctl(any u32, BLKGETZONESZ, any) @ libc.so.6+0x100e0d(ioctl+61)
ioctl(any u32, BLKGETSIZE64, any) @ libc.so.6+0x100e0d(ioctl+61)
ioctl(any u32, EVMS_GET_STRIPE_INFO, any) @ libc.so.6+0x100e0d(ioctl+61)
ioctl(any u32, FDGETPRM, any) @ libc.so.6+0x100e0d(ioctl+61)
ioctl(any u32, FDGETFDCSTAT, any) @ libc.so.6+0x100e0d(ioctl+61)
ioctl(any u32, GET_ARRAY_INFO, any) @ libc.so.6+0x100e0d(ioctl+61)
pread64(any u32, any, any u32, any u32) @ libc.so.6+0xf9285(__pread64+21)
pread64(any u32, any, any u32, any u32) @ libc.so.6+0xf92c5(__pread64+85)
pwrite64(any u32, any, 0x1-0xffffffff, any u32) @ libc.so.6+0xf9335(__libc_pwrite+21)
pwrite64(any u32, any, 0x1-0xffffffff, any u32) @ libc.so.6+0xf9375(__libc_pwrite+85)
writev(STDERR_FILENO, any, any) @ libc.so.6+0x8105e(__libc_message+510)
writev(any u32, non-NULL, any u32) @ libc.so.6+0x100f02(writev+18)
writev(any u32, non-NULL, any u32) @ libc.so.6+0x100f3b(writev+75)
access(any, F_OK) @ libc.so.6+0xfb3e9(access+9)
access(any, W_OK) @ libc.so.6+0xfb3e9(access+9)
mremap(any, any, any, MREMAP_MAYMOVE, any) @ libc.so.6+0x10cd7d(mremap+45)
madvise(any, any, MADV_HUGEPAGE) @ libc.so.6+0x104cb9(madvise+9)
dup(any u32) @ libc.so.6+0xfba69(dup+9)
dup2(STDIN_FILENO-0xfffffffe, STDIN_FILENO-STDERR_FILENO) @ libc.so.6+0xfba99(__dup2+9)
dup2(STDERR_FILENO--1 as u32, STDOUT_FILENO) @ libc.so.6+0xfba99(__dup2+9)
getpid() @ libc.so.6+0xd8029(getpid+9)
recvmsg(any u32, any, 0) @ libc.so.6+0x10de37(recvmsg+23)
recvmsg(any u32, any, 0) @ libc.so.6+0x10de75(recvmsg+85)
socketpair(AF_UNIX, SOCK_STREAM, 0, any) @ libc.so.6+0x10e19c(socketpair+12)
clone(SIGCHLD|CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID, 0, 0, any, 0) @ libc.so.6+0xd6d35(_Fork+37)
exit(0) @ libc.so.6+0x27574(__libc_start_call_main+164)
wait4(0x1-0xfffffffe, any, 0, 0) @ libc.so.6+0xd65b5(wait4+21)
wait4(0x1-0xfffffffe, any, 0, 0) @ libc.so.6+0xd65f5(wait4+85)
uname(any) @ libc.so.6+0xd64c9(uname+9)
fcntl(STDIN_FILENO, F_SETLKW, any) @ libc.so.6+0xfb7e6(fcntl64+118)
fcntl(STDIN_FILENO, F_OFD_SETLKW, any) @ libc.so.6+0xfb7e6(fcntl64+118)
fcntl(STDIN_FILENO, F_SETLKW, any) @ libc.so.6+0xfb82d(fcntl64+189)
fcntl(STDIN_FILENO, F_OFD_SETLKW, any) @ libc.so.6+0xfb82d(fcntl64+189)
fcntl(any u32, F_SETFD, 1) @ libc.so.6+0xfff63(__fcntl64_nocancel+67)
fcntl(any u32, F_GETFL, any) @ libc.so.6+0xfff63(__fcntl64_nocancel+67)
fcntl(STDIN_FILENO, F_DUPFD-F_SETLK, any) @ libc.so.6+0xffff2(__fcntl64_nocancel_adjusted+34)
fcntl(STDIN_FILENO, F_SETOWN, any) @ libc.so.6+0xffff2(__fcntl64_nocancel_adjusted+34)
fcntl(STDIN_FILENO, F_SETSIG-F_OFD_SETLK, any) @ libc.so.6+0xffff2(__fcntl64_nocancel_adjusted+34)
fcntl(STDIN_FILENO, 0x27-0xffffffff, any) @ libc.so.6+0xffff2(__fcntl64_nocancel_adjusted+34)
fcntl(any u32, F_GETFD, any) @ libc.so.6+0xffff2(__fcntl64_nocancel_adjusted+34)
fcntl(any u32, F_SETFD, any u32) @ libc.so.6+0xffff2(__fcntl64_nocancel_adjusted+34)
fcntl(any u32, F_GETFL, any) @ libc.so.6+0xffff2(__fcntl64_nocancel_adjusted+34)
fcntl(any u32, F_SETFL, any u16) @ libc.so.6+0xffff2(__fcntl64_nocancel_adjusted+34)
fcntl(any u32, F_DUPFD_CLOEXEC, 3) @ libc.so.6+0xffff2(__fcntl64_nocancel_adjusted+34)
fcntl(any u32, F_SETPIPE_SZ, any) @ libc.so.6+0xffff2(__fcntl64_nocancel_adjusted+34)
fcntl(STDIN_FILENO, F_GETOWN_EX, any) @ libc.so.6+0x100025(__fcntl64_nocancel_adjusted+85)
fsync(any u32) @ libc.so.6+0x101ce2(fsync+18)
fsync(any u32) @ libc.so.6+0x101d08(fsync+56)
ftruncate(STDIN_FILENO, any u32) @ libc.so.6+0x1031f9(ftruncate64+9)
getcwd(non-NULL, any) @ libc.so.6+0xfbcd0(getcwd+128)
chdir(libfuse.so.2+0x242a7) @ libc.so.6+0xfbbf9(chdir+9)
rename(any, any) @ libc.so.6+0x59ee9(rename+9)
mkdir(any, 0700) @ libc.so.6+0xfaef9(mkdir+9)
mkdir(libblkid.so.1+0x280f6, 0755) @ libc.so.6+0xfaef9(mkdir+9)
link(any, non-NULL) @ libc.so.6+0xfca29(link+9)
unlink(any) @ libc.so.6+0xfcb49(unlink+9)
readlink(any, any, 4095) @ libc.so.6+0xfcae9(readlink+9)
fchmod(any u32, 0644) @ libc.so.6+0xfad49(fchmod+9)
gettimeofday(any, any) @ libc.so.6+0xc6d5e(__gettimeofday_syscall+14)
sysinfo(any) @ libc.so.6+0x10d439(sysinfo+9)
getuid() @ libc.so.6+0xd8049(getuid+9)
getgid() @ libc.so.6+0xd8069(getgid+9)
setuid(any u32) @ libc.so.6+0xd80d6(setuid+38)
setgid(any u32) @ libc.so.6+0xd8156(setgid+38)
geteuid() @ libc.so.6+0xd8059(geteuid+9)
getegid() @ libc.so.6+0xd8079(getegid+9)
setsid() @ libc.so.6+0xd8359(setsid+9)
setreuid(any u32, -1 as u32) @ libc.so.6+0x1013b6(setreuid+38)
sched_getparam(0, any) @ libc.so.6+0xf1119(sched_getparam+9)
sched_setscheduler(0, 0, any) @ libc.so.6+0xf1149(sched_setscheduler+9)
sched_getscheduler(any u32) @ libc.so.6+0xf1179(__sched_getscheduler+9)
sched_get_priority_max(1) @ libc.so.6+0xf11d9(__sched_get_priority_max+9)
sched_get_priority_min(1) @ libc.so.6+0xf1209(sched_get_priority_min+9)
prctl(PR_GET_DUMPABLE, 0, 0, 0, 0) @ libc.so.6+0x10c77f(prctl+79)
mount(any, non-NULL, non-NULL, any, any) @ libc.so.6+0x10d1cc(mount+12)
umount2(non-NULL, MNT_DETACH) @ libc.so.6+0x10be49(umount2+9)
gettid() @ libc.so.6+0x8ceb5(__pthread_kill_implementation+245)
time(any) @ libc.so.6+0xc6c59(time_syscall+9)
futex(any, any u8, 0, any, 0, -1 as u32)
futex(any, any u8, any u32, 0, any, any)
futex(any, any u32, 0, 0, 0, -1 as u32)
futex(any, FUTEX_WAIT_BITSET, any u32, any, 0, -1 as u32)
sched_getaffinity(0, 0x1000, any) @ libc.so.6+0x107596(__get_nprocs_sched+54)
getdents64(any u32, any, any) @ libc.so.6+0xd2bc5(getdents64+21)
restart_syscall()
fadvise64(any u32, 0, 0, 1) @ libc.so.6+0xff40c(posix_fadvise+12)
fadvise64(any u32, any, any, 3) @ libc.so.6+0xff40c(posix_fadvise+12)
clock_gettime(any u32, any) @ libc.so.6+0xd1f95(__clock_gettime+53)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ libc.so.6+0xd2045(clock_nanosleep+37)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ libc.so.6+0xd2083(clock_nanosleep+99)
exit_group(0) @ ld-linux-x86-64.so.2+0x21e2f(_exit+31)
exit_group(5) @ ld-linux-x86-64.so.2+0x21e2f(_exit+31)
exit_group(127) @ ld-linux-x86-64.so.2+0x21e2f(_exit+31)
exit_group(any u32) @ libc.so.6+0xd6dff(_Exit+47)
tgkill(any u32, 0, any u32) @ libc.so.6+0x8ce97(__pthread_kill_implementation+215)
tgkill(any u32, any u32, any u32) @ libc.so.6+0x8ceca(__pthread_kill_implementation+266)
openat(AT_FDCWD, any, any u32, any) @ libc.so.6+0xfafd3(__open+83)
openat(AT_FDCWD, any, any u32, any) @ libc.so.6+0xfb04e(__open+206)
openat(any u32, any, any u32, any) @ libc.so.6+0xfb151(openat+65)
openat(any u32, any, any u32, any) @ libc.so.6+0xfb1de(openat+206)
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0x1000a3(__open_nocancel+67)
openat(AT_FDCWD, any, O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC, any) @ libc.so.6+0x1000a3(__open_nocancel+67)
openat(AT_FDCWD, libc.so.6+0x19b8d0, O_RDONLY, any) @ libc.so.6+0x1000a3(__open_nocancel+67)
newfstatat(any u32, any, any, 0) @ libc.so.6+0xfa81c(fstatat64+12)
newfstatat(any u32, any, any, AT_SYMLINK_NOFOLLOW) @ libc.so.6+0xfa81c(fstatat64+12)
newfstatat(any u32, libc.so.6+0x196dd5, any, AT_EMPTY_PATH) @ libc.so.6+0xfa81c(fstatat64+12)
faccessat(any u32, any, R_OK) @ libc.so.6+0xfb67f(faccessat+303)
faccessat(any u32, libblkid.so.1+0x28447, F_OK) @ libc.so.6+0xfb67f(faccessat+303)
faccessat(any u32, libblkid.so.1+0x2ba27, F_OK) @ libc.so.6+0xfb67f(faccessat+303)
faccessat(any u32, libblkid.so.1+0x2ba38, F_OK) @ libc.so.6+0xfb67f(faccessat+303)
faccessat(any u32, libblkid.so.1+0x2ba4e, F_OK) @ libc.so.6+0xfb67f(faccessat+303)
faccessat(any u32, libblkid.so.1+0x2ba64, F_OK) @ libc.so.6+0xfb67f(faccessat+303)
faccessat(any u32, libblkid.so.1+0x2ba7e, F_OK) @ libc.so.6+0xfb67f(faccessat+303)
set_robust_list(any, 24) @ libc.so.6+0xd6d6f(_Fork+95)
splice(STDIN_FILENO, 0, any u32, 0, any u32, SPLICE_F_GIFT) @ libc.so.6+0x10c405(splice+21)
splice(any u32, 0, any u32, 0, any, 0) @ libc.so.6+0x10c405(splice+21)
splice(STDIN_FILENO, 0, any u32, 0, any u32, SPLICE_F_GIFT) @ libc.so.6+0x10c459(splice+105)
splice(any u32, 0, any u32, 0, any, 0) @ libc.so.6+0x10c459(splice+105)
vmsplice(STDIN_FILENO, any, 1, SPLICE_F_NONBLOCK) @ libc.so.6+0x10c355(vmsplice+21)
vmsplice(STDIN_FILENO, any, 1, SPLICE_F_NONBLOCK) @ libc.so.6+0x10c394(vmsplice+84)
pipe2(any, 0) @ libc.so.6+0xfbafb(pipe+11)
prlimit64(0, RLIMIT_FSIZE, 0, any) @ libc.so.6+0x100892(__getrlimit+18)
prlimit64(0, RLIMIT_NOFILE, 0, any) @ libc.so.6+0x100892(__getrlimit+18)
prlimit64(0, RLIMIT_FSIZE, any, 0) @ libc.so.6+0x1008d3(setrlimit64+19)
getrandom(any, 8, GRND_NONBLOCK) @ libc.so.6+0x3fe32(getrandom+18)
getrandom(any, 8, GRND_NONBLOCK) @ libc.so.6+0x3fe6d(getrandom+77)
faccessat2(any u32, any, R_OK, 0) @ libc.so.6+0xfb580(faccessat+48)
faccessat2(any u32, libblkid.so.1+0x28447, F_OK, 0) @ libc.so.6+0xfb580(faccessat+48)
faccessat2(any u32, libblkid.so.1+0x2ba27, F_OK, 0) @ libc.so.6+0xfb580(faccessat+48)
faccessat2(any u32, libblkid.so.1+0x2ba38, F_OK, 0) @ libc.so.6+0xfb580(faccessat+48)
faccessat2(any u32, libblkid.so.1+0x2ba4e, F_OK, 0) @ libc.so.6+0xfb580(faccessat+48)
faccessat2(any u32, libblkid.so.1+0x2ba64, F_OK, 0) @ libc.so.6+0xfb580(faccessat+48)
faccessat2(any u32, libblkid.so.1+0x2ba7e, F_OK, 0) @ libc.so.6+0xfb580(faccessat+48)
