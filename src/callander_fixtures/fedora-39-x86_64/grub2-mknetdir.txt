callander: permitted syscalls: read(any u32, any, any) @ libc.so.6+0x10844f(__read+15)
read(any u32, any, any) @ libc.so.6+0x108488(__read+72)
read(any u32, any, any) @ libc.so.6+0x1093d6(__read_nocancel+6)
write(any u32, any, any) @ libc.so.6+0x108f62(__write+18)
write(any u32, any, any) @ libc.so.6+0x108f9b(__write+75)
write(any u32, any, any) @ libc.so.6+0x1094a9(__write_nocancel+9)
close(any u32) @ libc.so.6+0x103882(__close+18)
close(any u32) @ libc.so.6+0x1038aa(__close+58)
close(any u32) @ libc.so.6+0x108ff9(__close_nocancel+9)
lseek(any u32, any, any) @ libc.so.6+0x1079c9(__lseek+9)
mmap(0, any, PROT_READ, MAP_SHARED-MAP_PRIVATE, any u32, 0) @ libc.so.6+0x11199a(mmap+42)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS-0xffffffff, -1 as u32, 0) @ libc.so.6+0x11199a(mmap+42)
mmap(any, any, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS-0xffffffff, -1 as u32, 0) @ libc.so.6+0x11199a(mmap+42)
mmap(0, any, PROT_NONE, MAP_32BIT-0xffffffff, -1 as u32, 0) @ libc.so.6+0x1119fd(mmap+141)
mmap(0, any, PROT_READ, MAP_32BIT-MAP_PRIVATE|MAP_32BIT, any u32, 0) @ libc.so.6+0x1119fd(mmap+141)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_32BIT-0xffffffff, -1 as u32, 0) @ libc.so.6+0x1119fd(mmap+141)
mprotect(any, any, PROT_READ|PROT_WRITE) @ libc.so.6+0x112299(__mprotect+9)
munmap(any, any) @ libc.so.6+0x1123c9(__munmap+9)
brk(any) @ libc.so.6+0x10a069(brk+9)
rt_sigaction(SIGABRT, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x3ea88(__libc_sigaction+216)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x268b5(abort+149)
rt_sigprocmask(SIG_BLOCK, libc.so.6+0x1ab4d0(sigall_set), any, sizeof(kernel_sigset_t)) @ libc.so.6+0x907e2(__pthread_kill_implementation+82)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x9082e(__pthread_kill_implementation+158)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x95a16(pthread_sigmask+70)
rt_sigreturn(any) @ libc.so.6+0x3e9a7
ioctl(any u32, TCGETS, any) @ libc.so.6+0x1097bc(tcgetattr+44)
ioctl(any u32, any u32, any) @ libc.so.6+0x11146b(ioctl+59)
pread64(STDIN_FILENO-0xfffffffe, any, 511, 0) @ libc.so.6+0x10939c(__pread64_nocancel+12)
readv(any u32, any, 1) @ libc.so.6+0x112fe2(readv+18)
readv(any u32, any, 3) @ libc.so.6+0x112fe2(readv+18)
readv(any u32, any, any u32) @ libc.so.6+0x113019(readv+73)
writev(STDERR_FILENO, any, any) @ libc.so.6+0x83b9b(__libc_message+475)
writev(any u32, any, any u32) @ libc.so.6+0x115772(writev+18)
writev(any u32, any, any u32) @ libc.so.6+0x1157a9(writev+73)
access("/var/run/setrans/.setrans-unix", F_OK) @ libc.so.6+0x1037b9(access+9)
access("/run/udev/control", F_OK) @ libc.so.6+0x1037b9(access+9)
mremap(any, any, any, MREMAP_MAYMOVE, any) @ libc.so.6+0x1161f4(mremap+52)
madvise(any, any, MADV_DONTNEED) @ libc.so.6+0x111739(madvise+9)
madvise(any, any, MADV_HUGEPAGE) @ libc.so.6+0x111739(madvise+9)
dup(STDIN_FILENO-0xfffffffe) @ libc.so.6+0x103ac9(dup+9)
dup2(any u32, STDIN_FILENO-STDERR_FILENO) @ libc.so.6+0x103af9(__dup2+9)
getpid() @ libc.so.6+0xe87a9(__getpid+9)
getpid() @ libc.so.6+0x1138db(syscall+27)
socket(AF_UNIX, SOCK_STREAM, 0) @ libc.so.6+0x118109(socket+9)
socket(AF_UNIX, SOCK_STREAM|SOCK_CLOEXEC, 0) @ libc.so.6+0x118109(socket+9)
connect(any u32, any, 110) @ libc.so.6+0x117792(connect+18)
connect(any u32, any, any u32) @ libc.so.6+0x1177c9(connect+73)
sendmsg(any u32, any, MSG_NOSIGNAL) @ libc.so.6+0x117e22(sendmsg+18)
sendmsg(any u32, any, any u32) @ libc.so.6+0x117e59(sendmsg+73)
clone(SIGCHLD|CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID, 0, 0, any, 0) @ libc.so.6+0xdd925(_Fork+37)
exit(0) @ libc.so.6+0x2816c(__libc_start_call_main+156)
wait4(any u32, any, 0, 0) @ libc.so.6+0xfefe5(wait4+21)
wait4(any u32, any, any u32, any) @ libc.so.6+0xff021(wait4+81)
uname(any) @ libc.so.6+0xfef29(uname+9)
semget(0x1-0xffffffff, 1, 0) @ libc.so.6+0x118409(semget+9)
semget(0xd4d0000-0xd4dffff, 1, 0600) @ libc.so.6+0x118409(semget+9)
semctl(0, 0, SEM_INFO, any) @ libc.so.6+0x118474(semctl+68)
semctl(any u32, 0, IPC_RMID, any) @ libc.so.6+0x118474(semctl+68)
semctl(any u32, 0, GETVAL, any) @ libc.so.6+0x118474(semctl+68)
semctl(any u32, 0, SETVAL, any) @ libc.so.6+0x118474(semctl+68)
fcntl(any u32, F_SETFD, FD_CLOEXEC) @ libc.so.6+0x109100(__fcntl64_nocancel+64)
fcntl(any u32, F_GETFL, any) @ libc.so.6+0x109100(__fcntl64_nocancel+64)
fcntl(STDIN_FILENO-0xfffffffe, F_GETFL, libc.so.6+0x1a0e96) @ libc.so.6+0x109185(__fcntl64_nocancel_adjusted+37)
fcntl(any u32, F_SETFD, FD_CLOEXEC) @ libc.so.6+0x109185(__fcntl64_nocancel_adjusted+37)
fcntl(any u32, F_GETFL, /usr/bin/grub2-mknetdir+0x6fd1e) @ libc.so.6+0x109185(__fcntl64_nocancel_adjusted+37)
fcntl(any u32, F_SETFL, any u16) @ libc.so.6+0x109185(__fcntl64_nocancel_adjusted+37)
fsync(any u32) @ libc.so.6+0x10b542(fsync+18)
fsync(any u32) @ libc.so.6+0x10b56a(fsync+58)
getcwd(non-NULL, any) @ libc.so.6+0x106e79(getcwd+137)
rename(any, any) @ libc.so.6+0x5ca39(rename+9)
mkdir(any, 0755) @ libc.so.6+0x107a19(mkdir+9)
mkdir(any, 0777) @ libc.so.6+0x107a19(mkdir+9)
unlink(any) @ libc.so.6+0x108df9(unlink+9)
chown(any, any u32, any u32) @ libc.so.6+0x103849(chown+9)
umask(any u32) @ libc.so.6+0x108de9(umask+9)
gettimeofday(any, any) @ libc.so.6+0xcd13e(__gettimeofday_syscall+14)
sysinfo(any) @ libc.so.6+0x116f99(sysinfo+9)
setuid(any) @ libc.so.6+0x8ba8f(__GI___nptl_setxid_sighandler+79)
setuid(any) @ libc.so.6+0x8be18(__nptl_setxid+664)
setuid(any) @ libc.so.6+0x1138db(syscall+27)
setgid(any) @ libc.so.6+0x8ba8f(__GI___nptl_setxid_sighandler+79)
setgid(any) @ libc.so.6+0x8be18(__nptl_setxid+664)
setgid(any) @ libc.so.6+0x1138db(syscall+27)
geteuid() @ libc.so.6+0xe77b9(geteuid+9)
setgroups(any, any) @ libc.so.6+0x8ba8f(__GI___nptl_setxid_sighandler+79)
setgroups(any, any) @ libc.so.6+0x8be18(__nptl_setxid+664)
setgroups(any, any) @ libc.so.6+0x1138db(syscall+27)
capset(any, any) @ libc.so.6+0x1138db(syscall+27)
sched_getparam(any u32, any) @ libc.so.6+0xfd0c9(sched_getparam+9)
sched_setscheduler(any u32, any u32, any) @ libc.so.6+0xfd219(__sched_setscheduler+9)
sched_getscheduler(any u32) @ libc.so.6+0xfd0f9(sched_getscheduler+9)
sched_get_priority_max(1) @ libc.so.6+0xfd129(sched_get_priority_max+9)
sched_get_priority_min(1) @ libc.so.6+0xfd159(__sched_get_priority_min+9)
prctl(any, any, any, any, any) @ libc.so.6+0x1138db(syscall+27)
chroot(any) @ libc.so.6+0x1138db(syscall+27)
gettid() @ libc.so.6+0x9088d(__pthread_kill_implementation+253)
gettid() @ libc.so.6+0x117179(gettid+9)
getxattr(any, "security.sehash", any, 32) @ libc.so.6+0x10cebc(getxattr+12)
futex(any, any u8, 0x1-0xffffffff, 0, any, any)
futex(any, any u32, 0, any, 0, -1 as u32)
futex(any, any u32, any u32, 0, 0, -1 as u32)
futex(any, FUTEX_LOCK_PI-FUTEX_UNLOCK_PI, 0, 0, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any u32, 0, 202, any)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG-FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any, any)
sched_getaffinity(0, 0x1000, any) @ libc.so.6+0x10c3a6(__get_nprocs_sched+54)
getdents64(any u32, any, any) @ libc.so.6+0xd9e05(getdents64+21)
restart_syscall()
semtimedop(any u32, any, 1, 0) @ libc.so.6+0x1184fc(semtimedop+12)
clock_gettime(CLOCK_MONOTONIC, any) @ libc.so.6+0xd90dd(clock_gettime+45)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ libc.so.6+0xd91a5(clock_nanosleep+37)
clock_nanosleep(any u32, any u32, any, any) @ libc.so.6+0xd91e1(clock_nanosleep+97)
exit_group(NULL-0x1fe) @ ld-linux-x86-64.so.2+0x22233(_exit+19)
exit_group(any u32) @ libc.so.6+0xdd99b(_exit+27)
tgkill(any u32, any u32, SIGABRT) @ libc.so.6+0x90871(__pthread_kill_implementation+225)
tgkill(any u32, any u32, SIGFPE) @ libc.so.6+0x90871(__pthread_kill_implementation+225)
tgkill(any u32, any u32, SIGABRT) @ libc.so.6+0x908a2(__pthread_kill_implementation+274)
tgkill(any u32, any u32, SIGFPE) @ libc.so.6+0x908a2(__pthread_kill_implementation+274)
openat(AT_FDCWD, any, any u32, any) @ libc.so.6+0x107b63(__open+83)
openat(AT_FDCWD, any, any u32, any) @ libc.so.6+0x107bd3(__open+195)
openat(any u32, "..", O_RDONLY, any) @ libc.so.6+0x107cd0(openat+64)
openat(any u32, any, any u32, any) @ libc.so.6+0x107d45(openat+181)
openat(AT_FDCWD, any, O_RDONLY-O_WRONLY, any) @ libc.so.6+0x1092a2(__open_nocancel+66)
openat(AT_FDCWD, any, O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC, any) @ libc.so.6+0x1092a2(__open_nocancel+66)
openat(AT_FDCWD, non-NULL, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0x1092a2(__open_nocancel+66)
openat(AT_FDCWD, "/sys/kernel/mm/hugepages", O_RDONLY|O_DIRECTORY, any) @ libc.so.6+0x1092a2(__open_nocancel+66)
mknodat(AT_FDCWD, any, 020600, any u32) @ libc.so.6+0x107ad5(mknodat+21)
mknodat(AT_FDCWD, any, 060000-037777777777, any u32) @ libc.so.6+0x107ad5(mknodat+21)
newfstatat(any u32, any, any, AT_SYMLINK_NOFOLLOW) @ libc.so.6+0x10451c(fstatat64+12)
newfstatat(any u32, "", any, AT_EMPTY_PATH) @ libc.so.6+0x10451c(fstatat64+12)
newfstatat(AT_FDCWD, any, any, 0) @ libc.so.6+0x10451c(fstatat64+12)
set_robust_list(any, sizeof(struct robust_list_head)) @ libc.so.6+0xdd95f(_Fork+95)
pipe2(any, 0) @ libc.so.6+0x107e0b(__pipe+11)
getrandom(libc.so.6+0x1df178(tcache_key), 8, GRND_NONBLOCK) @ libc.so.6+0x9b677(ptmalloc_init.part.0+55)
