callander: permitted syscalls: read(any u32, any, any) @ libc.so.6+0x10844f(__read+15)
read(any u32, any, any) @ libc.so.6+0x108488(__read+72)
read(any u32, any, any) @ libc.so.6+0x1093d6(__read_nocancel+6)
write(any u32, any, any) @ libc.so.6+0x108f62(__write+18)
write(any u32, any, any) @ libc.so.6+0x108f9b(__write+75)
write(any u32, any, any) @ libc.so.6+0x1094a9(__write_nocancel+9)
close(any u32) @ libc.so.6+0x103882(__close+18)
close(any u32) @ libc.so.6+0x1038aa(__close+58)
close(any u32) @ libc.so.6+0x108ff9(__close_nocancel+9)
poll(any, 2, -1 as u32) @ libc.so.6+0x107e82(poll+18)
poll(any, any, any u32) @ libc.so.6+0x107ebb(poll+75)
lseek(any u32, any, any) @ libc.so.6+0x1079c9(__lseek+9)
mmap(0, any, PROT_READ, MAP_SHARED-MAP_PRIVATE, any u32, 0) @ libc.so.6+0x11199a(mmap+42)
mmap(0, any, PROT_READ|PROT_WRITE, any u32, -1 as u32, 0) @ libc.so.6+0x11199a(mmap+42)
mmap(any, any, PROT_NONE, any u32, -1 as u32, 0) @ libc.so.6+0x11199a(mmap+42)
mmap(0, any, PROT_NONE, any u32, -1 as u32, 0) @ libc.so.6+0x1119fd(mmap+141)
mmap(0, any, PROT_READ, MAP_SHARED-MAP_PRIVATE|MAP_32BIT, any u32, 0) @ libc.so.6+0x1119fd(mmap+141)
mmap(0, any, PROT_READ|PROT_WRITE, any u32, -1 as u32, 0) @ libc.so.6+0x1119fd(mmap+141)
mprotect(any, any, PROT_READ|PROT_WRITE) @ libc.so.6+0x112299(__mprotect+9)
munmap(any, any) @ libc.so.6+0x1123c9(__munmap+9)
brk(any) @ libc.so.6+0x10a069(brk+9)
rt_sigaction(0x0-0xfffffffe, any, any, sizeof(kernel_sigset_t)) @ libc.so.6+0x3ea88(__libc_sigaction+216)
rt_sigaction(any u32, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x3ea88(__libc_sigaction+216)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x268b5(abort+149)
rt_sigprocmask(SIG_BLOCK, libc.so.6+0x1ab4d0(sigall_set), any, sizeof(kernel_sigset_t)) @ libc.so.6+0x907e2(__pthread_kill_implementation+82)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x9082e(__pthread_kill_implementation+158)
rt_sigprocmask(SIG_BLOCK, any, any, sizeof(kernel_sigset_t)) @ libc.so.6+0x95a16(pthread_sigmask+70)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x95a16(pthread_sigmask+70)
rt_sigreturn(any) @ libc.so.6+0x3e9a7
ioctl(any u32, TCSETSW-TCSETSF, any) @ libc.so.6+0x1096d4(tcsetattr+132)
ioctl(any u32, TCGETS, any) @ libc.so.6+0x1096f8(tcsetattr+168)
ioctl(any u32, TCGETS, any) @ libc.so.6+0x1097bc(tcgetattr+44)
ioctl(STDIN_FILENO-0xfffffffe, USBDEVFS_CONTROL, any) @ libc.so.6+0x11146b(ioctl+59)
ioctl(any u32, TIOCGWINSZ, any) @ libc.so.6+0x11146b(ioctl+59)
ioctl(any u32, FIONREAD, any) @ libc.so.6+0x11146b(ioctl+59)
ioctl(any u32, SIOCGIFNAME, any) @ libc.so.6+0x11146b(ioctl+59)
ioctl(any u32, SIOCGIFCONF, any) @ libc.so.6+0x11146b(ioctl+59)
ioctl(any u32, SIOCGIFNETMASK, any) @ libc.so.6+0x11146b(ioctl+59)
ioctl(any u32, SIOCGIFINDEX, any) @ libc.so.6+0x11146b(ioctl+59)
ioctl(any u32, MON_IOCT_RING_SIZE, NULL-0x12c000) @ libc.so.6+0x11146b(ioctl+59)
ioctl(any u32, MON_IOCT_RING_SIZE, 0x80000000-0xffffffff) @ libc.so.6+0x11146b(ioctl+59)
ioctl(any u32, MON_IOCH_MFLUSH, any u32) @ libc.so.6+0x11146b(ioctl+59)
ioctl(any u32, MON_IOCX_GET, any) @ libc.so.6+0x11146b(ioctl+59)
ioctl(any u32, HCIGETDEVLIST, non-NULL) @ libc.so.6+0x11146b(ioctl+59)
ioctl(any u32, HCIGETDEVINFO, any) @ libc.so.6+0x11146b(ioctl+59)
ioctl(any u32, MON_IOCG_STATS, any) @ libc.so.6+0x11146b(ioctl+59)
ioctl(any u32, MON_IOCX_MFETCH, any) @ libc.so.6+0x11146b(ioctl+59)
ioctl(any u32, RDMA_VERBS_IOCTL, any) @ libc.so.6+0x11146b(ioctl+59)
pread64(STDIN_FILENO-0xfffffffe, any, 511, 0) @ libc.so.6+0x10939c(__pread64_nocancel+12)
writev(STDERR_FILENO, any, any) @ libc.so.6+0x83b9b(__libc_message+475)
access(any, X_OK|W_OK|R_OK) @ libc.so.6+0x1037b9(access+9)
access(non-NULL, R_OK) @ libc.so.6+0x1037b9(access+9)
sched_yield() @ libc.so.6+0xfd249(sched_yield+9)
mremap(any, any, any, MREMAP_MAYMOVE, any) @ libc.so.6+0x1161f4(mremap+52)
madvise(any, any, any u32) @ libc.so.6+0x111739(madvise+9)
dup(STDIN_FILENO-0xfffffffe) @ libc.so.6+0x103ac9(dup+9)
getpid() @ libc.so.6+0xe87a9(__getpid+9)
socket(any u32, SOCK_DGRAM|SOCK_CLOEXEC, 0) @ libc.so.6+0x118109(socket+9)
socket(AF_NETLINK, SOCK_RAW, 0) @ libc.so.6+0x118109(socket+9)
socket(AF_NETLINK, SOCK_RAW, 12) @ libc.so.6+0x118109(socket+9)
socket(AF_NETLINK, SOCK_RAW|SOCK_CLOEXEC, 0) @ libc.so.6+0x118109(socket+9)
socket(AF_NETLINK, SOCK_RAW|SOCK_CLOEXEC, 20) @ libc.so.6+0x118109(socket+9)
socket(AF_BLUETOOTH, SOCK_RAW, 1) @ libc.so.6+0x118109(socket+9)
connect(any u32, any, any u32) @ libc.so.6+0x117792(connect+18)
connect(any u32, any, any u32) @ libc.so.6+0x1177c9(connect+73)
sendto(any u32, any, any u32, 0, any, 12) @ libc.so.6+0x117ec5(sendto+21)
sendto(any u32, any, any, any u32, any, any u32) @ libc.so.6+0x117f12(sendto+98)
recvfrom(any u32, any, any u32, 0, 0, 0) @ libc.so.6+0x1179eb(__recv+27)
recvfrom(any u32, any, any, any u32, 0, 0) @ libc.so.6+0x117a38(__recv+104)
recvfrom(any u32, any, 1024, 0, any, any) @ libc.so.6+0x117aa5(recvfrom+21)
recvfrom(any u32, any, any, any u32, any, any) @ libc.so.6+0x117af2(recvfrom+98)
sendmsg(any u32, any, 0) @ libc.so.6+0x117e22(sendmsg+18)
sendmsg(any u32, any, any u32) @ libc.so.6+0x117e59(sendmsg+73)
recvmsg(any u32, any, 0) @ libc.so.6+0x117c1b(recvmsg+27)
recvmsg(any u32, any, MSG_CTRUNC) @ libc.so.6+0x117c1b(recvmsg+27)
recvmsg(any u32, any, MSG_PEEK|MSG_TRUNC) @ libc.so.6+0x117c1b(recvmsg+27)
recvmsg(any u32, any, any u32) @ libc.so.6+0x117c59(recvmsg+89)
bind(any u32, any, 6) @ libc.so.6+0x117759(bind+9)
bind(any u32, any, 12) @ libc.so.6+0x117759(bind+9)
getsockname(any u32, any, any) @ libc.so.6+0x117859(getsockname+9)
setsockopt(any u32, SOL_IP, IP_TOS, any, 4) @ libc.so.6+0x117f7c(setsockopt+12)
setsockopt(any u32, SOL_IP, IP_TTL, any, 16) @ libc.so.6+0x117f7c(setsockopt+12)
setsockopt(any u32, SOL_IP, IP_HDRINCL, any, 4) @ libc.so.6+0x117f7c(setsockopt+12)
setsockopt(any u32, SOL_SOCKET, SO_SNDBUF-SO_RCVBUF, any, 4) @ libc.so.6+0x117f7c(setsockopt+12)
setsockopt(any u32, SOL_SOCKET, SO_TIMESTAMP_OLD, any, 4) @ libc.so.6+0x117f7c(setsockopt+12)
setsockopt(any u32, SOL_SOCKET, SO_SNDBUFFORCE-SO_RCVBUFFORCE, any, 4) @ libc.so.6+0x117f7c(setsockopt+12)
setsockopt(any u32, SOL_NETLINK, NETLINK_ADD_MEMBERSHIP, any, 4) @ libc.so.6+0x117f7c(setsockopt+12)
setsockopt(any u32, SOL_NETLINK, NETLINK_EXT_ACK, any, 4) @ libc.so.6+0x117f7c(setsockopt+12)
getsockopt(any u32, SOL_SOCKET, SO_SNDBUF-SO_RCVBUF, any, any) @ libc.so.6+0x11788c(getsockopt+12)
clone(SIGCHLD|CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID, 0, 0, any, 0) @ libc.so.6+0xdd925(_Fork+37)
exit(0) @ libc.so.6+0x2816c(__libc_start_call_main+156)
wait4(any u32, any, 0, 0) @ libc.so.6+0xfefe5(wait4+21)
wait4(any u32, any, any u32, any) @ libc.so.6+0xff021(wait4+81)
kill(0, any u32) @ libc.so.6+0x3eba9(kill+9)
uname(any) @ libc.so.6+0xfef29(uname+9)
fcntl(any u32, F_SETFD, FD_CLOEXEC) @ libc.so.6+0x109100(__fcntl64_nocancel+64)
fcntl(any u32, F_GETFL, any) @ libc.so.6+0x109100(__fcntl64_nocancel+64)
fcntl(STDIN_FILENO-0xfffffffe, F_GETFL, libedit.so.0+0x30bae) @ libc.so.6+0x109185(__fcntl64_nocancel_adjusted+37)
fcntl(STDIN_FILENO-0xfffffffe, F_GETFL, libc.so.6+0x1a0e96) @ libc.so.6+0x109185(__fcntl64_nocancel_adjusted+37)
fcntl(any u32, F_GETFL, 0) @ libc.so.6+0x109185(__fcntl64_nocancel_adjusted+37)
fcntl(any u32, F_SETFL, any u16) @ libc.so.6+0x109185(__fcntl64_nocancel_adjusted+37)
getcwd(non-NULL, any) @ libc.so.6+0x106e79(getcwd+137)
mkdir(any, 0700) @ libc.so.6+0x107a19(mkdir+9)
unlink(any) @ libc.so.6+0x108df9(unlink+9)
readlink(any, any, 128) @ libc.so.6+0x1084e9(readlink+9)
gettimeofday(any, any) @ libc.so.6+0xcd13e(__gettimeofday_syscall+14)
sysinfo(any) @ libc.so.6+0x116f99(sysinfo+9)
getuid() @ libc.so.6+0xe8859(getuid+9)
getgid() @ libc.so.6+0xe77c9(getgid+9)
geteuid() @ libc.so.6+0xe77b9(geteuid+9)
getegid() @ libc.so.6+0xe77a9(getegid+9)
setfsuid(any u32) @ libc.so.6+0x8ba8f(__GI___nptl_setxid_sighandler+79)
setfsuid(any u32) @ libc.so.6+0x8be18(__nptl_setxid+664)
setfsuid(any u32) @ libc.so.6+0x1165d9(setfsuid+9)
setfsgid(any u32) @ libc.so.6+0x8ba8f(__GI___nptl_setxid_sighandler+79)
setfsgid(any u32) @ libc.so.6+0x8be18(__nptl_setxid+664)
setfsgid(any u32) @ libc.so.6+0x1165a9(setfsgid+9)
sched_getparam(any u32, any) @ libc.so.6+0xfd0c9(sched_getparam+9)
sched_setscheduler(any u32, any u32, any) @ libc.so.6+0xfd219(__sched_setscheduler+9)
sched_getscheduler(any u32) @ libc.so.6+0xfd0f9(sched_getscheduler+9)
sched_get_priority_max(1) @ libc.so.6+0xfd129(sched_get_priority_max+9)
sched_get_priority_min(1) @ libc.so.6+0xfd159(__sched_get_priority_min+9)
gettid() @ libc.so.6+0x9088d(__pthread_kill_implementation+253)
time(any) @ libc.so.6+0xcd039(time_syscall+9)
futex(any, any u8, any u32, 0, any, any)
futex(any, any u32, 0, any, 0, -1 as u32)
futex(any, any u32, any u32, 0, 0, -1 as u32)
sched_getaffinity(0, 0x1000, any) @ libc.so.6+0x10c3a6(__get_nprocs_sched+54)
getdents64(any u32, any, any) @ libc.so.6+0xd9e05(getdents64+21)
restart_syscall()
clock_gettime(CLOCK_MONOTONIC, any) @ libc.so.6+0xd90dd(clock_gettime+45)
clock_gettime(CLOCK_REALTIME_COARSE, any) @ libc.so.6+0xd90dd(clock_gettime+45)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ libc.so.6+0xd91a5(clock_nanosleep+37)
clock_nanosleep(any u32, any u32, any, any) @ libc.so.6+0xd91e1(clock_nanosleep+97)
exit_group(NULL-0x1fe) @ ld-linux-x86-64.so.2+0x22233(_exit+19)
exit_group(any u32) @ libc.so.6+0xdd99b(_exit+27)
tgkill(any u32, any u32, SIGABRT) @ libc.so.6+0x90871(__pthread_kill_implementation+225)
tgkill(any u32, any u32, SIGFPE) @ libc.so.6+0x90871(__pthread_kill_implementation+225)
tgkill(any u32, any u32, SIGABRT) @ libc.so.6+0x908a2(__pthread_kill_implementation+274)
tgkill(any u32, any u32, SIGFPE) @ libc.so.6+0x908a2(__pthread_kill_implementation+274)
inotify_add_watch(STDIN_FILENO-0xfffffffe, "/dev/char/", IN_CREATE) @ libc.so.6+0x116c69(inotify_add_watch+9)
openat(AT_FDCWD, any, O_RDONLY-O_CREAT|O_EXCL, any) @ libc.so.6+0x107b63(__open+83)
openat(AT_FDCWD, any, O_WRONLY|O_CREAT|O_TRUNC, any u32) @ libc.so.6+0x107b63(__open+83)
openat(AT_FDCWD, any, O_RDWR|O_CLOEXEC, any) @ libc.so.6+0x107b63(__open+83)
openat(AT_FDCWD, non-NULL, O_RDWR|O_CREAT|O_APPEND, any u32) @ libc.so.6+0x107b63(__open+83)
openat(AT_FDCWD, non-NULL, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0x107b63(__open+83)
openat(AT_FDCWD, any, O_RDONLY-O_CREAT|O_EXCL, any) @ libc.so.6+0x107bd3(__open+195)
openat(AT_FDCWD, any, O_WRONLY|O_CREAT|O_TRUNC, any u32) @ libc.so.6+0x107bd3(__open+195)
openat(AT_FDCWD, any, O_RDWR|O_CLOEXEC, any) @ libc.so.6+0x107bd3(__open+195)
openat(AT_FDCWD, non-NULL, O_RDWR|O_CREAT|O_APPEND, any u32) @ libc.so.6+0x107bd3(__open+195)
openat(AT_FDCWD, non-NULL, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0x107bd3(__open+195)
openat(STDIN_FILENO-0xfffffffe, any, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0x107cd0(openat+64)
openat(any u32, any, O_RDONLY|O_DIRECTORY|O_CLOEXEC, any) @ libc.so.6+0x107cd0(openat+64)
openat(any u32, "..", O_RDONLY, any) @ libc.so.6+0x107cd0(openat+64)
openat(any u32, any, any u32, any) @ libc.so.6+0x107d45(openat+181)
openat(AT_FDCWD, any, O_RDONLY, any) @ libc.so.6+0x1092a2(__open_nocancel+66)
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0x1092a2(__open_nocancel+66)
openat(AT_FDCWD, any, O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC, any) @ libc.so.6+0x1092a2(__open_nocancel+66)
openat(AT_FDCWD, non-NULL, O_RDWR|O_CREAT|O_APPEND, any u32) @ libc.so.6+0x1092a2(__open_nocancel+66)
openat(AT_FDCWD, "/sys/kernel/mm/hugepages", O_RDONLY|O_DIRECTORY, any) @ libc.so.6+0x1092a2(__open_nocancel+66)
newfstatat(any u32, any, any, AT_SYMLINK_NOFOLLOW) @ libc.so.6+0x10451c(fstatat64+12)
newfstatat(any u32, "", any, AT_EMPTY_PATH) @ libc.so.6+0x10451c(fstatat64+12)
newfstatat(AT_FDCWD, any, any, 0) @ libc.so.6+0x10451c(fstatat64+12)
pselect6(any u32, any, 0, 0, any, 0) @ libc.so.6+0x1132bc(select+172)
pselect6(any u32, any, any, any, any, 0) @ libc.so.6+0x113355(select+325)
set_robust_list(any, sizeof(struct robust_list_head)) @ libc.so.6+0xdd95f(_Fork+95)
timerfd_create(CLOCK_MONOTONIC, TFD_CLOEXEC) @ libc.so.6+0x117029(timerfd_create+9)
timerfd_settime(STDIN_FILENO-0xfffffffe, 0, any, 0) @ libc.so.6+0x1167cc(timerfd_settime+12)
inotify_init1(IN_NONBLOCK|IN_CLOEXEC) @ libc.so.6+0x116c99(inotify_init1+9)
prlimit64(0, RLIMIT_MEMLOCK, 0, any) @ libc.so.6+0x109b32(getrlimit+18)
getrandom(any, 8, GRND_NONBLOCK) @ libc.so.6+0x41cc2(getrandom+18)
getrandom(any, any, any u32) @ libc.so.6+0x41cfb(getrandom+75)
getrandom(libc.so.6+0x1df178(tcache_key), 8, GRND_NONBLOCK) @ libc.so.6+0x9b677(ptmalloc_init.part.0+55)
