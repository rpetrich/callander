callander: permitted syscalls: read(any, any, any) @ ld-musl-x86_64.so.1+0x4edfb(__stdio_read*+145)
read(any, any, non-NULL) @ ld-musl-x86_64.so.1+0x5b66d(__syscall_cp_c*+165)
read(any, any, non-NULL) @ ld-musl-x86_64.so.1+0x5e990
write(any, any, non-NULL) @ ld-musl-x86_64.so.1+0x5b66d(__syscall_cp_c*+165)
write(any, any, non-NULL) @ ld-musl-x86_64.so.1+0x5e990
open(any, O_RDONLY|O_CLOEXEC, any) @ ld-musl-x86_64.so.1+0x4fef7(fopen+75)
open(any, any u16, any) @ ld-musl-x86_64.so.1+0x5b66d(__syscall_cp_c*+165)
open(any, any u16, any) @ ld-musl-x86_64.so.1+0x5e990
open(any, O_RDONLY|O_NONBLOCK|O_LARGEFILE|O_CLOEXEC, any) @ ld-musl-x86_64.so.1+0x5e9b0(__map_file*+24)
close(any) @ ld-musl-x86_64.so.1+0x1c150(opendir+52)
close(any) @ ld-musl-x86_64.so.1+0x4ecca(__stdio_close*+20)
close(any) @ ld-musl-x86_64.so.1+0x4ff5e(fopen+178)
close(any) @ ld-musl-x86_64.so.1+0x5b66d(__syscall_cp_c*+165)
close(any) @ ld-musl-x86_64.so.1+0x5e990
close(any) @ ld-musl-x86_64.so.1+0x5ea02(__map_file*+106)
close(any) @ ld-musl-x86_64.so.1+0x5ea21(__map_file*+137)
stat(any, any) @ ld-musl-x86_64.so.1+0x4e30f(fstatat+156)
stat(any, any) @ ld-musl-x86_64.so.1+0x4e333(fstatat+192)
fstat(any, any) @ ld-musl-x86_64.so.1+0x4e2ae(fstatat+59)
lstat(any, any) @ ld-musl-x86_64.so.1+0x4e355(fstatat+226)
lseek(any, any, any) @ ld-musl-x86_64.so.1+0x6239b(lseek+11)
mmap(0, any, any, MAP_SHARED, any, any) @ ld-musl-x86_64.so.1+0x39c06(mmap+58)
mmap(0, any, any, MAP_PRIVATE|MAP_ANONYMOUS, any, any) @ ld-musl-x86_64.so.1+0x39c06(mmap+58)
mmap(any, any, any, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, any, any) @ ld-musl-x86_64.so.1+0x39c06(mmap+58)
mprotect(NULL-0xfffffffffffff000, any, PROT_READ) @ ld-musl-x86_64.so.1+0x39cb9(mprotect+40)
mprotect(NULL-0xfffffffffffff000, any, PROT_READ|PROT_WRITE) @ ld-musl-x86_64.so.1+0x39cb9(mprotect+40)
munmap(any, any) @ ld-musl-x86_64.so.1+0x39dd8(munmap+28)
munmap(any, any) @ ld-musl-x86_64.so.1+0x5e924
brk(any) @ ld-musl-x86_64.so.1+0x250b7(__malloc_alloc_meta*+368)
brk(0) @ ld-musl-x86_64.so.1+0x251b0(__malloc_alloc_meta*+617)
brk(any) @ ld-musl-x86_64.so.1+0x251d5(__malloc_alloc_meta*+654)
rt_sigaction(SIGABRT, any, 0, 8) @ ld-musl-x86_64.so.1+0x1cc5d(abort+74)
rt_sigaction(SIGSETXID-SIGSYNCCALL, 0, 0, 8) @ ld-musl-x86_64.so.1+0x4d93b(__libc_sigaction*+190)
rt_sigaction(SIGSETXID-SIGSYNCCALL, any, 0, 8) @ ld-musl-x86_64.so.1+0x4da00(__libc_sigaction*+387)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-x86_64.so.1+0x1cc8e(abort+123)
rt_sigprocmask(SIG_BLOCK, ld-musl-x86_64.so.1+0x9b860(all_mask*), any, 8) @ ld-musl-x86_64.so.1+0x4d6a2(__block_all_sigs*+23)
rt_sigprocmask(SIG_BLOCK, ld-musl-x86_64.so.1+0x9b858(app_mask*), any, 8) @ ld-musl-x86_64.so.1+0x4d6bc(__block_app_sigs*+23)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-x86_64.so.1+0x4d6d4(__restore_sigs*+21)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-x86_64.so.1+0x4d8fc(__libc_sigaction*+127)
rt_sigprocmask(SIG_BLOCK, any, any, 8) @ ld-musl-x86_64.so.1+0x5ddfd(pthread_sigmask+29)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-x86_64.so.1+0x5ddfd(pthread_sigmask+29)
rt_sigreturn(any) @ ld-musl-x86_64.so.1+0x4dff2(__restore_rt*+7)
ioctl(any, BLKGETSIZE, any) @ ld-musl-x86_64.so.1+0x38163(ioctl+48)
ioctl(any, BLKSSZGET, any) @ ld-musl-x86_64.so.1+0x38163(ioctl+48)
ioctl(any, BLKIOMIN-BLKPBSZGET, any) @ ld-musl-x86_64.so.1+0x38163(ioctl+48)
ioctl(any, CDROMMULTISESSION, any) @ ld-musl-x86_64.so.1+0x38163(ioctl+48)
ioctl(any, CDROM_DRIVE_STATUS, INT_MAX) @ ld-musl-x86_64.so.1+0x38163(ioctl+48)
ioctl(any, CDROM_GET_CAPABILITY, 0) @ ld-musl-x86_64.so.1+0x38163(ioctl+48)
ioctl(any, CDROM_LAST_WRITTEN, any) @ ld-musl-x86_64.so.1+0x38163(ioctl+48)
ioctl(any, BLKGETZONESZ, any) @ ld-musl-x86_64.so.1+0x38163(ioctl+48)
ioctl(any, BLKBSZGET, any) @ ld-musl-x86_64.so.1+0x38163(ioctl+48)
ioctl(any, BLKGETSIZE64, any) @ ld-musl-x86_64.so.1+0x38163(ioctl+48)
ioctl(any, BLKGETDISKSEQ, any) @ ld-musl-x86_64.so.1+0x38163(ioctl+48)
ioctl(any, IOC_OPAL_GET_STATUS, any) @ ld-musl-x86_64.so.1+0x38163(ioctl+48)
ioctl(any, EVMS_GET_STRIPE_INFO, any) @ ld-musl-x86_64.so.1+0x38163(ioctl+48)
ioctl(any, FDGETPRM, any) @ ld-musl-x86_64.so.1+0x38163(ioctl+48)
ioctl(any, FDGETFDCSTAT, any) @ ld-musl-x86_64.so.1+0x38163(ioctl+48)
ioctl(any, GET_ARRAY_INFO, any) @ ld-musl-x86_64.so.1+0x38163(ioctl+48)
ioctl(any, BLKREPORTZONE, non-NULL) @ ld-musl-x86_64.so.1+0x38163(ioctl+48)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-x86_64.so.1+0x4e968(fdopen+202)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-x86_64.so.1+0x4ef68(__stdout_write*+48)
readv(any, any, 2) @ ld-musl-x86_64.so.1+0x4edb7(__stdio_read*+77)
writev(any, any, any) @ ld-musl-x86_64.so.1+0x4ef01(__stdio_write*+196)
pipe(any) @ ld-musl-x86_64.so.1+0x6242f(pipe+9)
mremap(any, any, any, MREMAP_MAYMOVE, any) @ ld-musl-x86_64.so.1+0x39cf3(mremap+43)
dup(any) @ ld-musl-x86_64.so.1+0x61cf4(dup+12)
dup2(any, STDOUT_FILENO) @ ld-musl-x86_64.so.1+0x61d15(dup2+18)
nanosleep(any, 0) @ ld-musl-x86_64.so.1+0x5b66d(__syscall_cp_c*+165)
nanosleep(any, 0) @ ld-musl-x86_64.so.1+0x5e990
getpid() @ ld-musl-x86_64.so.1+0x622c6(getpid+5)
getpid() @ ld-musl-x86_64.so.1+0x627de(do_setxid*+69)
fork() @ ld-musl-x86_64.so.1+0x43974(_Fork+37)
exit(0) @ ld-musl-x86_64.so.1+0x5c286(pthread_exit+454)
exit(0) @ ld-musl-x86_64.so.1+0x5e92e
kill(any, SIGKILL) @ ld-musl-x86_64.so.1+0x627ed(do_setxid*+84)
fcntl(any, F_SETFD, 1) @ ld-musl-x86_64.so.1+0x1cf39(fcntl+124)
fcntl(any, F_GETFL, any) @ ld-musl-x86_64.so.1+0x1cf39(fcntl+124)
fcntl(any, F_SETFD, 1) @ ld-musl-x86_64.so.1+0x1d089(open+127)
fcntl(any, F_GETFD, any) @ ld-musl-x86_64.so.1+0x4e2c6(fstatat+83)
fcntl(any, F_SETFD, 1) @ ld-musl-x86_64.so.1+0x4e923(fdopen+133)
fcntl(any, F_SETFD, 1) @ ld-musl-x86_64.so.1+0x4ff24(fopen+120)
fsync(any) @ ld-musl-x86_64.so.1+0x5b66d(__syscall_cp_c*+165)
fsync(any) @ ld-musl-x86_64.so.1+0x5e990
readlink(any, any, 4095) @ ld-musl-x86_64.so.1+0x62606(readlink+32)
getuid() @ ld-musl-x86_64.so.1+0x622f1(getuid+5)
getgid() @ ld-musl-x86_64.so.1+0x621c8(getgid+5)
setuid(any u32) @ ld-musl-x86_64.so.1+0x627b8(do_setxid*+31)
setgid(any u32) @ ld-musl-x86_64.so.1+0x627b8(do_setxid*+31)
gettid() @ ld-musl-x86_64.so.1+0x5e63d(__synccall*+196)
tkill(any, SIGABRT) @ ld-musl-x86_64.so.1+0x1cc74(abort+97)
tkill(any, SIGABRT) @ ld-musl-x86_64.so.1+0x4d830(raise+43)
tkill(any, SIGSETXID) @ ld-musl-x86_64.so.1+0x5b550(cancel_handler*+93)
tkill(any, SIGSETXID) @ ld-musl-x86_64.so.1+0x5d04b(pthread_kill+62)
tkill(any, SIGSYNCCALL) @ ld-musl-x86_64.so.1+0x5e6ef(__synccall*+374)
futex(any, FUTEX_WAIT, any, 0, any u32, 0)
futex(any, FUTEX_WAIT, any, 0, any u32, 202)
futex(any, any, any, 0, 0, any)
futex(any, FUTEX_WAKE, 1, any, any, 202)
futex(any, FUTEX_WAKE, 1, any, 202, any)
futex(any, FUTEX_WAKE, 1, 202, any, 0x40000000)
futex(any, FUTEX_REQUEUE, 0, 1, ld-musl-x86_64.so.1+0xa1864(init_fini_lock*+4), 202)
futex(any, FUTEX_LOCK_PI-FUTEX_UNLOCK_PI, 0, 0, 202, 0)
futex(any, FUTEX_UNLOCK_PI, NULL-0x3fffffff, any, any, any)
futex(any, FUTEX_UNLOCK_PI, any, any u32, any u32, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any u32, 0)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any u32, 202)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 1, any, any, 202)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 1, any, 202, any)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 1, 202, any, 0x40000000)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, ld-musl-x86_64.so.1+0xa1864(init_fini_lock*+4), 202)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG-FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, 202, 128)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, NULL-0x3fffffff, any, any, any)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any u32, any u32, any)
futex(ld-musl-x86_64.so.1+0x9f420(maplock*), any u32, 0-INT_MAX, any, 202, any u32)
futex(ld-musl-x86_64.so.1+0xa0b20(lock*), any u32, 0-INT_MAX, any, 202, any u32)
futex(ld-musl-x86_64.so.1+0xa0b60(key_lock*), any u32, 0-INT_MAX, any, 202, any u32)
futex(ld-musl-x86_64.so.1+0xa13a0(exit_sem*), any u32, 1, any, 202, 1)
futex(ld-musl-x86_64.so.1+0xa13a0(exit_sem*), any u32, INT_MAX, any, 202, 1)
futex(ld-musl-x86_64.so.1+0xa13c0(caller_sem*), any u32, 1, any, 202, 1)
futex(ld-musl-x86_64.so.1+0xa13c0(caller_sem*), any u32, INT_MAX, any, 202, 1)
futex(ld-musl-x86_64.so.1+0xa13e0(target_sem*), any u32, 1, any, 202, 1)
futex(ld-musl-x86_64.so.1+0xa13e0(target_sem*), any u32, INT_MAX, any, 202, 1)
futex(ld-musl-x86_64.so.1+0xa1828(ctor_cond*+8), FUTEX_WAKE, INT_MAX, any, 202, any)
futex(ld-musl-x86_64.so.1+0xa18e0(lock*), any u32, 0-INT_MAX, any, 202, any u32)
futex(ld-musl-x86_64.so.1+0xa1ec0(vmlock*), FUTEX_WAIT, any, 0, ld-musl-x86_64.so.1+0xa1ec4(vmlock*+4), 0x1-0xffffffff)
futex(ld-musl-x86_64.so.1+0xa1ec0(vmlock*), FUTEX_WAKE, INT_MAX, any, 202, any)
futex(ld-musl-x86_64.so.1+0xa1ec0(vmlock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, ld-musl-x86_64.so.1+0xa1ec4(vmlock*+4), 0x1-0xffffffff)
futex(ld-musl-x86_64.so.1+0xa1ec0(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, any, 202, any)
futex(ld-musl-x86_64.so.1+0xa1f90(__thread_list_lock*), FUTEX_WAIT, any, 0, ld-musl-x86_64.so.1+0xa2014(tl_lock_waiters*), 0x1-0xffffffff)
getdents64(any, any, 2048) @ ld-musl-x86_64.so.1+0x1c191(readdir+59)
set_tid_address(ld-musl-x86_64.so.1+0xa1f90(__thread_list_lock*)) @ ld-musl-x86_64.so.1+0x438d9(__post_Fork*+41)
restart_syscall()
fadvise64(any, 0, 0, 1) @ ld-musl-x86_64.so.1+0x1d10e(posix_fadvise+11)
clock_nanosleep(CLOCK_REALTIME, 0, any, 0) @ ld-musl-x86_64.so.1+0x5b66d(__syscall_cp_c*+165)
clock_nanosleep(CLOCK_REALTIME, 0, any, 0) @ ld-musl-x86_64.so.1+0x5e990
exit_group(any) @ ld-musl-x86_64.so.1+0x1cc05(_Exit+8)
openat(any, any, any u16, any) @ ld-musl-x86_64.so.1+0x5b66d(__syscall_cp_c*+165)
openat(any, any, any u16, any) @ ld-musl-x86_64.so.1+0x5e990
newfstatat(any, ld-musl-x86_64.so.1+0x9d23a, any, AT_EMPTY_PATH) @ ld-musl-x86_64.so.1+0x4e2df(fstatat+108)
newfstatat(any, any, any, 0) @ ld-musl-x86_64.so.1+0x4e36e(fstatat+251)
newfstatat(any, any, any, AT_SYMLINK_NOFOLLOW) @ ld-musl-x86_64.so.1+0x4e36e(fstatat+251)
newfstatat(any, ld-musl-x86_64.so.1+0x9d23a, any, AT_EMPTY_PATH) @ ld-musl-x86_64.so.1+0x4e36e(fstatat+251)
faccessat(any, any, F_OK) @ ld-musl-x86_64.so.1+0x61e5e(faccessat+44)
set_robust_list(0, 24) @ ld-musl-x86_64.so.1+0x5c2b8(pthread_exit+504)
set_robust_list(any, 24) @ ld-musl-x86_64.so.1+0x5d386(__pthread_mutex_trylock_owner*+114)
