callander: permitted syscalls: getxattr(any, "security.sehash", any, 32) @ libc.so.6+0xf3248(getxattr+8)
getcwd(non-NULL, any) @ libc.so.6+0xec7ac(getcwd+108)
epoll_create1(EPOLL_CLOEXEC) @ libc.so.6+0xf98c8(epoll_create1+8)
epoll_ctl(any u32, 1, any u32, any) @ libc.so.6+0xf9908(epoll_ctl+8)
epoll_ctl(any u32, 2, any u32, 0) @ libc.so.6+0xf9908(epoll_ctl+8)
epoll_pwait(any, any, any, 0, 0) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
epoll_pwait(any, any, any, -1, 0) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
epoll_pwait(any, non-NULL, any, any, 0) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
epoll_pwait(any, any, any, 0, 0) @ libc.so.6+0x96ba8
epoll_pwait(any, any, any, -1, 0) @ libc.so.6+0x96ba8
epoll_pwait(any, non-NULL, any, any, 0) @ libc.so.6+0x96ba8
fcntl(any, F_SETFD, FD_CLOEXEC) @ libc.so.6+0xeeb94(__fcntl64_nocancel+84)
fcntl(any, F_GETFL, any) @ libc.so.6+0xeeb94(__fcntl64_nocancel+84)
fcntl(any, F_SETFD, FD_CLOEXEC) @ libc.so.6+0xeec58(__fcntl64_nocancel_adjusted+56)
fcntl(any, F_DUPFD_CLOEXEC, 3) @ libc.so.6+0xeec58(__fcntl64_nocancel_adjusted+56)
fcntl(any, F_ADD_SEALS, F_SEAL_SEAL|F_SEAL_SHRINK|F_SEAL_GROW|F_SEAL_WRITE) @ libc.so.6+0xeec58(__fcntl64_nocancel_adjusted+56)
ioctl(any, TCGETS, any) @ libc.so.6+0xef498(tcgetattr+56)
ioctl(any, TIOCOUTQ, any) @ libc.so.6+0xf3b4c(ioctl+12)
ioctl(any, FIONREAD, any) @ libc.so.6+0xf3b4c(ioctl+12)
ioctl(any, SIOCGIFINDEX, any) @ libc.so.6+0xf3b4c(ioctl+12)
fstatfs(any, any) @ libc.so.6+0xe9ef4(fstatfs+20)
ftruncate(any, any) @ libc.so.6+0xf1694(ftruncate64+20)
faccessat(AT_FDCWD, "/var/run/setrans/.setrans-unix", F_OK) @ libc.so.6+0xe8fdc(access+28)
openat(any, any, O_RDONLY, any) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
openat(AT_FDCWD, any, O_RDWR|O_CLOEXEC, any) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
openat(AT_FDCWD, "/dev/console", O_WRONLY|O_NOCTTY|O_CLOEXEC, any) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
openat(any, any, O_RDONLY, any) @ libc.so.6+0x96ba8
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0x96ba8
openat(AT_FDCWD, any, O_RDWR|O_CLOEXEC, any) @ libc.so.6+0x96ba8
openat(AT_FDCWD, "/dev/console", O_WRONLY|O_NOCTTY|O_CLOEXEC, any) @ libc.so.6+0x96ba8
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0xeeddc(__open_nocancel+92)
openat(AT_FDCWD, any, O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC, any) @ libc.so.6+0xeeddc(__open_nocancel+92)
openat(AT_FDCWD, non-NULL, O_RDONLY, any) @ libc.so.6+0xeeddc(__open_nocancel+92)
openat(AT_FDCWD, "/sys/kernel/mm/hugepages", O_RDONLY|O_DIRECTORY, any) @ libc.so.6+0xeeddc(__open_nocancel+92)
close(any) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
close(any) @ libc.so.6+0x96ba8
close(any) @ libc.so.6+0xeeab4(__close_nocancel+20)
getdents64(any, any, any) @ libc.so.6+0xc87c0(getdents64+32)
lseek(any, any, any) @ libc.so.6+0xed2f8(lseek+24)
read(any, any, any) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
read(any, any, any) @ libc.so.6+0x96ba8
read(any, any, any) @ libc.so.6+0xeefd4(__read_nocancel+20)
write(any, any, any) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
write(any, any, any) @ libc.so.6+0x96ba8
write(any, any, 0-LONG_MAX) @ libc.so.6+0xef074(__write_nocancel+20)
readv(any, any, 1) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
readv(any, any, 3) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
readv(any, any, 1) @ libc.so.6+0x96ba8
readv(any, any, 3) @ libc.so.6+0x96ba8
writev(any, any, any) @ ld-linux-aarch64.so.1+0xb480(_dl_debug_vdprintf+384)
writev(STDERR_FILENO, any, any) @ libc.so.6+0x81cec(__libc_message_impl+332)
writev(any, any, 2) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
writev(any, any, 0x4-0x5) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
writev(STDERR_FILENO, any, 7) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
writev(STDERR_FILENO, any, 9) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
writev(any, any, 2) @ libc.so.6+0x96ba8
writev(any, any, 0x4-0x5) @ libc.so.6+0x96ba8
writev(STDERR_FILENO, any, 7) @ libc.so.6+0x96ba8
writev(STDERR_FILENO, any, 9) @ libc.so.6+0x96ba8
pread64(STDIN_FILENO-0xfffffffffffffffe, any, 511, any) @ libc.so.6+0xeef74(__pread64_nocancel+20)
ppoll(any, 1, any, 0, 0) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
ppoll(any, 1, any, 0, 0) @ libc.so.6+0x96ba8
signalfd4(-1, any, sizeof(kernel_sigset_t), SFD_NONBLOCK|SFD_CLOEXEC) @ libc.so.6+0xf945c(signalfd+28)
readlinkat(AT_FDCWD, any, non-NULL, 31) @ libc.so.6+0xedf40(readlink+32)
readlinkat(AT_FDCWD, "/proc/self/exe", any, 0x1000) @ libc.so.6+0xedf40(readlink+32)
newfstatat(any, any, any, AT_SYMLINK_NOFOLLOW) @ libc.so.6+0xe9e98(fstatat64+24)
newfstatat(AT_FDCWD, any, any, 0) @ libc.so.6+0xe9e98(fstatat64+24)
fstat(any, any) @ libc.so.6+0xe9e34(fstat+20)
capget(any, any) @ libc.so.6+0xf9808(capget+8)
exit(0) @ libc.so.6+0x26284(__libc_start_call_main+164)
exit_group(any) @ ld-linux-aarch64.so.1+0x1caa0(_exit+32)
exit_group(any) @ libc.so.6+0xc9404(_Exit+36)
futex(any, FUTEX_WAIT, any u32, 0, any, any)
futex(any, any, NULL-0xfffffffe, 0, any, any)
futex(any, any, 0x2-0xffffffff, 0, 0, -1 as u32)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any u32, 0, any, any)
futex(libgcc_s.so.1+0x300f8, FUTEX_WAIT_BITSET|FUTEX_CLOCK_REALTIME, any u32, 0, 0, -1 as u32)
futex(libgcc_s.so.1+0x300f8, FUTEX_WAIT_BITSET|FUTEX_PRIVATE_FLAG|FUTEX_CLOCK_REALTIME, any u32, 0, 0, -1 as u32)
futex(libgcc_s.so.1+0x300fc, FUTEX_WAIT_BITSET|FUTEX_CLOCK_REALTIME, any u32, 0, 0, -1 as u32)
futex(libgcc_s.so.1+0x300fc, FUTEX_WAIT_BITSET|FUTEX_PRIVATE_FLAG|FUTEX_CLOCK_REALTIME, any u32, 0, 0, -1 as u32)
clock_gettime(any, any) @ libc.so.6+0xc7a3c(__clock_gettime+60)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ libc.so.6+0x96ba8
sched_setscheduler(any u32, any u32, any) @ libc.so.6+0xe2688(sched_setscheduler+8)
sched_getscheduler(any u32) @ libc.so.6+0xe24c8(__sched_getscheduler+8)
sched_getparam(any u32, any) @ libc.so.6+0xe2488(sched_getparam+8)
sched_getaffinity(0, 0x1000, any) @ libc.so.6+0xf257c(__get_nprocs_sched+60)
sched_yield() @ libc.so.6+0xe26c8(sched_yield+8)
sched_get_priority_max(1) @ libc.so.6+0xe2508(__sched_get_priority_max+8)
sched_get_priority_min(1) @ libc.so.6+0xe2548(sched_get_priority_min+8)
restart_syscall()
tgkill(any, any, any) @ libc.so.6+0x8f088(__pthread_kill_implementation+264)
tgkill(any, any, any) @ libc.so.6+0x8f0b8(__pthread_kill_implementation+312)
tgkill(any, any, SIGABRT) @ libc.so.6+0x8f118(__pthread_raise_internal+48)
rt_sigaction(SIGABRT, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x3b8d0(__libc_sigaction+144)
rt_sigaction(SIGABRT, 0, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x3b984(__libc_sigaction+324)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x25a9c(abort+128)
rt_sigprocmask(SIG_BLOCK, libc.so.6+0x170158(sigall_set), 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x3cc84(__abort_lock_wrlock+36)
rt_sigprocmask(SIG_BLOCK, libc.so.6+0x170158(sigall_set), any, sizeof(kernel_sigset_t)) @ libc.so.6+0x8efe4(__pthread_kill_implementation+100)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x8f030(__pthread_kill_implementation+176)
rt_sigprocmask(SIG_BLOCK, any, any, sizeof(kernel_sigset_t)) @ libc.so.6+0x956ac(pthread_sigmask+76)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x956ac(pthread_sigmask+76)
uname(any) @ libc.so.6+0xe47c8(uname+8)
prctl(PR_CAPBSET_READ, any u32, any, any, any) @ libc.so.6+0xf9088(prctl+8)
prctl(PR_GET_SECUREBITS, 0, 0, 0, 0) @ libc.so.6+0xf9088(prctl+8)
prctl(PR_GET_NO_NEW_PRIVS, 0, 0, 0, 0) @ libc.so.6+0xf9088(prctl+8)
prctl(PR_CAP_AMBIENT, PR_CAP_AMBIENT_IS_SET, any u32, 0, 0) @ libc.so.6+0xf9088(prctl+8)
prctl(PR_CAP_AMBIENT, PR_CAP_AMBIENT_CLEAR_ALL, 0, 0, 0) @ libc.so.6+0xf9088(prctl+8)
prctl(PR_SET_VMA, 0, NULL-0xfffffffffffffffe, any, " glibc: assert") @ libc.so.6+0xf9410(__set_vma_name+176)
prctl(PR_SET_VMA, 0, NULL-0xfffffffffffffffe, any, " glibc: fatal") @ libc.so.6+0xf9410(__set_vma_name+176)
prctl(PR_SET_VMA, 0, any, any, " glibc: malloc arena") @ libc.so.6+0xf9410(__set_vma_name+176)
prctl(PR_SET_VMA, 0, any, any, " glibc: malloc") @ libc.so.6+0xf9410(__set_vma_name+176)
gettimeofday(non-NULL, any) @ [vdso]+0x658(__kernel_gettimeofday+256)
getpid() @ ld-linux-aarch64.so.1+0x1cb08(__GI___getpid+8)
getpid() @ libc.so.6+0xcf4c8(getpid+8)
getuid() @ libc.so.6+0xcf608(getuid+8)
gettid() @ libc.so.6+0x8f09c(__pthread_kill_implementation+284)
gettid() @ libc.so.6+0xf6164(syscall+36)
gettid() @ libc.so.6+0xfa0c8(gettid+8)
socket(any u16, any, 0) @ libc.so.6+0xfb0fc(socket+28)
socket(AF_NETLINK, SOCK_RAW|SOCK_CLOEXEC, 9) @ libc.so.6+0xfb0fc(socket+28)
connect(any, any, any u32) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
connect(any, any, any u32) @ libc.so.6+0x96ba8
getpeername(any, any, any) @ libc.so.6+0xfaa94(getpeername+20)
sendto(any, any, any u32, 0, any, 12) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
sendto(any, any, any, MSG_NOSIGNAL, 0, 0) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
sendto(any, any, any, MSG_DONTWAIT|MSG_NOSIGNAL, 0, 0) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
sendto(any, any, any u32, 0, any, 12) @ libc.so.6+0x96ba8
sendto(any, any, any, MSG_NOSIGNAL, 0, 0) @ libc.so.6+0x96ba8
sendto(any, any, any, MSG_DONTWAIT|MSG_NOSIGNAL, 0, 0) @ libc.so.6+0x96ba8
recvfrom(any, any, any, 0, any, any) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
recvfrom(any, any, 0x231c, MSG_DONTWAIT, any, any) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
recvfrom(any, any, 0x231c, MSG_PEEK|MSG_DONTWAIT, any, any) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
recvfrom(any, any, any, 0, any, any) @ libc.so.6+0x96ba8
recvfrom(any, any, 0x231c, MSG_DONTWAIT, any, any) @ libc.so.6+0x96ba8
recvfrom(any, any, 0x231c, MSG_PEEK|MSG_DONTWAIT, any, any) @ libc.so.6+0x96ba8
setsockopt(any, SOL_IP, IP_RECVERR, any, 4) @ libc.so.6+0xfaf40(setsockopt+32)
setsockopt(any, SOL_IPV6, IPV6_RECVERR, any, 4) @ libc.so.6+0xfaf40(setsockopt+32)
getsockopt(any, SOL_SOCKET, SO_TYPE, any, any) @ libc.so.6+0xfab5c(getsockopt+28)
getsockopt(any, SOL_SOCKET, SO_PEERCRED, any, any) @ libc.so.6+0xfab5c(getsockopt+28)
getsockopt(any, SOL_SOCKET, SO_PEERSEC, non-NULL, any) @ libc.so.6+0xfab5c(getsockopt+28)
getsockopt(any, SOL_SOCKET, SO_DOMAIN, any, any) @ libc.so.6+0xfab5c(getsockopt+28)
getsockopt(any, SOL_SOCKET, SO_PEERGROUPS, any, any) @ libc.so.6+0xfab5c(getsockopt+28)
getsockopt(any, SOL_SOCKET, SO_PEERPIDFD, any, any) @ libc.so.6+0xfab5c(getsockopt+28)
shutdown(any, SHUT_WR) @ libc.so.6+0xfaf98(shutdown+24)
sendmsg(any, any, MSG_NOSIGNAL) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
sendmsg(any, any, MSG_NOSIGNAL) @ libc.so.6+0x96ba8
recvmsg(any, any, MSG_DONTWAIT|MSG_CMSG_CLOEXEC) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
recvmsg(any, any, MSG_DONTWAIT|MSG_CMSG_CLOEXEC) @ libc.so.6+0x96ba8
brk(any) @ libc.so.6+0xeff14(brk+20)
munmap(any, any) @ libc.so.6+0xf4c08(munmap+8)
mremap(any, any, any, MREMAP_MAYMOVE, any) @ libc.so.6+0xf8da8(mremap+72)
mmap(0, any, PROT_READ|PROT_WRITE, any, any, 0) @ libc.so.6+0xf4204(mmap+36)
mmap(0, any, PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_ANONYMOUS, STDIN_FILENO, 0) @ libc.so.6+0xf4204(mmap+36)
mmap(any, any, PROT_NONE-PROT_READ, any, any, 0) @ libc.so.6+0xf4204(mmap+36)
mprotect(any, any, PROT_READ|PROT_WRITE) @ libc.so.6+0xf4b08(mprotect+8)
madvise(any, any, MADV_WILLNEED-MADV_DONTNEED) @ libc.so.6+0xf3ec8(madvise+8)
madvise(any, any, MADV_HUGEPAGE) @ libc.so.6+0xf3ec8(madvise+8)
accept4(any, 0, 0, SOCK_NONBLOCK|SOCK_CLOEXEC) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
accept4(any, 0, 0, SOCK_NONBLOCK|SOCK_CLOEXEC) @ libc.so.6+0x96ba8
sendmmsg(any, any, any u32, MSG_DONTWAIT|MSG_NOSIGNAL) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
sendmmsg(any, any, 2, MSG_NOSIGNAL) @ libc.so.6+0x895bc(__internal_syscall_cancel+124)
sendmmsg(any, any, any u32, MSG_DONTWAIT|MSG_NOSIGNAL) @ libc.so.6+0x96ba8
sendmmsg(any, any, 2, MSG_NOSIGNAL) @ libc.so.6+0x96ba8
getrandom(libc.so.6+0x1c6778(tcache_key), 8, GRND_NONBLOCK) @ libc.so.6+0x9bb0c(ptmalloc_init.part.0+76)
memfd_create("dbus-broker-log", MFD_CLOEXEC|MFD_ALLOW_SEALING) @ libc.so.6+0xf6164(syscall+36)
memfd_create("dbus-broker-log", MFD_CLOEXEC|MFD_ALLOW_SEALING|MFD_EXEC) @ libc.so.6+0xf6164(syscall+36)
