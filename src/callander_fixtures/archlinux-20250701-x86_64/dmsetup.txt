callander: permitted syscalls: read(any, any, any) @ libc.so.6+0x92004(__internal_syscall_cancel*+132)
read(any, any, any) @ libc.so.6+0x9de20
read(any u32, any, any) @ libc.so.6+0x10d456(__read_nocancel+6)
write(any, any, any) @ libc.so.6+0x92004(__internal_syscall_cancel*+132)
write(any, any, any) @ libc.so.6+0x9de20
write(any u32, any, any) @ libc.so.6+0x10d4b9(__write_nocancel+9)
close(any) @ libc.so.6+0x92004(__internal_syscall_cancel*+132)
close(any) @ libc.so.6+0x9de20
close(any u32) @ libc.so.6+0x10d0b9(__close_nocancel+9)
fstat(any u32, any) @ libc.so.6+0x1084b9(fstat+9)
poll(any, 1, any) @ libc.so.6+0x92004(__internal_syscall_cancel*+132)
poll(any, 1, any) @ libc.so.6+0x9de20
lseek(any u32, any, any) @ libc.so.6+0x10bc99(lseek+9)
mmap(0, any, PROT_READ|PROT_WRITE, any u32, -1 as u32, 0) @ libc.so.6+0x11540a(mmap+42)
mmap(any, any, PROT_NONE-PROT_READ, any u32, any u32, 0) @ libc.so.6+0x11540a(mmap+42)
mmap(0, any, PROT_NONE-PROT_READ, any u32, any u32, 0) @ libc.so.6+0x11546d(mmap+141)
mmap(0, any, PROT_READ|PROT_WRITE, any u32, -1 as u32, 0) @ libc.so.6+0x11546d(mmap+141)
mprotect(any, any, PROT_READ|PROT_WRITE) @ libc.so.6+0x115cb9(mprotect+9)
munmap(any, any) @ libc.so.6+0x115d69(munmap+9)
brk(NULL-0xfffffffffffffffe) @ libc.so.6+0x10df49(brk+9)
rt_sigaction(SIGABRT, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x3dfd6(__libc_sigaction+214)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x255dd(abort+137)
rt_sigprocmask(SIG_BLOCK, libc.so.6+0x1b96b8(sigall_set*), any, sizeof(kernel_sigset_t)) @ libc.so.6+0x3ef3b(__abort_lock_rdlock*+27)
rt_sigprocmask(SIG_BLOCK, libc.so.6+0x1b96b8(sigall_set*), 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x3ef6b(__abort_lock_wrlock*+27)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x3efb1(__abort_lock_unlock*+49)
rt_sigprocmask(SIG_BLOCK, libc.so.6+0x1b96b8(sigall_set*), any, sizeof(kernel_sigset_t)) @ libc.so.6+0x9768a(__pthread_kill_implementation*+74)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x976d2(__pthread_kill_implementation*+146)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x9cc86(pthread_sigmask+70)
rt_sigreturn(any) @ libc.so.6+0x3def7
ioctl(any u32, TCGETS, any) @ libc.so.6+0x10d72a(tcgetattr+42)
ioctl(any u32, any u32, any) @ libc.so.6+0x114ecb(ioctl+59)
pread64(STDIN_FILENO-0xfffffffe, any, 511, 0) @ libc.so.6+0x10d41c(__pread64_nocancel+12)
writev(STDERR_FILENO, any, any) @ libc.so.6+0x8aba1(__libc_message_impl*+353)
writev(any, any, any) @ libc.so.6+0x92004(__internal_syscall_cancel*+132)
writev(any, any, any) @ libc.so.6+0x9de20
access("/run/udev/control", F_OK) @ libc.so.6+0x107829(access+9)
sched_yield() @ libc.so.6+0x100989(sched_yield+9)
mremap(any, any, any, MREMAP_MAYMOVE, any) @ libc.so.6+0x1196d4(mremap+52)
madvise(any, any, MADV_DONTNEED) @ libc.so.6+0x1151b9(madvise+9)
madvise(any, any, MADV_HUGEPAGE) @ libc.so.6+0x1151b9(madvise+9)
getpid() @ libc.so.6+0xeb0c9(getpid+9)
getpid() @ libc.so.6+0x116eeb(syscall+27)
socket(any u16, SOCK_STREAM|SOCK_CLOEXEC-SOCK_DGRAM|SOCK_CLOEXEC, 0) @ libc.so.6+0x11aed9(socket+9)
socket(AF_INET, SOCK_DGRAM|SOCK_NONBLOCK|SOCK_CLOEXEC, 0) @ libc.so.6+0x11aed9(socket+9)
socket(AF_INET6, SOCK_DGRAM|SOCK_NONBLOCK|SOCK_CLOEXEC, 0) @ libc.so.6+0x11aed9(socket+9)
connect(any, any, any u32) @ libc.so.6+0x92004(__internal_syscall_cancel*+132)
connect(any, any, any u32) @ libc.so.6+0x9de20
sendto(any, any, any, MSG_NOSIGNAL, 0, 0) @ libc.so.6+0x92004(__internal_syscall_cancel*+132)
sendto(any, any, any, MSG_NOSIGNAL, 0, 0) @ libc.so.6+0x9de20
recvfrom(any, any, any, 0, any, any) @ libc.so.6+0x92004(__internal_syscall_cancel*+132)
recvfrom(any, any, any, 0, any, any) @ libc.so.6+0x9de20
getpeername(any u32, any, any) @ libc.so.6+0x11aa39(getpeername+9)
setsockopt(any u32, SOL_IP, IP_RECVERR, any, 4) @ libc.so.6+0x11ad4c(setsockopt+12)
setsockopt(any u32, SOL_IPV6, IPV6_RECVERR, any, 4) @ libc.so.6+0x11ad4c(setsockopt+12)
clone(SIGCHLD|CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID, 0, 0, any, 0) @ libc.so.6+0xe3ec6(_Fork+70)
exit(0) @ libc.so.6+0x276d7(__libc_start_call_main*+151)
wait4(any, 0, 0, 0) @ libc.so.6+0x92004(__internal_syscall_cancel*+132)
wait4(any, 0, 0, 0) @ libc.so.6+0x9de20
uname(any) @ libc.so.6+0x102869(uname+9)
semget(0x1-0xd4dffff, 1, 0600) @ libc.so.6+0x11b0d9(semget+9)
semget(0x1-0xffffffff, 1, 0) @ libc.so.6+0x11b0d9(semget+9)
semctl(any u32, 0, IPC_RMID, any) @ libc.so.6+0x11b144(semctl+68)
semctl(any u32, 0, GETVAL, any) @ libc.so.6+0x11b144(semctl+68)
semctl(any u32, 0, SETVAL, any) @ libc.so.6+0x11b144(semctl+68)
semctl(any, 0, SEM_STAT-SEM_INFO, any) @ libc.so.6+0x11b144(semctl+68)
fcntl(any u32, F_SETFD, FD_CLOEXEC) @ libc.so.6+0x10d150(__fcntl64_nocancel*+64)
fcntl(any u32, F_GETFL, any) @ libc.so.6+0x10d150(__fcntl64_nocancel*+64)
getcwd(non-NULL, any) @ libc.so.6+0x10b0ab(getcwd+139)
rename(any, any) @ libc.so.6+0x603c9(rename+9)
mkdir(any, 0777) @ libc.so.6+0x10bce9(mkdir+9)
unlink(any) @ libc.so.6+0x10cf49(unlink+9)
readlink(any, any, any) @ libc.so.6+0x10c5e9(readlink+9)
chown(any, any u32, any u32) @ libc.so.6+0x1078b9(chown+9)
umask(any u32) @ libc.so.6+0x10cf39(umask+9)
getuid() @ libc.so.6+0xeb179(getuid+9)
getgid() @ libc.so.6+0xea109(getgid+9)
setuid(any) @ libc.so.6+0x116eeb(syscall+27)
setgid(any) @ libc.so.6+0x116eeb(syscall+27)
geteuid() @ libc.so.6+0xea0f9(geteuid+9)
getegid() @ libc.so.6+0xea0e9(getegid+9)
getgroups(0, any) @ libc.so.6+0xea119(getgroups+9)
getgroups(0x10000, any) @ libc.so.6+0xea119(getgroups+9)
getgroups(0x20000, any) @ libc.so.6+0xea119(getgroups+9)
getgroups(0x40000, any) @ libc.so.6+0xea119(getgroups+9)
getgroups(0x80000, any) @ libc.so.6+0xea119(getgroups+9)
getgroups(0x100000, any) @ libc.so.6+0xea119(getgroups+9)
getgroups(0x200000, any) @ libc.so.6+0xea119(getgroups+9)
getgroups(0x400000, any) @ libc.so.6+0xea119(getgroups+9)
getgroups(0x800000, any) @ libc.so.6+0xea119(getgroups+9)
getgroups(0x1000000, any) @ libc.so.6+0xea119(getgroups+9)
getgroups(0x2000000, any) @ libc.so.6+0xea119(getgroups+9)
getgroups(0x4000000, any) @ libc.so.6+0xea119(getgroups+9)
getgroups(0x8000000, any) @ libc.so.6+0xea119(getgroups+9)
getgroups(0x10000000, any) @ libc.so.6+0xea119(getgroups+9)
getgroups(0x20000000, any) @ libc.so.6+0xea119(getgroups+9)
getgroups(0x40000000, any) @ libc.so.6+0xea119(getgroups+9)
getgroups(0x80000000, any) @ libc.so.6+0xea119(getgroups+9)
setgroups(any, any) @ libc.so.6+0x116eeb(syscall+27)
capset(any, any) @ libc.so.6+0x116eeb(syscall+27)
fstatfs(any u32, any) @ libc.so.6+0x108529(fstatfs+9)
sched_getparam(any u32, any) @ libc.so.6+0x100809(sched_getparam+9)
sched_setscheduler(any u32, any u32, any) @ libc.so.6+0x100959(sched_setscheduler+9)
sched_getscheduler(any u32) @ libc.so.6+0x100839(__sched_getscheduler+9)
sched_get_priority_max(1) @ libc.so.6+0x100869(__sched_get_priority_max+9)
sched_get_priority_min(1) @ libc.so.6+0x100899(sched_get_priority_min+9)
prctl(any, any, any, any, any) @ libc.so.6+0x116eeb(syscall+27)
prctl(PR_SET_VMA, 0, any, any, any) @ libc.so.6+0x119afd(__set_vma_name*+125)
chroot(any) @ libc.so.6+0x116eeb(syscall+27)
gettid() @ libc.so.6+0x97735(__pthread_kill_implementation*+245)
gettid() @ libc.so.6+0x11a529(gettid+9)
time(any) @ libc.so.6+0xd61b9(time_syscall*+9)
futex(any, any u8, any u32, 0, any, any)
futex(any, any u32, any u32, 0, 0, -1 as u32)
sched_getaffinity(0, 0x1000, any) @ libc.so.6+0x110274(__get_nprocs_sched*+52)
getdents64(any u32, any, any) @ libc.so.6+0xe3495(getdents64+21)
restart_syscall()
semtimedop(any u32, any, 1, 0) @ libc.so.6+0x11b1cc(semtimedop+12)
clock_gettime(CLOCK_REALTIME-CLOCK_MONOTONIC, any) @ libc.so.6+0xe29bd(__clock_gettime+45)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ libc.so.6+0x92004(__internal_syscall_cancel*+132)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ libc.so.6+0x9de20
exit_group(NULL-0x1fe) @ ld-linux-x86-64.so.2+0x248f5(_exit*+21)
exit_group(any u32) @ libc.so.6+0xe3f66(_Exit+22)
tgkill(any u32, any u32, SIGABRT) @ libc.so.6+0x97713(__pthread_kill_implementation*+211)
tgkill(any u32, any u32, SIGFPE) @ libc.so.6+0x97713(__pthread_kill_implementation*+211)
tgkill(any u32, any u32, SIGABRT) @ libc.so.6+0x9774a(__pthread_kill_implementation*+266)
tgkill(any u32, any u32, SIGFPE) @ libc.so.6+0x9774a(__pthread_kill_implementation*+266)
tgkill(any u32, any u32, SIGABRT) @ libc.so.6+0x977d6(__pthread_raise_internal*+38)
openat(any, "..", O_RDONLY, any) @ libc.so.6+0x92004(__internal_syscall_cancel*+132)
openat(AT_FDCWD, any, O_RDONLY, any) @ libc.so.6+0x92004(__internal_syscall_cancel*+132)
openat(AT_FDCWD, any, O_RDWR, any) @ libc.so.6+0x92004(__internal_syscall_cancel*+132)
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0x92004(__internal_syscall_cancel*+132)
openat(AT_FDCWD, "", O_RDONLY-O_WRONLY, any) @ libc.so.6+0x92004(__internal_syscall_cancel*+132)
openat(any, "..", O_RDONLY, any) @ libc.so.6+0x9de20
openat(AT_FDCWD, any, O_RDONLY, any) @ libc.so.6+0x9de20
openat(AT_FDCWD, any, O_RDWR, any) @ libc.so.6+0x9de20
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0x9de20
openat(AT_FDCWD, "", O_RDONLY-O_WRONLY, any) @ libc.so.6+0x9de20
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0x10d314(__open_nocancel+68)
openat(AT_FDCWD, any, O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC, any) @ libc.so.6+0x10d314(__open_nocancel+68)
openat(AT_FDCWD, non-NULL, O_RDONLY, any) @ libc.so.6+0x10d314(__open_nocancel+68)
openat(AT_FDCWD, "/sys/kernel/mm/hugepages", O_RDONLY|O_DIRECTORY, any) @ libc.so.6+0x10d314(__open_nocancel+68)
mknodat(AT_FDCWD, any, any u32, any u32) @ libc.so.6+0x10bda5(mknodat+21)
newfstatat(any u32, any, any, AT_SYMLINK_NOFOLLOW) @ libc.so.6+0x1084ec(fstatat64+12)
newfstatat(AT_FDCWD, any, any, 0) @ libc.so.6+0x1084ec(fstatat64+12)
faccessat(AT_FDCWD, any, F_OK) @ libc.so.6+0x107d70(faccessat+400)
set_robust_list(any, sizeof(struct robust_list_head)) @ libc.so.6+0xe3f01(_Fork+129)
timerfd_create(CLOCK_MONOTONIC, TFD_CLOEXEC) @ libc.so.6+0x11a3d9(timerfd_create+9)
timerfd_settime(any u32, 0, any, 0) @ libc.so.6+0x119bfc(timerfd_settime+12)
sendmmsg(any, any, 2, MSG_NOSIGNAL) @ libc.so.6+0x92004(__internal_syscall_cancel*+132)
sendmmsg(any, any, 2, MSG_NOSIGNAL) @ libc.so.6+0x9de20
getrandom(libc.so.6+0x1ed218(tcache_key*), 8, GRND_NONBLOCK) @ libc.so.6+0xa2a25(ptmalloc_init.part.0*+53)
faccessat2(AT_FDCWD, any, F_OK, AT_EACCESS) @ libc.so.6+0x107c0a(faccessat+42)
