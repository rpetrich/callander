callander: permitted syscalls: lsetxattr(any, any, any, any, 0) @ ld-musl-aarch64.so.1+0x24e10(lsetxattr+16)
fsetxattr(STDIN_FILENO-0xfffffffffffffffe, non-NULL, non-NULL, any, 0) @ ld-musl-aarch64.so.1+0x24e34(fsetxattr+20)
fsetxattr(any, any, any, any u16, 0) @ ld-musl-aarch64.so.1+0x24e34(fsetxattr+20)
fgetxattr(STDIN_FILENO-0xfffffffffffffffe, 0x1-/sbin/btrfs+0xcbb5e, any, any) @ ld-musl-aarch64.so.1+0x24db0(fgetxattr+8)
fgetxattr(STDIN_FILENO-0xfffffffffffffffe, non-NULL, 0, 0) @ ld-musl-aarch64.so.1+0x24db0(fgetxattr+8)
fgetxattr(STDIN_FILENO-0xfffffffffffffffe, non-NULL, non-NULL, any) @ ld-musl-aarch64.so.1+0x24db0(fgetxattr+8)
fgetxattr(STDIN_FILENO-0xfffffffffffffffe, /sbin/btrfs+0xcbb65-0xffffffffffffffff, any, any) @ ld-musl-aarch64.so.1+0x24db0(fgetxattr+8)
lremovexattr(any, any) @ ld-musl-aarch64.so.1+0x24e6c(lremovexattr+12)
getcwd(any, 0x1000-0x1001) @ ld-musl-aarch64.so.1+0x65238(getcwd+36)
dup(any) @ ld-musl-aarch64.so.1+0x64dac(dup+16)
dup3(any, STDIN_FILENO-STDERR_FILENO, 0) @ ld-musl-aarch64.so.1+0x64dd8(dup2+28)
fcntl(any, F_DUPFD_CLOEXEC, 3) @ ld-musl-aarch64.so.1+0x210d8(fcntl+236)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x210f8(fcntl+268)
fcntl(any, F_DUPFD_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x2110c(fcntl+288)
fcntl(any, F_DUPFD, 3) @ ld-musl-aarch64.so.1+0x2113c(fcntl+336)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x21164(fcntl+376)
fcntl(any, F_SETFD, any u32) @ ld-musl-aarch64.so.1+0x21164(fcntl+376)
fcntl(any, F_GETFL, any) @ ld-musl-aarch64.so.1+0x21164(fcntl+376)
fcntl(any, F_SETPIPE_SZ, 0x24000) @ ld-musl-aarch64.so.1+0x21164(fcntl+376)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x21204(open+136)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x45cc0(socket+148)
fcntl(any, F_SETFL, 2048) @ ld-musl-aarch64.so.1+0x45cd8(socket+172)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x51098(fchmod+80)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x5128c(fstatat64+108)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x517f0(fdopen+176)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x52fd4(fopen64+148)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x64e0c(dup2+80)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x65128(fchown+96)
ioctl(STDIN_FILENO-0xfffffffffffffffe, BTRFS_IOC_DEFAULT_SUBVOL, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(STDIN_FILENO-0xfffffffffffffffe, FS_IOC_GETFLAGS, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, TW_OP_READ, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BLKGETSIZE, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BLKSSZGET, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BLKDISCARD-BLKPBSZGET, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, LOOP_GET_STATUS64, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, CDROMMULTISESSION, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, CDROM_DRIVE_STATUS, INT_MAX) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, CDROM_GET_CAPABILITY, 0) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, CDROM_LAST_WRITTEN, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, SIOCGIFCONF, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, SIOCGIFHWADDR, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_SYNC, 0) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_SCRUB_CANCEL, 0) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_QUOTA_RESCAN_WAIT, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_BALANCE_CTL, 0x1-0x2) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, FS_IOC_SETFLAGS, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_WAIT_SYNC, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_SUBVOL_SETFLAGS, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BLKRESETZONE, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_QGROUP_CREATE, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_QGROUP_ASSIGN, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, FICLONERANGE, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_QUOTA_RESCAN, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_SEND, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, FS_IOC_ENABLE_VERITY, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_ENCODED_WRITE, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, FS_IOC_SETFSLABEL, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_SCAN_DEV-BTRFS_IOC_FORGET_DEV, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_ADD_DEV, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_SUBVOL_CREATE-BTRFS_IOC_SNAP_DESTROY, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_SNAP_CREATE_V2-BTRFS_IOC_SUBVOL_CREATE_V2, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_RM_DEV_V2, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_SNAP_DESTROY_V2, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BLKGETZONESZ, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BLKGETSIZE64, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, EVMS_GET_STRIPE_INFO, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_START_SYNC-BTRFS_IOC_SUBVOL_GETFLAGS, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_GET_FEATURES, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, FDGETPRM, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, FDGETFDCSTAT, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_QGROUP_LIMIT, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_QUOTA_RESCAN_STATUS, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, GET_ARRAY_INFO, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, FS_IOC_GETFSLABEL, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_GET_SUBVOL_INFO, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_FS_INFO, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_BALANCE_PROGRESS, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_DEVICES_READY, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BLKREPORTZONE, non-NULL) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_SPACE_INFO, non-NULL) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_QUOTA_CTL, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_INO_PATHS-BTRFS_IOC_LOGICAL_INO, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_LOGICAL_INO_V2, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_SET_RECEIVED_SUBVOL, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_SCRUB, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_SCRUB_PROGRESS, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_BALANCE_V2, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_GET_DEV_STATS, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_DEV_REPLACE, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_TREE_SEARCH-BTRFS_IOC_INO_LOOKUP, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_DEV_INFO, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_GET_SUBVOL_ROOTREF-BTRFS_IOC_INO_LOOKUP_USER, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x5186c(fdopen+300)
ioctl(any u32, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x51e9c(__stdout_write*+56)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x65474(isatty+24)
ioprio_set(1, 0, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
flock(any, LOCK_EX) @ ld-musl-aarch64.so.1+0x243b8(flock+20)
flock(any, LOCK_EX|LOCK_NB) @ ld-musl-aarch64.so.1+0x243b8(flock+20)
flock(any, LOCK_UN) @ ld-musl-aarch64.so.1+0x243b8(flock+20)
mknodat(AT_FDCWD, any, 0-0170000, any) @ ld-musl-aarch64.so.1+0x514c4(mknod+36)
mkdirat(AT_FDCWD, any, 0700) @ ld-musl-aarch64.so.1+0x51454(mkdir+28)
mkdirat(AT_FDCWD, any, 0777) @ ld-musl-aarch64.so.1+0x51454(mkdir+28)
mkdirat(AT_FDCWD, libblkid.so.1+0x3c597, 0755) @ ld-musl-aarch64.so.1+0x51454(mkdir+28)
mkdirat(AT_FDCWD, /sbin/btrfs+0x104008, 0755) @ ld-musl-aarch64.so.1+0x51454(mkdir+28)
unlinkat(AT_FDCWD, any, AT_REMOVEDIR) @ ld-musl-aarch64.so.1+0x658f0(rmdir+24)
unlinkat(AT_FDCWD, any, 0) @ ld-musl-aarch64.so.1+0x65cd0(unlink+24)
symlinkat(any, AT_FDCWD, any) @ ld-musl-aarch64.so.1+0x65ac8(symlink+20)
linkat(AT_FDCWD, any, AT_FDCWD, any, 0) @ ld-musl-aarch64.so.1+0x6550c(link+36)
renameat(AT_FDCWD, any, AT_FDCWD, any) @ ld-musl-aarch64.so.1+0x55464(rename+32)
statfs(any, any) @ ld-musl-aarch64.so.1+0x51540(statfs64+52)
fstatfs(any, any) @ ld-musl-aarch64.so.1+0x51588(fstatfs64+52)
truncate(any, any) @ ld-musl-aarch64.so.1+0x65b58(truncate64+12)
ftruncate(any, any) @ ld-musl-aarch64.so.1+0x65204(ftruncate64+16)
fallocate(any, any, any, any) @ ld-musl-aarch64.so.1+0x24348(fallocate64+20)
faccessat(AT_FDCWD, any, F_OK) @ ld-musl-aarch64.so.1+0x64c78(access+32)
faccessat(AT_FDCWD, non-NULL, W_OK) @ ld-musl-aarch64.so.1+0x64c78(access+32)
faccessat(any, any, R_OK) @ ld-musl-aarch64.so.1+0x64f10(faccessat+56)
faccessat(any, libblkid.so.1+0x3cc58, F_OK) @ ld-musl-aarch64.so.1+0x64f10(faccessat+56)
faccessat(any, libblkid.so.1+0x3e501, F_OK) @ ld-musl-aarch64.so.1+0x64f10(faccessat+56)
faccessat(any, libblkid.so.1+0x3e512, F_OK) @ ld-musl-aarch64.so.1+0x64f10(faccessat+56)
faccessat(any, libblkid.so.1+0x3e528, F_OK) @ ld-musl-aarch64.so.1+0x64f10(faccessat+56)
faccessat(any, libblkid.so.1+0x3e53e, F_OK) @ ld-musl-aarch64.so.1+0x64f10(faccessat+56)
faccessat(any, libblkid.so.1+0x3e558, F_OK) @ ld-musl-aarch64.so.1+0x64f10(faccessat+56)
chdir(ld-musl-aarch64.so.1+0x9d074) @ ld-musl-aarch64.so.1+0x64cf8(chdir+12)
chdir(/sbin/btrfs+0xc0c9f) @ ld-musl-aarch64.so.1+0x64cf8(chdir+12)
chroot(non-NULL) @ ld-musl-aarch64.so.1+0x24160(chroot+12)
fchmod(any, any u32) @ ld-musl-aarch64.so.1+0x51068(fchmod+32)
fchmodat(AT_FDCWD, any, any u32) @ ld-musl-aarch64.so.1+0x51038(chmod+28)
fchmodat(AT_FDCWD, any, any u32) @ ld-musl-aarch64.so.1+0x510c0(fchmod+120)
fchownat(AT_FDCWD, any, any u32, any u32, 0) @ ld-musl-aarch64.so.1+0x65158(fchown+144)
fchownat(AT_FDCWD, /sbin/btrfs+0x104008, any u32, any u32, AT_SYMLINK_NOFOLLOW) @ ld-musl-aarch64.so.1+0x6517c(fchownat+28)
fchownat(AT_FDCWD, any, any u32, any u32, AT_SYMLINK_NOFOLLOW) @ ld-musl-aarch64.so.1+0x654d8(lchown+40)
fchown(any, any u32, any u32) @ ld-musl-aarch64.so.1+0x650f4(fchown+44)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9bee9, O_RDWR|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x20630(__init_libc*+380)
openat(AT_FDCWD, any, O_RDONLY, any) @ ld-musl-aarch64.so.1+0x52fb0(fopen64+112)
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x52fb0(fopen64+112)
openat(AT_FDCWD, non-NULL, O_WRONLY|O_CREAT|O_TRUNC|O_CLOEXEC, 0666) @ ld-musl-aarch64.so.1+0x52fb0(fopen64+112)
openat(any, any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
openat(any, any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
openat(AT_FDCWD, any, O_RDONLY|O_NONBLOCK|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x61dbc(__map_file*+44)
close(any) @ ld-musl-aarch64.so.1+0x20014(opendir+56)
close(STDIN_FILENO-0xffffffffffffffe9) @ ld-musl-aarch64.so.1+0x21124(fcntl+312)
close(0xffffffffffffffeb--1) @ ld-musl-aarch64.so.1+0x21124(fcntl+312)
close(any) @ ld-musl-aarch64.so.1+0x51bb8(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x52ff0(fopen64+176)
close(any) @ ld-musl-aarch64.so.1+0x5dc8c
close(any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
close(any) @ ld-musl-aarch64.so.1+0x61de4(__map_file*+84)
close(any) @ ld-musl-aarch64.so.1+0x61e30(__map_file*+160)
pipe2(any, 0) @ ld-musl-aarch64.so.1+0x65620(pipe+16)
getdents64(any u32, any, 2048) @ ld-musl-aarch64.so.1+0x2005c(readdir64+44)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x65550(lseek64+12)
read(any u32, any, any) @ ld-musl-aarch64.so.1+0x51ce8(__stdio_read*+76)
read(any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
read(any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
write(any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
write(any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
readv(any u32, any, 2) @ ld-musl-aarch64.so.1+0x51ce8(__stdio_read*+76)
writev(any u32, any, any) @ ld-musl-aarch64.so.1+0x51dc0(__stdio_write*+76)
writev(any, any, 0x2-0x3) @ ld-musl-aarch64.so.1+0x5dc8c
writev(any, any, 5) @ ld-musl-aarch64.so.1+0x5dc8c
writev(any, any, 0x2-0x3) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
writev(any, any, 5) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
pread64(any, any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
pread64(any, any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
pwrite64(any, any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
pwrite64(any, any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
pselect6(0x1-0x400, 0, 0, any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
pselect6(0x1-0x400, 0, 0, any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
ppoll(any, 3, any, 0, 8) @ ld-musl-aarch64.so.1+0x20608(__init_libc*+340)
ppoll(any, 1, any, 0, 8) @ ld-musl-aarch64.so.1+0x5dc8c
ppoll(any, 1, any, 0, 8) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
splice(any, 0, any, 0, 0x10000, SPLICE_F_MORE) @ ld-musl-aarch64.so.1+0x24bac(splice+16)
splice(any, 0, any, 0, 0x24000, SPLICE_F_MORE) @ ld-musl-aarch64.so.1+0x24bac(splice+16)
readlinkat(AT_FDCWD, any, any, non-NULL) @ ld-musl-aarch64.so.1+0x65808(readlink+44)
newfstatat(any, any, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x512a8(fstatat64+136)
newfstatat(any, any, any, 0-AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x512dc(fstatat64+188)
fstat(any, any) @ ld-musl-aarch64.so.1+0x51270(fstatat64+80)
fsync(any) @ ld-musl-aarch64.so.1+0x5dc8c
fsync(any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
timerfd_create(CLOCK_MONOTONIC, 0) @ ld-musl-aarch64.so.1+0x24ca0(timerfd_create+20)
timerfd_settime(STDIN_FILENO-0xfffffffffffffffe, 0, any, 0) @ ld-musl-aarch64.so.1+0x24cc4(timerfd_settime+20)
utimensat(any, 0, any, 0) @ ld-musl-aarch64.so.1+0x51720(utimensat+52)
utimensat(AT_FDCWD, any, any, AT_SYMLINK_NOFOLLOW) @ ld-musl-aarch64.so.1+0x51720(utimensat+52)
exit(any) @ ld-musl-aarch64.so.1+0x5dc2c
exit(any) @ ld-musl-aarch64.so.1+0x5dc64
exit(0) @ ld-musl-aarch64.so.1+0x5f384(pthread_exit+400)
exit_group(NULL-0x1) @ ld-musl-aarch64.so.1+0x20cbc(_Exit+12)
exit_group(non-NULL) @ ld-musl-aarch64.so.1+0x20cbc(_Exit+12)
set_tid_address(ld-musl-aarch64.so.1+0xb2240(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x48040(_Fork+128)
set_tid_address(any) @ ld-musl-aarch64.so.1+0x5f40c(start*+64)
futex(any, FUTEX_WAIT, any, 0, any u32, any)
futex(any, FUTEX_WAIT, non-NULL, 0, any, any u32)
futex(any, any, any, 0, 0, 0)
futex(any, any, 1, any, any, any)
futex(any, any, non-NULL, 0, 0, any)
futex(any, FUTEX_REQUEUE, 0, 1, ld-musl-aarch64.so.1+0xb1df4, ld-musl-aarch64.so.1+0xb1df4)
futex(any, FUTEX_LOCK_PI-FUTEX_UNLOCK_PI, 0, 0, any u32, any)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any u32, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, any, any u32)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, ld-musl-aarch64.so.1+0xb1df4, ld-musl-aarch64.so.1+0xb1df4)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG-FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any u32, any)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(ld-musl-aarch64.so.1+0xb0418(maplock*), any, 0-INT_MAX, ld-musl-aarch64.so.1+0xb0418(maplock*), any u32, any u32)
futex(ld-musl-aarch64.so.1+0xb1120(lock*), any, 0-INT_MAX, ld-musl-aarch64.so.1+0xb1120(lock*), any u32, any u32)
futex(ld-musl-aarch64.so.1+0xb1160(key_lock*), any, 0-INT_MAX, ld-musl-aarch64.so.1+0xb1160(key_lock*), any u32, any u32)
futex(ld-musl-aarch64.so.1+0xb1dc8, FUTEX_WAKE, INT_MAX, ld-musl-aarch64.so.1+0xb1dc8, any, any)
futex(ld-musl-aarch64.so.1+0xb1e60(lock*), any, 0-INT_MAX, ld-musl-aarch64.so.1+0xb1e60(lock*), any u32, any u32)
futex(ld-musl-aarch64.so.1+0xb2240(__thread_list_lock*), any, non-NULL, 0, ld-musl-aarch64.so.1+0xb22e4(tl_lock_waiters*), ld-musl-aarch64.so.1+0xb2240(__thread_list_lock*))
futex(ld-musl-aarch64.so.1+0xb22f4(caller_sem*), any, INT_MAX, ld-musl-aarch64.so.1+0xb22f4(caller_sem*), 0, any u32)
futex(ld-musl-aarch64.so.1+0xb2314(target_sem*), any, INT_MAX, ld-musl-aarch64.so.1+0xb2314(target_sem*), 0, any u32)
futex(ld-musl-aarch64.so.1+0xb2338(vmlock*), any, non-NULL, 0, ld-musl-aarch64.so.1+0xb233c, ld-musl-aarch64.so.1+0xb2338(vmlock*))
futex(ld-musl-aarch64.so.1+0xb2338(vmlock*), FUTEX_WAKE, INT_MAX, ld-musl-aarch64.so.1+0xb2338(vmlock*), any, any)
futex(ld-musl-aarch64.so.1+0xb2338(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, ld-musl-aarch64.so.1+0xb2338(vmlock*), any, any)
set_robust_list(0, 24) @ ld-musl-aarch64.so.1+0x5f358(pthread_exit+356)
set_robust_list(any, 24) @ ld-musl-aarch64.so.1+0x60434(__pthread_mutex_trylock_owner*+204)
nanosleep(any, any) @ ld-musl-aarch64.so.1+0x5dc8c
nanosleep(any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
clock_gettime(CLOCK_REALTIME, any) @ ld-musl-aarch64.so.1+0x632b0(clock_gettime+72)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
sched_setscheduler(any u32, any, any) @ ld-musl-aarch64.so.1+0x5f8a8(pthread_create+1040)
restart_syscall()
kill(any, SIGKILL) @ ld-musl-aarch64.so.1+0x65a38(do_setxid*+76)
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x20d1c(abort+84)
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x506d8(raise+44)
tkill(any u32, SIGSETXID) @ ld-musl-aarch64.so.1+0x5e724(cancel_handler*+176)
tkill(non-NULL, SIGSETXID) @ ld-musl-aarch64.so.1+0x5ffec(pthread_kill+68)
tkill(any u32, SIGSYNCCALL) @ ld-musl-aarch64.so.1+0x61b18(__synccall*+404)
rt_sigaction(SIGABRT, any, 0, 8) @ ld-musl-aarch64.so.1+0x20d08(abort+64)
rt_sigaction(SIGINT, any, 0, 8) @ ld-musl-aarch64.so.1+0x5081c(__libc_sigaction*+240)
rt_sigaction(SIGSETXID-SIGSYNCCALL, any, 0, 8) @ ld-musl-aarch64.so.1+0x5081c(__libc_sigaction*+240)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x20d34(abort+108)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0x6f118(all_mask*), any, 8) @ ld-musl-aarch64.so.1+0x50518(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0x6f110(app_mask*), any, 8) @ ld-musl-aarch64.so.1+0x50538(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x50554(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x508a4(__libc_sigaction*+376)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x5f44c(start*+128)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x5f544(pthread_create+172)
rt_sigprocmask(SIG_BLOCK, any, any, 8) @ ld-musl-aarch64.so.1+0x610e8(pthread_sigmask+24)
rt_sigreturn(any) @ ld-musl-aarch64.so.1+0x504d4
setsid() @ ld-musl-aarch64.so.1+0x659c8(setsid+12)
uname(any) @ ld-musl-aarch64.so.1+0x3e200(uname+12)
umask(any u32) @ ld-musl-aarch64.so.1+0x516dc(umask+16)
prctl(PR_GET_DUMPABLE, 0, 0, any, any) @ ld-musl-aarch64.so.1+0x24844(prctl+104)
gettimeofday(any, 0) @ ld-musl-aarch64.so.1+0x632d0(clock_gettime+104)
gettimeofday(non-NULL, any) @ [vdso]+0x658(__kernel_gettimeofday+256)
getpid() @ ld-musl-aarch64.so.1+0x6541c(getpid+4)
getpid() @ ld-musl-aarch64.so.1+0x65a2c(do_setxid*+64)
getppid() @ ld-musl-aarch64.so.1+0x65428(getppid+4)
getuid() @ ld-musl-aarch64.so.1+0x65454(getuid+4)
geteuid() @ ld-musl-aarch64.so.1+0x652c8(geteuid+4)
getgid() @ ld-musl-aarch64.so.1+0x652d4(getgid+4)
getegid() @ ld-musl-aarch64.so.1+0x652bc(getegid+4)
gettid() @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
gettid() @ ld-musl-aarch64.so.1+0x61aa8(__synccall*+292)
sysinfo(any) @ ld-musl-aarch64.so.1+0x24c64(sysinfo+12)
socket(AF_UNIX-AF_INET, SOCK_STREAM-SOCK_DGRAM, 0) @ ld-musl-aarch64.so.1+0x45c54(socket+40)
socket(AF_UNIX-AF_INET, 0-SOCK_DGRAM, 0) @ ld-musl-aarch64.so.1+0x45c8c(socket+96)
bind(STDIN_FILENO-0xfffffffffffffffe, any, 110) @ ld-musl-aarch64.so.1+0x3fd4c(bind+32)
listen(STDIN_FILENO-0xfffffffffffffffe, 100) @ ld-musl-aarch64.so.1+0x42aa8(listen+36)
accept(any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
accept(any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
connect(STDIN_FILENO-0xfffffffffffffffe, any, 110) @ ld-musl-aarch64.so.1+0x5dc8c
connect(STDIN_FILENO-0xfffffffffffffffe, any, 110) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
sendmsg(any, any, MSG_NOSIGNAL) @ ld-musl-aarch64.so.1+0x5dc8c
sendmsg(any, any, MSG_NOSIGNAL) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
readahead(any, any, any u32) @ ld-musl-aarch64.so.1+0x24978(readahead+8)
brk(0) @ ld-musl-aarch64.so.1+0x2b624(__malloc_alloc_meta*+304)
brk(any) @ ld-musl-aarch64.so.1+0x2b644(__malloc_alloc_meta*+336)
brk(any) @ ld-musl-aarch64.so.1+0x2b6b4(__malloc_alloc_meta*+448)
munmap(any, any) @ ld-musl-aarch64.so.1+0x3e974(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x5dc24
mremap(any, NULL-0xfffffffffffff000, NULL-0xfffffffffffff000, MREMAP_MAYMOVE, 0) @ ld-musl-aarch64.so.1+0x3e8d0(mremap+140)
clone(SIGCHLD, 0, any, any, any) @ ld-musl-aarch64.so.1+0x47ff8(_Fork+56)
clone(CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID|CLONE_DETACHED, any, any, any, ld-musl-aarch64.so.1+0xb2240(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x5dc4c
mmap(0, any, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
mmap(0, any, PROT_READ, MAP_SHARED, any, 0) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
mmap(any, any, PROT_NONE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
fadvise64(any, 0, 0, 1) @ ld-musl-aarch64.so.1+0x212a8(posix_fadvise64+12)
fadvise64(any, 0, 0, 4) @ ld-musl-aarch64.so.1+0x212a8(posix_fadvise64+12)
mprotect(any, any, PROT_READ|PROT_WRITE) @ ld-musl-aarch64.so.1+0x3e834(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x66cb8(reloc_all*+364)
wait4(-1, any, 0, 0) @ ld-musl-aarch64.so.1+0x5dc8c
wait4(-1, any, 0, 0) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
getrandom(any, non-NULL, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x5dc8c
getrandom(any, non-NULL, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
membarrier(MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED, 0) @ ld-musl-aarch64.so.1+0x2462c(__membarrier_init*+12)
