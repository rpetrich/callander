callander: permitted syscalls: getxattr(non-NULL, libcap.so.2+0x6da3, any, 24) @ ld-musl-aarch64.so.1+0x24d94(getxattr+4)
epoll_create1(EPOLL_CLOEXEC) @ ld-musl-aarch64.so.1+0x24220(epoll_create1+16)
epoll_ctl(any, 1, any, any) @ ld-musl-aarch64.so.1+0x24274(epoll_ctl+24)
epoll_ctl(any, 2, any, 0) @ ld-musl-aarch64.so.1+0x24274(epoll_ctl+24)
epoll_pwait(any, any, 10, -1) @ ld-musl-aarch64.so.1+0x5dc8c
epoll_pwait(any, any, 10, -1) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
dup(any) @ ld-musl-aarch64.so.1+0x64dac(dup+16)
dup3(any, STDOUT_FILENO-STDERR_FILENO, 0) @ ld-musl-aarch64.so.1+0x64dd8(dup2+28)
dup3(any, STDERR_FILENO, O_CLOEXEC) @ ld-musl-aarch64.so.1+0x64e3c(dup3+28)
fcntl(STDIN_FILENO-STDERR_FILENO, F_DUPFD_CLOEXEC, 2) @ ld-musl-aarch64.so.1+0x210d8(fcntl+236)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x210f8(fcntl+268)
fcntl(STDIN_FILENO-STDERR_FILENO, F_DUPFD_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x2110c(fcntl+288)
fcntl(STDIN_FILENO-STDERR_FILENO, F_DUPFD, 2) @ ld-musl-aarch64.so.1+0x2113c(fcntl+336)
fcntl(any, F_GETFD-F_SETFD, 0) @ ld-musl-aarch64.so.1+0x21164(fcntl+376)
fcntl(any, F_SETFD, any u32) @ ld-musl-aarch64.so.1+0x21164(fcntl+376)
fcntl(any, F_GETFL, any) @ ld-musl-aarch64.so.1+0x21164(fcntl+376)
fcntl(any, F_SETFL, any u32) @ ld-musl-aarch64.so.1+0x21164(fcntl+376)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x21204(open+136)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x45cc0(socket+148)
fcntl(any, F_SETFL, 2048) @ ld-musl-aarch64.so.1+0x45cd8(socket+172)
fcntl(any u32, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x45d9c(socketpair+184)
fcntl(any u32, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x45da4(socketpair+192)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x5128c(fstatat64+108)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x517f0(fdopen+176)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x52fd4(fopen64+148)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x64e0c(dup2+80)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x65128(fchown+96)
fcntl(any u32, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x656b8(pipe2+136)
fcntl(any u32, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x656c0(pipe2+144)
ioctl(any, TCGETS, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, TCSETSF, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, TIOCGWINSZ-TIOCSWINSZ, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, SIOCSIFHWADDR, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, SIOCGIFHWADDR, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, SIOCGIFINDEX, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, TIOCSPTLCK, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, SECCOMP_IOCTL_NOTIF_ID_VALID, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_SUBVOL_CREATE-BTRFS_IOC_SNAP_DESTROY, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_SNAP_CREATE_V2, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, TIOCGPTN, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, SECCOMP_IOCTL_NOTIF_ID_VALID_WRONG_DIR, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_SPACE_INFO, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, SECCOMP_IOCTL_NOTIF_SEND, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, SECCOMP_IOCTL_NOTIF_RECV, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, BTRFS_IOC_TREE_SEARCH-BTRFS_IOC_INO_LOOKUP, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x5186c(fdopen+300)
ioctl(any u32, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x51e9c(__stdout_write*+56)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x65474(isatty+24)
mkdirat(AT_FDCWD, non-NULL, 0755) @ ld-musl-aarch64.so.1+0x51454(mkdir+28)
unlinkat(AT_FDCWD, any, AT_REMOVEDIR) @ ld-musl-aarch64.so.1+0x658f0(rmdir+24)
unlinkat(AT_FDCWD, any, 0) @ ld-musl-aarch64.so.1+0x65cd0(unlink+24)
umount2(any, MNT_DETACH) @ ld-musl-aarch64.so.1+0x24704(umount2+16)
mount(0, /usr/bin/lxc-ls+0xcc1c7, 0, 0x84000, 0) @ ld-musl-aarch64.so.1+0x246c4(mount+12)
statfs(any, any) @ ld-musl-aarch64.so.1+0x51540(statfs64+52)
faccessat(AT_FDCWD, any, F_OK-X_OK) @ ld-musl-aarch64.so.1+0x64c78(access+32)
chroot(any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
fchownat(AT_FDCWD, any, any u32, any u32, 0) @ ld-musl-aarch64.so.1+0x65158(fchown+144)
fchown(any, any u32, any u32) @ ld-musl-aarch64.so.1+0x650f4(fchown+44)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9bee9, O_RDWR|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x20630(__init_libc*+380)
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x52fb0(fopen64+112)
openat(any, any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
openat(any, any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
close(any) @ ld-musl-aarch64.so.1+0x20014(opendir+56)
close(any) @ ld-musl-aarch64.so.1+0x21124(fcntl+312)
close(any) @ ld-musl-aarch64.so.1+0x42368(if_nametoindex+116)
close(any) @ ld-musl-aarch64.so.1+0x51bb8(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x52ff0(fopen64+176)
close(any) @ ld-musl-aarch64.so.1+0x5dc8c
close(any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
pipe2(any, 0) @ ld-musl-aarch64.so.1+0x65620(pipe+16)
pipe2(any, O_CLOEXEC) @ ld-musl-aarch64.so.1+0x65654(pipe2+36)
getdents64(any u32, any, 2048) @ ld-musl-aarch64.so.1+0x2005c(readdir64+44)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x65550(lseek64+12)
read(any u32, any, any) @ ld-musl-aarch64.so.1+0x51ce8(__stdio_read*+76)
read(any, any, 1) @ ld-musl-aarch64.so.1+0x5dc8c
read(any, any, 4) @ ld-musl-aarch64.so.1+0x5dc8c
read(any, any, 128) @ ld-musl-aarch64.so.1+0x5dc8c
read(any, any, 1024) @ ld-musl-aarch64.so.1+0x5dc8c
read(any, any, 0xfff-0x1000) @ ld-musl-aarch64.so.1+0x5dc8c
read(any, any, 1) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
read(any, any, 4) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
read(any, any, 128) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
read(any, any, 1024) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
read(any, any, 0xfff-0x1000) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
write(any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
write(any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
readv(any u32, any, 2) @ ld-musl-aarch64.so.1+0x51ce8(__stdio_read*+76)
writev(any u32, any, any) @ ld-musl-aarch64.so.1+0x51dc0(__stdio_write*+76)
ppoll(any, 3, any, 0, 8) @ ld-musl-aarch64.so.1+0x20608(__init_libc*+340)
signalfd4(-1, any, 8, SFD_CLOEXEC) @ ld-musl-aarch64.so.1+0x24b88(signalfd+24)
readlinkat(AT_FDCWD, any, any, 0x1000) @ ld-musl-aarch64.so.1+0x65808(readlink+44)
newfstatat(any, any, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x512a8(fstatat64+136)
newfstatat(any, ld-musl-aarch64.so.1+0x9c3ec, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x512dc(fstatat64+188)
newfstatat(AT_FDCWD, any, any, 0) @ ld-musl-aarch64.so.1+0x512dc(fstatat64+188)
newfstatat(AT_FDCWD, any, any, AT_SYMLINK_NOFOLLOW) @ ld-musl-aarch64.so.1+0x512dc(fstatat64+188)
fstat(any, any) @ ld-musl-aarch64.so.1+0x51270(fstatat64+80)
capget(any, any) @ ld-musl-aarch64.so.1+0x24144(capget+12)
capset(any, any) @ ld-musl-aarch64.so.1+0x24128(capset+12)
capset(any, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
exit(any) @ ld-musl-aarch64.so.1+0x5dc2c
exit(any) @ ld-musl-aarch64.so.1+0x5dc64
exit(0) @ ld-musl-aarch64.so.1+0x5f384(pthread_exit+400)
exit_group(any) @ ld-musl-aarch64.so.1+0x20cbc(_Exit+12)
set_tid_address(ld-musl-aarch64.so.1+0xb2240(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x48040(_Fork+128)
unshare(CLONE_NEWNS) @ ld-musl-aarch64.so.1+0x24d04(unshare+16)
unshare(CLONE_NEWUSER) @ ld-musl-aarch64.so.1+0x24d04(unshare+16)
futex(any, FUTEX_WAIT, any, 0, any u32, any)
futex(any, FUTEX_WAIT, non-NULL, 0, any, any u32)
futex(any, any, any, 0, 0, 0)
futex(any, any, 1, any, any, any)
futex(any, any, non-NULL, 0, 0, any)
futex(any, FUTEX_REQUEUE, 0, 1, ld-musl-aarch64.so.1+0xb1df4, ld-musl-aarch64.so.1+0xb1df4)
futex(any, FUTEX_LOCK_PI-FUTEX_UNLOCK_PI, 0, 0, any u32, any)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any u32, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, any, any u32)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, ld-musl-aarch64.so.1+0xb1df4, ld-musl-aarch64.so.1+0xb1df4)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG-FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any u32, any)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(ld-musl-aarch64.so.1+0xb0418(maplock*), any, 0-INT_MAX, ld-musl-aarch64.so.1+0xb0418(maplock*), any u32, any u32)
futex(ld-musl-aarch64.so.1+0xb1120(lock*), any, 0-INT_MAX, ld-musl-aarch64.so.1+0xb1120(lock*), any u32, any u32)
futex(ld-musl-aarch64.so.1+0xb1160(key_lock*), any, 0-INT_MAX, ld-musl-aarch64.so.1+0xb1160(key_lock*), any u32, any u32)
futex(ld-musl-aarch64.so.1+0xb1dc8, FUTEX_WAKE, INT_MAX, ld-musl-aarch64.so.1+0xb1dc8, any, any)
futex(ld-musl-aarch64.so.1+0xb1e60(lock*), any, 0-INT_MAX, ld-musl-aarch64.so.1+0xb1e60(lock*), any u32, any u32)
futex(ld-musl-aarch64.so.1+0xb2240(__thread_list_lock*), any, non-NULL, 0, ld-musl-aarch64.so.1+0xb22e4(tl_lock_waiters*), ld-musl-aarch64.so.1+0xb2240(__thread_list_lock*))
futex(ld-musl-aarch64.so.1+0xb22f4(caller_sem*), any, 0x1-0x7fffffff, ld-musl-aarch64.so.1+0xb22f4(caller_sem*), 0, any u32)
futex(ld-musl-aarch64.so.1+0xb2314(target_sem*), any, 0x1-0x7fffffff, ld-musl-aarch64.so.1+0xb2314(target_sem*), 0, any u32)
futex(ld-musl-aarch64.so.1+0xb2338(vmlock*), any, non-NULL, 0, ld-musl-aarch64.so.1+0xb233c, ld-musl-aarch64.so.1+0xb2338(vmlock*))
futex(ld-musl-aarch64.so.1+0xb2338(vmlock*), FUTEX_WAKE, INT_MAX, ld-musl-aarch64.so.1+0xb2338(vmlock*), any, any)
futex(ld-musl-aarch64.so.1+0xb2338(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, ld-musl-aarch64.so.1+0xb2338(vmlock*), any, any)
set_robust_list(0, 24) @ ld-musl-aarch64.so.1+0x5f358(pthread_exit+356)
set_robust_list(any, 24) @ ld-musl-aarch64.so.1+0x60434(__pthread_mutex_trylock_owner*+204)
nanosleep(any, 0) @ ld-musl-aarch64.so.1+0x5dc8c
nanosleep(any, 0) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
setitimer(ITIMER_REAL, any, any) @ ld-musl-aarch64.so.1+0x5070c(setitimer+16)
clock_gettime(CLOCK_REALTIME, any) @ ld-musl-aarch64.so.1+0x632b0(clock_gettime+72)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
sched_yield() @ ld-musl-aarch64.so.1+0x4f9e4(sched_yield+12)
restart_syscall()
kill(any, SIGKILL) @ ld-musl-aarch64.so.1+0x24a8c(do_setgroups*+76)
kill(any, any) @ ld-musl-aarch64.so.1+0x50590(kill+20)
kill(any, SIGKILL) @ ld-musl-aarch64.so.1+0x65a38(do_setxid*+76)
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x20d1c(abort+84)
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x506d8(raise+44)
tkill(any u32, SIGSETXID) @ ld-musl-aarch64.so.1+0x5e724(cancel_handler*+176)
tkill(non-NULL, SIGSETXID) @ ld-musl-aarch64.so.1+0x5ffec(pthread_kill+68)
tkill(any u32, SIGSYNCCALL) @ ld-musl-aarch64.so.1+0x61b18(__synccall*+404)
rt_sigaction(SIGABRT, any, 0, 8) @ ld-musl-aarch64.so.1+0x20d08(abort+64)
rt_sigaction(any, any, any, 8) @ ld-musl-aarch64.so.1+0x5081c(__libc_sigaction*+240)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x20d34(abort+108)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0x6f118(all_mask*), any, 8) @ ld-musl-aarch64.so.1+0x50518(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0x6f110(app_mask*), any, 8) @ ld-musl-aarch64.so.1+0x50538(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x50554(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x508a4(__libc_sigaction*+376)
rt_sigprocmask(SIG_BLOCK-SIG_SETMASK, any, any, 8) @ ld-musl-aarch64.so.1+0x610e8(pthread_sigmask+24)
rt_sigreturn(any) @ ld-musl-aarch64.so.1+0x504d4
setgid(any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
setgid(any) @ ld-musl-aarch64.so.1+0x65a0c(do_setxid*+32)
setuid(any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
setuid(any) @ ld-musl-aarch64.so.1+0x65a0c(do_setxid*+32)
setgroups(any, any) @ ld-musl-aarch64.so.1+0x24a60(do_setgroups*+32)
setgroups(any, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
setgroups(any, any) @ ld-musl-aarch64.so.1+0x65a0c(do_setxid*+32)
umask(any u32) @ ld-musl-aarch64.so.1+0x516dc(umask+16)
prctl(PR_SET_MM, 14, any, any, any) @ ld-musl-aarch64.so.1+0x24844(prctl+104)
prctl(any, any, any, any, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
gettimeofday(any, 0) @ ld-musl-aarch64.so.1+0x632d0(clock_gettime+104)
gettimeofday(non-NULL, any) @ [vdso]+0x658(__kernel_gettimeofday+256)
getpid() @ ld-musl-aarch64.so.1+0x24a80(do_setgroups*+64)
getpid() @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
getpid() @ ld-musl-aarch64.so.1+0x6541c(getpid+4)
getpid() @ ld-musl-aarch64.so.1+0x65a2c(do_setxid*+64)
getuid() @ ld-musl-aarch64.so.1+0x65454(getuid+4)
geteuid() @ ld-musl-aarch64.so.1+0x652c8(geteuid+4)
getegid() @ ld-musl-aarch64.so.1+0x652bc(getegid+4)
gettid() @ ld-musl-aarch64.so.1+0x61aa8(__synccall*+292)
socket(AF_UNIX, SOCK_SEQPACKET|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x45c54(socket+40)
socket(AF_UNIX-AF_INET, SOCK_DGRAM|SOCK_CLOEXEC-SOCK_RAW|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x45c54(socket+40)
socket(AF_UNIX, SOCK_SEQPACKET, 0) @ ld-musl-aarch64.so.1+0x45c8c(socket+96)
socket(AF_UNIX-AF_INET, SOCK_DGRAM-SOCK_RAW, 0) @ ld-musl-aarch64.so.1+0x45c8c(socket+96)
socketpair(AF_UNIX, SOCK_STREAM|SOCK_CLOEXEC, 0, any) @ ld-musl-aarch64.so.1+0x45d20(socketpair+60)
socketpair(AF_UNIX, SOCK_STREAM, 0, any) @ ld-musl-aarch64.so.1+0x45d78(socketpair+148)
bind(any, any, 12) @ ld-musl-aarch64.so.1+0x3fd4c(bind+32)
connect(any, any, any u32) @ ld-musl-aarch64.so.1+0x5dc8c
connect(any, any, any u32) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
getsockname(any, any, any) @ ld-musl-aarch64.so.1+0x41e94(getsockname+28)
sendto(any, any, any, 0, 0, 0) @ ld-musl-aarch64.so.1+0x5dc8c
sendto(any, any, non-NULL, MSG_NOSIGNAL, 0, 0) @ ld-musl-aarch64.so.1+0x5dc8c
sendto(any, any, any, 0, 0, 0) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
sendto(any, any, non-NULL, MSG_NOSIGNAL, 0, 0) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
recvfrom(any, any, 0x2000, MSG_DONTWAIT, 0, 0) @ ld-musl-aarch64.so.1+0x5dc8c
recvfrom(any, any, 0x2000, MSG_DONTWAIT, 0, 0) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
setsockopt(any, SOL_SOCKET, SO_SNDBUF-SO_RCVBUF, any, 4) @ ld-musl-aarch64.so.1+0x45bbc(setsockopt+32)
setsockopt(any, SOL_SOCKET, 0x14-0x15, any, 16) @ ld-musl-aarch64.so.1+0x45bbc(setsockopt+32)
setsockopt(any, 0x10e, TCP_QUICKACK, any, 4) @ ld-musl-aarch64.so.1+0x45bbc(setsockopt+32)
sendmsg(any, any, MSG_NOSIGNAL) @ ld-musl-aarch64.so.1+0x5dc8c
sendmsg(any, any, MSG_NOSIGNAL) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
recvmsg(any, any, 0) @ ld-musl-aarch64.so.1+0x5dc8c
recvmsg(any, any, MSG_TRUNC) @ ld-musl-aarch64.so.1+0x5dc8c
recvmsg(any, any, MSG_CMSG_CLOEXEC) @ ld-musl-aarch64.so.1+0x5dc8c
recvmsg(any, any, 0) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
recvmsg(any, any, MSG_TRUNC) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
recvmsg(any, any, MSG_CMSG_CLOEXEC) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
brk(0) @ ld-musl-aarch64.so.1+0x2b624(__malloc_alloc_meta*+304)
brk(any) @ ld-musl-aarch64.so.1+0x2b644(__malloc_alloc_meta*+336)
brk(any) @ ld-musl-aarch64.so.1+0x2b6b4(__malloc_alloc_meta*+448)
brk(0) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
munmap(NULL-0xfffffffffffffffe, any) @ ld-musl-aarch64.so.1+0x3e974(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x5dc24
mremap(any, NULL-0xfffffffffffff000, NULL-0xfffffffffffff000, MREMAP_MAYMOVE, 0) @ ld-musl-aarch64.so.1+0x3e8d0(mremap+140)
clone(SIGCHLD, 0, any, any, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
clone(SIGCHLD|CLONE_NEWUSER, 0, any, any, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
clone(SIGCHLD, 0, any, any, any) @ ld-musl-aarch64.so.1+0x47ff8(_Fork+56)
clone(SIGCHLD|CLONE_NEWUSER, any, 0, any, any) @ ld-musl-aarch64.so.1+0x5dc4c
mmap(0, any, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_POPULATE, any, 0) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
mmap(any, any, PROT_NONE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
mprotect(any, any, PROT_READ|PROT_WRITE) @ ld-musl-aarch64.so.1+0x3e834(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x66cb8(reloc_all*+364)
wait4(any, any, 0, 0) @ ld-musl-aarch64.so.1+0x5dc8c
wait4(any, any, 0, 0) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
seccomp(SECCOMP_SET_MODE_STRICT, NULL-0x2, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
seccomp(SECCOMP_SET_MODE_FILTER, 4, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
seccomp(SECCOMP_SET_MODE_FILTER, 8, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
seccomp(SECCOMP_SET_MODE_FILTER, 16, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
memfd_create(/usr/bin/lxc-ls+0xe6e2a, MFD_CLOEXEC) @ ld-musl-aarch64.so.1+0x24644(memfd_create+16)
bpf(BPF_PROG_LOAD, any, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
bpf(0x8, any, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
bpf(0x9, any, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
pidfd_send_signal(any u32, any u32, any, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
clone3(any, 64) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
close_range(3, -1 as u32, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
openat2(any u32, /usr/bin/lxc-ls+0xc95a4, any, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
openat2(any u32, /usr/bin/lxc-ls+0xcb550, any, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
openat2(any u32, /usr/bin/lxc-ls+0xe4d4b, any, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
openat2(any u32, /usr/bin/lxc-ls+0xe4da1, any, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
openat2(any u32, /usr/bin/lxc-ls+0xe5d22, any, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
