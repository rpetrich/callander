callander: permitted syscalls: getcwd(any, non-NULL) @ ld-musl-aarch64.so.1+0x65238(getcwd+36)
eventfd2(0, EFD_NONBLOCK|EFD_CLOEXEC) @ ld-musl-aarch64.so.1+0x242d8(eventfd+20)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x21164(fcntl+376)
fcntl(any, F_GETFL-F_SETFL, any) @ ld-musl-aarch64.so.1+0x21164(fcntl+376)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x21204(open+136)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x45cc0(socket+148)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x5128c(fstatat64+108)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x517f0(fdopen+176)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x52fd4(fopen64+148)
fcntl(any u32, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x656b8(pipe2+136)
fcntl(any u32, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x656c0(pipe2+144)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x5186c(fdopen+300)
ioctl(any u32, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x51e9c(__stdout_write*+56)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x65474(isatty+24)
unlinkat(AT_FDCWD, any, 0) @ ld-musl-aarch64.so.1+0x65cd0(unlink+24)
renameat(AT_FDCWD, any, AT_FDCWD, non-NULL) @ ld-musl-aarch64.so.1+0x55464(rename+32)
fallocate(STDIN_FILENO-0xfffffffffffffffe, 0, 0, non-NULL) @ ld-musl-aarch64.so.1+0x24348(fallocate64+20)
faccessat(AT_FDCWD, any, X_OK-W_OK) @ ld-musl-aarch64.so.1+0x64c78(access+32)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9bee9, O_RDWR|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x20630(__init_libc*+380)
openat(AT_FDCWD, non-NULL, O_RDONLY, any) @ ld-musl-aarch64.so.1+0x52fb0(fopen64+112)
openat(AT_FDCWD, any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
openat(AT_FDCWD, any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
openat(AT_FDCWD, any, O_RDONLY|O_NONBLOCK|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x61dbc(__map_file*+44)
close(any) @ ld-musl-aarch64.so.1+0x20014(opendir+56)
close(any) @ ld-musl-aarch64.so.1+0x51bb8(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x52ff0(fopen64+176)
close(any) @ ld-musl-aarch64.so.1+0x5dc8c
close(any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
close(any) @ ld-musl-aarch64.so.1+0x61de4(__map_file*+84)
close(any) @ ld-musl-aarch64.so.1+0x61e30(__map_file*+160)
pipe2(any, 0) @ ld-musl-aarch64.so.1+0x65620(pipe+16)
pipe2(any, O_CLOEXEC) @ ld-musl-aarch64.so.1+0x65654(pipe2+36)
getdents64(any u32, any, 2048) @ ld-musl-aarch64.so.1+0x2005c(readdir64+44)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x65550(lseek64+12)
read(any u32, any, any) @ ld-musl-aarch64.so.1+0x51ce8(__stdio_read*+76)
read(any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
read(any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
write(any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
write(any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
readv(any u32, any, 2) @ ld-musl-aarch64.so.1+0x51ce8(__stdio_read*+76)
writev(any u32, any, any) @ ld-musl-aarch64.so.1+0x51dc0(__stdio_write*+76)
writev(any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
writev(any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
pread64(any, any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
pread64(any, any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
ppoll(any, 3, any, 0, 8) @ ld-musl-aarch64.so.1+0x20608(__init_libc*+340)
ppoll(any, any u32, any, 0, 8) @ ld-musl-aarch64.so.1+0x5dc8c
ppoll(any, any u32, any, 0, 8) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
readlinkat(AT_FDCWD, ld-musl-aarch64.so.1+0x9cf7e, any, 512) @ ld-musl-aarch64.so.1+0x65808(readlink+44)
newfstatat(any, non-NULL, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x512a8(fstatat64+136)
newfstatat(any, ld-musl-aarch64.so.1+0x9c3ec, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x512dc(fstatat64+188)
newfstatat(AT_FDCWD, any, any, 0) @ ld-musl-aarch64.so.1+0x512dc(fstatat64+188)
newfstatat(AT_FDCWD, non-NULL, any, AT_SYMLINK_NOFOLLOW) @ ld-musl-aarch64.so.1+0x512dc(fstatat64+188)
fstat(any, any) @ ld-musl-aarch64.so.1+0x51270(fstatat64+80)
fsync(any) @ ld-musl-aarch64.so.1+0x5dc8c
fsync(any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
exit(any) @ ld-musl-aarch64.so.1+0x5dc2c
exit(any) @ ld-musl-aarch64.so.1+0x5dc64
exit(0) @ ld-musl-aarch64.so.1+0x5f384(pthread_exit+400)
exit_group(any) @ ld-musl-aarch64.so.1+0x20cbc(_Exit+12)
waitid(P_PIDFD, any u32, any, WNOHANG|WEXITED, 0) @ ld-musl-aarch64.so.1+0x5dc8c
waitid(P_PIDFD, any u32, any, WNOHANG|WEXITED, 0) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
set_tid_address(any) @ ld-musl-aarch64.so.1+0x5f40c(start*+64)
futex(any, FUTEX_WAIT, any, 0, any u32, any)
futex(any, FUTEX_WAIT, non-NULL, 0, any, any u32)
futex(any, any, 0-INT_MAX, any, any u32, any u32)
futex(any, any, any, 0, 0, 0)
futex(any, any, 1, any, any, any)
futex(any, any, non-NULL, 0, 0, any)
futex(any, FUTEX_REQUEUE, 0, 1, libintl.so.8+0x201f4, libintl.so.8+0x201f4)
futex(any, FUTEX_REQUEUE, 0, 1, libintl.so.8+0x20284, libintl.so.8+0x20284)
futex(any, FUTEX_REQUEUE, 0, 1, ld-musl-aarch64.so.1+0xb1df4, ld-musl-aarch64.so.1+0xb1df4)
futex(any, FUTEX_LOCK_PI-FUTEX_UNLOCK_PI, 0, 0, any u32, any)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG-FUTEX_WAKE|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, libintl.so.8+0x201f4, libintl.so.8+0x201f4)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, libintl.so.8+0x20284, libintl.so.8+0x20284)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, ld-musl-aarch64.so.1+0xb1df4, ld-musl-aarch64.so.1+0xb1df4)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG-FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any u32, any)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(libintl.so.8+0x20220, FUTEX_WAKE, INT_MAX, libintl.so.8+0x20220, any, any)
futex(libintl.so.8+0x202b0, FUTEX_WAKE, INT_MAX, libintl.so.8+0x202b0, any, any)
futex(ld-musl-aarch64.so.1+0xb1dc8, FUTEX_WAKE, INT_MAX, ld-musl-aarch64.so.1+0xb1dc8, any, any)
futex(ld-musl-aarch64.so.1+0xb2240(__thread_list_lock*), any, non-NULL, 0, ld-musl-aarch64.so.1+0xb22e4(tl_lock_waiters*), ld-musl-aarch64.so.1+0xb2240(__thread_list_lock*))
futex(ld-musl-aarch64.so.1+0xb2338(vmlock*), any, non-NULL, 0, ld-musl-aarch64.so.1+0xb233c, ld-musl-aarch64.so.1+0xb2338(vmlock*))
futex(ld-musl-aarch64.so.1+0xb2338(vmlock*), FUTEX_WAKE, INT_MAX, ld-musl-aarch64.so.1+0xb2338(vmlock*), any, any)
set_robust_list(0, 24) @ ld-musl-aarch64.so.1+0x5f358(pthread_exit+356)
set_robust_list(any, 24) @ ld-musl-aarch64.so.1+0x60434(__pthread_mutex_trylock_owner*+204)
clock_gettime(CLOCK_REALTIME-CLOCK_MONOTONIC, any) @ ld-musl-aarch64.so.1+0x632b0(clock_gettime+72)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
sched_setscheduler(any u32, any, any) @ ld-musl-aarch64.so.1+0x5f8a8(pthread_create+1040)
sched_yield() @ ld-musl-aarch64.so.1+0x4f9e4(sched_yield+12)
restart_syscall()
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x20d1c(abort+84)
tkill(any u32, SIGSYNCCALL) @ ld-musl-aarch64.so.1+0x24604(membarrier+304)
tkill(any, SIGTRAP-SIGABRT) @ ld-musl-aarch64.so.1+0x506d8(raise+44)
tkill(any, SIGFPE) @ ld-musl-aarch64.so.1+0x506d8(raise+44)
tkill(any u32, SIGSETXID) @ ld-musl-aarch64.so.1+0x5e724(cancel_handler*+176)
tkill(non-NULL, SIGSETXID) @ ld-musl-aarch64.so.1+0x5ffec(pthread_kill+68)
rt_sigaction(SIGABRT, any, 0, 8) @ ld-musl-aarch64.so.1+0x20d08(abort+64)
rt_sigaction(any, any, 0, 8) @ ld-musl-aarch64.so.1+0x5081c(__libc_sigaction*+240)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x20d34(abort+108)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0x6f118(all_mask*), any, 8) @ ld-musl-aarch64.so.1+0x50518(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0x6f110(app_mask*), any, 8) @ ld-musl-aarch64.so.1+0x50538(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x50554(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x508a4(__libc_sigaction*+376)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x5f44c(start*+128)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x5f544(pthread_create+172)
rt_sigprocmask(SIG_BLOCK, any, any, 8) @ ld-musl-aarch64.so.1+0x610e8(pthread_sigmask+24)
rt_sigprocmask(SIG_SETMASK, any, any, 8) @ ld-musl-aarch64.so.1+0x610e8(pthread_sigmask+24)
rt_sigreturn(any) @ ld-musl-aarch64.so.1+0x504d4
prctl(PR_SET_NAME, non-NULL, 0, any, any) @ ld-musl-aarch64.so.1+0x24844(prctl+104)
gettimeofday(any, 0) @ ld-musl-aarch64.so.1+0x632d0(clock_gettime+104)
gettimeofday(non-NULL, any) @ [vdso]+0x658(__kernel_gettimeofday+256)
getpid() @ ld-musl-aarch64.so.1+0x6541c(getpid+4)
getuid() @ ld-musl-aarch64.so.1+0x65454(getuid+4)
geteuid() @ ld-musl-aarch64.so.1+0x652c8(geteuid+4)
getgid() @ ld-musl-aarch64.so.1+0x652d4(getgid+4)
getegid() @ ld-musl-aarch64.so.1+0x652bc(getegid+4)
socket(AF_UNIX, SOCK_DGRAM|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x45c54(socket+40)
socket(AF_UNIX, SOCK_DGRAM, 0) @ ld-musl-aarch64.so.1+0x45c8c(socket+96)
getpeername(any, any, any) @ ld-musl-aarch64.so.1+0x41ae0(getpeername+28)
sendmsg(any, any, MSG_NOSIGNAL) @ ld-musl-aarch64.so.1+0x5dc8c
sendmsg(any, any, MSG_NOSIGNAL) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
brk(0) @ ld-musl-aarch64.so.1+0x2b624(__malloc_alloc_meta*+304)
brk(any) @ ld-musl-aarch64.so.1+0x2b644(__malloc_alloc_meta*+336)
brk(any) @ ld-musl-aarch64.so.1+0x2b6b4(__malloc_alloc_meta*+448)
munmap(any, any) @ ld-musl-aarch64.so.1+0x3e974(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x5dc24
mremap(any, NULL-0xfffffffffffff000, NULL-0xfffffffffffff000, MREMAP_MAYMOVE, 0) @ ld-musl-aarch64.so.1+0x3e8d0(mremap+140)
clone(CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID|CLONE_DETACHED, any, any, any, ld-musl-aarch64.so.1+0xb2240(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x5dc4c
mmap(0, any, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
mmap(any, any, PROT_NONE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
mmap(any, any, any, MAP_SHARED-MAP_PRIVATE, any, any) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
mmap(any, non-NULL, any, MAP_PRIVATE|MAP_FIXED, any, any) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
mmap(any, non-NULL, any, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
mprotect(NULL-0xfffffffffffffffe, any, PROT_READ|PROT_WRITE|PROT_EXEC) @ ld-musl-aarch64.so.1+0x3e834(mprotect+56)
mprotect(any, any, PROT_READ|PROT_WRITE) @ ld-musl-aarch64.so.1+0x3e834(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x66cb8(reloc_all*+364)
wait4(non-NULL, any, WNOHANG, 0) @ ld-musl-aarch64.so.1+0x5dc8c
wait4(non-NULL, any, WNOHANG, 0) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
memfd_create(any, MFD_CLOEXEC) @ ld-musl-aarch64.so.1+0x24644(memfd_create+16)
membarrier(MEMBARRIER_CMD_PRIVATE_EXPEDITED, 0) @ ld-musl-aarch64.so.1+0x244f8(membarrier+36)
membarrier(MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED, 0) @ ld-musl-aarch64.so.1+0x2462c(__membarrier_init*+12)
