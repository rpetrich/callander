callander: permitted syscalls: read(any u32, any, any) @ libc.so.6+0x120b6b(__read+13)
read(any u32, any, any) @ libc.so.6+0x120baa(__read+76)
read(any u32, any, any) @ libc.so.6+0x121c72(__read_nocancel+4)
write(any u32, any, any) @ libc.so.6+0x12176e(__write+16)
write(any u32, any, any) @ libc.so.6+0x1217ad(__write+79)
write(any u32, any, any) @ libc.so.6+0x121d75(__write_nocancel+7)
close(any u32) @ libc.so.6+0x11bd9e(__close+16)
close(any u32) @ libc.so.6+0x11bdc8(__close+58)
close(any u32) @ libc.so.6+0x121815(__close_nocancel+7)
stat(any, any) @ libc.so.6+0x12fb42(__xstat+20)
fstat(any u32, any) @ libc.so.6+0x11cac5(fstat+7)
fstat(any u32, any) @ libc.so.6+0x12f071(__fxstat+19)
lstat(any, any) @ libc.so.6+0x12f182(__lxstat+20)
poll(any, any u32, any) @ libc.so.6+0x12051e(poll+16)
poll(any, any u32, any u32) @ libc.so.6+0x12055d(poll+79)
lseek(any u32, any, any) @ libc.so.6+0x11ff75(__lseek+7)
mmap(0, any, PROT_READ|PROT_WRITE, any u32, -1 as u32, 0) @ libc.so.6+0x12a5f0(mmap+34)
mmap(any, any, PROT_NONE-PROT_READ, any u32, any u32, 0) @ libc.so.6+0x12a5f0(mmap+34)
mmap(0, any, PROT_NONE-PROT_READ, any u32, any u32, 0) @ libc.so.6+0x12a64d(mmap+127)
mmap(0, any, PROT_READ|PROT_WRITE, any u32, -1 as u32, 0) @ libc.so.6+0x12a64d(mmap+127)
mprotect(any, any, PROT_READ|PROT_WRITE) @ libc.so.6+0x12af05(__mprotect+7)
munmap(any, any) @ libc.so.6+0x12b075(__munmap+7)
brk(any) @ libc.so.6+0x1229d5(brk+7)
rt_sigaction(any u32, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x57a5d(__libc_sigaction+191)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x3f605(abort+139)
rt_sigprocmask(SIG_BLOCK, libc.so.6+0x1cb980(sigall_set), any, sizeof(kernel_sigset_t)) @ libc.so.6+0xa93dd(__pthread_kill_implementation+79)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0xa9426(__pthread_kill_implementation+152)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0xae832(pthread_sigmask+68)
rt_sigreturn(any) @ libc.so.6+0x57987
ioctl(any u32, TCGETS, any) @ libc.so.6+0x122064(tcgetattr+38)
pread64(STDIN_FILENO-0xfffffffe, any, 511, 0) @ libc.so.6+0x121c38(__pread64_nocancel+10)
writev(any u32, any, any) @ ld-linux-x86-64.so.2+0xe90c(_dl_debug_vdprintf+286)
writev(STDERR_FILENO, any, any) @ libc.so.6+0x9c20b(__libc_message+477)
access(any, F_OK-X_OK) @ libc.so.6+0x11bc95(access+7)
mremap(any, any, any, MREMAP_MAYMOVE, any) @ libc.so.6+0x12f299(mremap+43)
madvise(any, any, MADV_DONTNEED) @ libc.so.6+0x12a2f5(madvise+7)
madvise(any, any, MADV_HUGEPAGE) @ libc.so.6+0x12a2f5(madvise+7)
getpid() @ ld-linux-x86-64.so.2+0x235e5(__GI___getpid+7)
getpid() @ libc.so.6+0x100aa5(__getpid+7)
exit(0) @ libc.so.6+0x40f14(__libc_start_call_main+166)
fcntl(any u32, F_SETFD, FD_CLOEXEC) @ libc.so.6+0x12194f(__fcntl64_nocancel+65)
fcntl(any u32, F_GETFL, any) @ libc.so.6+0x12194f(__fcntl64_nocancel+65)
fcntl(any u32, F_SETFD, FD_CLOEXEC) @ libc.so.6+0x1219ee(__fcntl64_nocancel_adjusted+32)
fcntl(any u32, F_GETFL-F_SETFL, any) @ libc.so.6+0x1219ee(__fcntl64_nocancel_adjusted+32)
getcwd(non-NULL, any) @ libc.so.6+0x11f48c(getcwd+126)
gettimeofday(any, any) @ libc.so.6+0xe61da(__gettimeofday_syscall+12)
sysinfo(any) @ libc.so.6+0x130375(sysinfo+7)
getuid() @ libc.so.6+0x100ba5(getuid+7)
sched_getparam(any u32, any) @ libc.so.6+0x115205(sched_getparam+7)
sched_setscheduler(any u32, any u32, any) @ libc.so.6+0x1153c5(__sched_setscheduler+7)
sched_getscheduler(any u32) @ libc.so.6+0x115245(sched_getscheduler+7)
sched_get_priority_max(1) @ libc.so.6+0x115285(sched_get_priority_max+7)
sched_get_priority_min(1) @ libc.so.6+0x1152c5(__sched_get_priority_min+7)
gettid() @ libc.so.6+0xa9485(__pthread_kill_implementation+247)
futex(any, any u8, any u32, 0, any, any)
futex(any, any u32, any u32, 0, 0, -1 as u32)
sched_getaffinity(0, 0x1000, any) @ libc.so.6+0x124e32(__get_nprocs_sched+52)
getdents64(any u32, any, any) @ libc.so.6+0xf2231(getdents64+19)
restart_syscall()
clock_gettime(CLOCK_MONOTONIC, any) @ libc.so.6+0xf149d(clock_gettime+47)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ libc.so.6+0xf1581(clock_nanosleep+35)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ libc.so.6+0xf15c3(clock_nanosleep+101)
exit_group(NULL-0x1fe) @ ld-linux-x86-64.so.2+0x235b3(_exit+21)
exit_group(any u32) @ libc.so.6+0xf6183(_exit+21)
tgkill(any u32, any u32, SIGABRT) @ libc.so.6+0xa9467(__pthread_kill_implementation+217)
tgkill(any u32, any u32, SIGFPE) @ libc.so.6+0xa9467(__pthread_kill_implementation+217)
tgkill(any u32, any u32, SIGABRT) @ libc.so.6+0xa949a(__pthread_kill_implementation+268)
tgkill(any u32, any u32, SIGFPE) @ libc.so.6+0xa949a(__pthread_kill_implementation+268)
openat(AT_FDCWD, any, O_WRONLY|O_CREAT|O_APPEND, 0100) @ libc.so.6+0x12017c(__open+78)
openat(AT_FDCWD, any, O_WRONLY|O_CREAT|O_APPEND, 0666) @ libc.so.6+0x12017c(__open+78)
openat(AT_FDCWD, non-NULL, O_RDONLY, any) @ libc.so.6+0x12017c(__open+78)
openat(AT_FDCWD, non-NULL, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0x12017c(__open+78)
openat(AT_FDCWD, any, O_WRONLY|O_CREAT|O_APPEND, 0100) @ libc.so.6+0x1201f6(__open+200)
openat(AT_FDCWD, any, O_WRONLY|O_CREAT|O_APPEND, 0666) @ libc.so.6+0x1201f6(__open+200)
openat(AT_FDCWD, non-NULL, O_RDONLY, any) @ libc.so.6+0x1201f6(__open+200)
openat(AT_FDCWD, non-NULL, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0x1201f6(__open+200)
openat(any u32, "..", O_RDONLY, any) @ libc.so.6+0x12031a(openat+60)
openat(any u32, "..", O_RDONLY, any) @ libc.so.6+0x1203a6(openat+200)
openat(AT_FDCWD, any, O_RDONLY, any) @ libc.so.6+0x121b1c(__open_nocancel+62)
openat(AT_FDCWD, any, O_WRONLY|O_CREAT|O_APPEND, 0100) @ libc.so.6+0x121b1c(__open_nocancel+62)
openat(AT_FDCWD, any, O_WRONLY|O_CREAT|O_APPEND, 0666) @ libc.so.6+0x121b1c(__open_nocancel+62)
openat(AT_FDCWD, non-NULL, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0x121b1c(__open_nocancel+62)
openat(AT_FDCWD, non-NULL, O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC, any) @ libc.so.6+0x121b1c(__open_nocancel+62)
openat(AT_FDCWD, "/sys/kernel/mm/hugepages", O_RDONLY|O_DIRECTORY, any) @ libc.so.6+0x121b1c(__open_nocancel+62)
newfstatat(any u32, any, any, AT_SYMLINK_NOFOLLOW) @ libc.so.6+0x11cb08(fstatat64+10)
eventfd2(0, EFD_NONBLOCK|EFD_CLOEXEC) @ libc.so.6+0x12ef75(eventfd+7)
pipe2(any, 0) @ libc.so.6+0x120497(__pipe+9)
pipe2(any, O_CLOEXEC) @ libc.so.6+0x1204d5(pipe2+7)
getrandom(libc.so.6+0x20c838(tcache_key), 8, GRND_NONBLOCK) @ libc.so.6+0xb4a53(ptmalloc_init.part.0+53)
