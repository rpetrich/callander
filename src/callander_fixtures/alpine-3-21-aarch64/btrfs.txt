callander: permitted syscalls: lsetxattr(any, any, any, any, 0) @ ld-musl-aarch64.so.1+0x25114(lsetxattr+16)
fsetxattr(any, any, any, any u16, 0) @ ld-musl-aarch64.so.1+0x25138(fsetxattr+20)
fsetxattr(any, any, non-NULL, any, 0) @ ld-musl-aarch64.so.1+0x25138(fsetxattr+20)
fgetxattr(any, 0x1-/sbin/btrfs+0xb794e, any, any) @ ld-musl-aarch64.so.1+0x250b4(fgetxattr+8)
fgetxattr(any, /sbin/btrfs+0xb7954-0xffffffffffffffff, any, any) @ ld-musl-aarch64.so.1+0x250b4(fgetxattr+8)
lremovexattr(any, any) @ ld-musl-aarch64.so.1+0x25170(lremovexattr+12)
getcwd(any, 0x1000-0x1001) @ ld-musl-aarch64.so.1+0x68b30(getcwd+36)
dup(any) @ ld-musl-aarch64.so.1+0x68678(dup+16)
dup3(any, STDIN_FILENO-STDERR_FILENO, 0) @ ld-musl-aarch64.so.1+0x686a4(dup2+28)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_SETFD, any u32) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_GETFL, any) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_SETPIPE_SZ, 0x24000) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_DUPFD_CLOEXEC, 3) @ ld-musl-aarch64.so.1+0x20b1c(fcntl+244)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x20b3c(fcntl+276)
fcntl(any, F_DUPFD_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x20b54(fcntl+300)
fcntl(any, F_DUPFD, 3) @ ld-musl-aarch64.so.1+0x20b88(fcntl+352)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x20c20(open+136)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x52710(fchmod+60)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x5295c(fstatat+88)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x52e74(fdopen+120)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x5476c(fopen+116)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x686d8(dup2+80)
fcntl(any, F_GETFD, any u32) @ ld-musl-aarch64.so.1+0x68a00(fchown+68)
ioctl(STDIN_FILENO-0xfffffffffffffffe, BTRFS_IOC_DEFAULT_SUBVOL, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(STDIN_FILENO-0xfffffffffffffffe, FS_IOC_GETFLAGS, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, TW_OP_READ, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BLKGETSIZE, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BLKSSZGET, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BLKDISCARD-BLKPBSZGET, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, LOOP_GET_STATUS64, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, CDROMMULTISESSION, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, CDROM_DRIVE_STATUS, INT_MAX) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, CDROM_GET_CAPABILITY, 0) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, CDROM_LAST_WRITTEN, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, SIOCGIFCONF, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, SIOCGIFHWADDR, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_SYNC, 0) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_SCRUB_CANCEL, any u8) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_QUOTA_RESCAN_WAIT, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_BALANCE_CTL, any u8) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, FS_IOC_SETFLAGS, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_WAIT_SYNC, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_SUBVOL_SETFLAGS, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BLKRESETZONE, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_QGROUP_CREATE, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_QGROUP_ASSIGN, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, FICLONERANGE, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_DEFRAG_RANGE, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_QUOTA_RESCAN, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_SEND, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, FS_IOC_ENABLE_VERITY, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_ENCODED_WRITE, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, FS_IOC_SETFSLABEL, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_RESIZE-BTRFS_IOC_FORGET_DEV, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_ADD_DEV-BTRFS_IOC_BALANCE, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_SUBVOL_CREATE-BTRFS_IOC_SNAP_DESTROY, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_SNAP_CREATE_V2-BTRFS_IOC_SUBVOL_CREATE_V2, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_RM_DEV_V2, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_SNAP_DESTROY_V2, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BLKGETZONESZ, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BLKBSZGET, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BLKGETSIZE64, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BLKGETDISKSEQ, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, IOC_OPAL_GET_STATUS, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, EVMS_GET_STRIPE_INFO, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_START_SYNC-BTRFS_IOC_SUBVOL_GETFLAGS, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_GET_FEATURES, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, FDGETPRM, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, FDGETFDCSTAT, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_QGROUP_LIMIT, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_QUOTA_RESCAN_STATUS, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, GET_ARRAY_INFO, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, FS_IOC_GETFSLABEL, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_GET_SUBVOL_INFO, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_FS_INFO, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_BALANCE_PROGRESS, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_DEVICES_READY, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BLKREPORTZONE, non-NULL) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_SPACE_INFO, non-NULL) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_QUOTA_CTL, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, FS_IOC_FIEMAP, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_INO_PATHS-BTRFS_IOC_LOGICAL_INO, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_LOGICAL_INO_V2, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_SET_RECEIVED_SUBVOL, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_SCRUB, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_SCRUB_PROGRESS, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_BALANCE_V2, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_GET_DEV_STATS, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_DEV_REPLACE, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_TREE_SEARCH-BTRFS_IOC_INO_LOOKUP, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_DEV_INFO, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, BTRFS_IOC_GET_SUBVOL_ROOTREF-BTRFS_IOC_INO_LOOKUP_USER, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x52eb4(fdopen+184)
ioctl(any u32, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x53594(__stdout_write*+56)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x68d68(isatty+24)
ioprio_set(1, 0, any u32) @ ld-musl-aarch64.so.1+0x3d518(syscall+76)
flock(any, LOCK_EX) @ ld-musl-aarch64.so.1+0x2459c(flock+20)
flock(any, LOCK_EX|LOCK_NB) @ ld-musl-aarch64.so.1+0x2459c(flock+20)
flock(any, LOCK_UN) @ ld-musl-aarch64.so.1+0x2459c(flock+20)
mknodat(AT_FDCWD, any, 0-0170000, any) @ ld-musl-aarch64.so.1+0x52b70(mknod+32)
mkdirat(AT_FDCWD, any, 0700) @ ld-musl-aarch64.so.1+0x52b04(mkdir+24)
mkdirat(AT_FDCWD, any, 0777) @ ld-musl-aarch64.so.1+0x52b04(mkdir+24)
mkdirat(AT_FDCWD, /sbin/btrfs+0x1040b8, 0755) @ ld-musl-aarch64.so.1+0x52b04(mkdir+24)
mkdirat(AT_FDCWD, libblkid.so.1+0x210a5, 0755) @ ld-musl-aarch64.so.1+0x52b04(mkdir+24)
unlinkat(AT_FDCWD, any, AT_REMOVEDIR) @ ld-musl-aarch64.so.1+0x691d4(rmdir+24)
unlinkat(AT_FDCWD, any, 0) @ ld-musl-aarch64.so.1+0x695e0(unlink+24)
symlinkat(any, AT_FDCWD, any) @ ld-musl-aarch64.so.1+0x693d4(symlink+20)
linkat(AT_FDCWD, any, AT_FDCWD, any, 0) @ ld-musl-aarch64.so.1+0x68dd0(link+32)
renameat(AT_FDCWD, any, AT_FDCWD, any) @ ld-musl-aarch64.so.1+0x56e98(rename+28)
statfs(any, any) @ ld-musl-aarch64.so.1+0x52bdc(statfs+36)
statfs(any, any) @ ld-musl-aarch64.so.1+0x52c58(statvfs+52)
fstatfs(any, any) @ ld-musl-aarch64.so.1+0x52c14(fstatfs+40)
fstatfs(any, any) @ ld-musl-aarch64.so.1+0x52d00(fstatvfs+56)
truncate(any, any) @ ld-musl-aarch64.so.1+0x6946c(truncate+12)
ftruncate(any, any) @ ld-musl-aarch64.so.1+0x68afc(ftruncate+16)
fallocate(any, any, any, any) @ ld-musl-aarch64.so.1+0x2452c(fallocate+20)
faccessat(AT_FDCWD, any, F_OK) @ ld-musl-aarch64.so.1+0x68548(access+28)
faccessat(AT_FDCWD, non-NULL, W_OK) @ ld-musl-aarch64.so.1+0x68548(access+28)
faccessat(any, any, R_OK) @ ld-musl-aarch64.so.1+0x687e0(faccessat+52)
faccessat(any, libblkid.so.1+0x21846, F_OK) @ ld-musl-aarch64.so.1+0x687e0(faccessat+52)
faccessat(any, libblkid.so.1+0x2422f, F_OK) @ ld-musl-aarch64.so.1+0x687e0(faccessat+52)
faccessat(any, libblkid.so.1+0x24240, F_OK) @ ld-musl-aarch64.so.1+0x687e0(faccessat+52)
faccessat(any, libblkid.so.1+0x24256, F_OK) @ ld-musl-aarch64.so.1+0x687e0(faccessat+52)
faccessat(any, libblkid.so.1+0x2426c, F_OK) @ ld-musl-aarch64.so.1+0x687e0(faccessat+52)
faccessat(any, libblkid.so.1+0x24286, F_OK) @ ld-musl-aarch64.so.1+0x687e0(faccessat+52)
faccessat(any, libblkid.so.1+0x24290, F_OK) @ ld-musl-aarch64.so.1+0x687e0(faccessat+52)
chdir(/sbin/btrfs+0xac66e) @ ld-musl-aarch64.so.1+0x685c4(chdir+12)
chdir(ld-musl-aarch64.so.1+0x9f1e0) @ ld-musl-aarch64.so.1+0x685c4(chdir+12)
chroot(non-NULL) @ ld-musl-aarch64.so.1+0x24208(chroot+12)
fchmod(any, any u32) @ ld-musl-aarch64.so.1+0x526f4(fchmod+32)
fchmodat(AT_FDCWD, any, any u32) @ ld-musl-aarch64.so.1+0x526c4(chmod+24)
fchmodat(AT_FDCWD, any, any u32) @ ld-musl-aarch64.so.1+0x52738(fchmod+100)
fchownat(AT_FDCWD, any, any u32, any u32, 0) @ ld-musl-aarch64.so.1+0x68a34(fchown+120)
fchownat(AT_FDCWD, /sbin/btrfs+0x1040b8, any u32, any u32, AT_SYMLINK_NOFOLLOW) @ ld-musl-aarch64.so.1+0x68a74(fchownat+28)
fchownat(AT_FDCWD, any, any u32, any u32, AT_SYMLINK_NOFOLLOW) @ ld-musl-aarch64.so.1+0x68da0(lchown+36)
fchown(any, any u32, any u32) @ ld-musl-aarch64.so.1+0x689e4(fchown+40)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9ee10, O_RDWR|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x1ffe4(__init_libc*+424)
openat(AT_FDCWD, any, O_RDONLY, any) @ ld-musl-aarch64.so.1+0x54748(fopen+80)
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x54748(fopen+80)
openat(AT_FDCWD, non-NULL, O_WRONLY|O_CREAT|O_TRUNC|O_CLOEXEC, 0666) @ ld-musl-aarch64.so.1+0x54748(fopen+80)
openat(any, any, O_RDONLY|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x60864
openat(any, any, O_RDONLY|O_NOFOLLOW|O_NOATIME, any) @ ld-musl-aarch64.so.1+0x60864
openat(any, any, O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x60864
openat(any, libblkid.so.1+0x2422f, O_RDONLY-O_ACCMODE|O_TRUNC|O_APPEND|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x60864
openat(AT_FDCWD, any, any, any) @ ld-musl-aarch64.so.1+0x60864
openat(any, any, O_RDONLY|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
openat(any, any, O_RDONLY|O_NOFOLLOW|O_NOATIME, any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
openat(any, any, O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
openat(any, libblkid.so.1+0x2422f, O_RDONLY-O_ACCMODE|O_TRUNC|O_APPEND|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
openat(AT_FDCWD, any, any, any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
openat(AT_FDCWD, any, O_RDONLY|O_NONBLOCK|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x64fa4(__map_file*+36)
close(any) @ ld-musl-aarch64.so.1+0x1f980(opendir+72)
close(STDIN_FILENO-0xffffffffffffffe9) @ ld-musl-aarch64.so.1+0x20b6c(fcntl+324)
close(any) @ ld-musl-aarch64.so.1+0x53290(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x547bc(fopen+196)
close(any) @ ld-musl-aarch64.so.1+0x60864
close(any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
close(any) @ ld-musl-aarch64.so.1+0x64fd0(__map_file*+80)
close(any) @ ld-musl-aarch64.so.1+0x65010(__map_file*+144)
pipe2(any, 0) @ ld-musl-aarch64.so.1+0x68ef0(pipe+16)
getdents64(any u32, any, 2048) @ ld-musl-aarch64.so.1+0x1f9e0(readdir+80)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x68e14(lseek+12)
read(any u32, any, any) @ ld-musl-aarch64.so.1+0x53408(__stdio_read*+144)
read(any, any, any) @ ld-musl-aarch64.so.1+0x60864
read(any, any, any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
write(any, any, any) @ ld-musl-aarch64.so.1+0x60864
write(any, any, any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
readv(any u32, any, 2) @ ld-musl-aarch64.so.1+0x533c4(__stdio_read*+76)
writev(any u32, any, any) @ ld-musl-aarch64.so.1+0x5351c(__stdio_write*+184)
writev(any, any, 2) @ ld-musl-aarch64.so.1+0x60864
writev(any, any, 2) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
pread64(STDIN_FILENO-0x7fffffff, any, any, any) @ ld-musl-aarch64.so.1+0x60864
pread64(any, any, NULL-0x100000000, any) @ ld-musl-aarch64.so.1+0x60864
pread64(STDIN_FILENO-0x7fffffff, any, any, any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
pread64(any, any, NULL-0x100000000, any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
pwrite64(any, any, any, any) @ ld-musl-aarch64.so.1+0x60864
pwrite64(any, any, any, any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
pselect6(0x1-0x400, 0, 0, any, any, any) @ ld-musl-aarch64.so.1+0x60864
pselect6(0x1-0x400, 0, 0, any, any, any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
ppoll(any, 3, any, 0, 8) @ ld-musl-aarch64.so.1+0x1ff94(__init_libc*+344)
ppoll(any, 1, any, 0, 8) @ ld-musl-aarch64.so.1+0x60864
ppoll(any, 1, any, 0, 8) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
splice(any, 0, any, 0, 0x10000, SPLICE_F_MORE) @ ld-musl-aarch64.so.1+0x24dc8(splice+16)
splice(any, 0, any, 0, 0x24000, SPLICE_F_MORE) @ ld-musl-aarch64.so.1+0x24dc8(splice+16)
readlinkat(AT_FDCWD, any, any, non-NULL) @ ld-musl-aarch64.so.1+0x690f4(readlink+40)
newfstatat(any, any, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x52974(fstatat+112)
newfstatat(AT_FDCWD, any, any, 0) @ ld-musl-aarch64.so.1+0x529ac(fstatat+168)
newfstatat(any, any, any, 0) @ ld-musl-aarch64.so.1+0x529c8(fstatat+196)
newfstatat(any, any, any, AT_SYMLINK_NOFOLLOW) @ ld-musl-aarch64.so.1+0x529c8(fstatat+196)
newfstatat(any, ld-musl-aarch64.so.1+0x9f3f0, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x529c8(fstatat+196)
fstat(any, any) @ ld-musl-aarch64.so.1+0x52940(fstatat+60)
fsync(any) @ ld-musl-aarch64.so.1+0x60864
fsync(any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
timerfd_create(CLOCK_MONOTONIC, 0) @ ld-musl-aarch64.so.1+0x24fa0(timerfd_create+20)
timerfd_settime(STDIN_FILENO-0xfffffffffffffffe, 0, any, 0) @ ld-musl-aarch64.so.1+0x24fc4(timerfd_settime+20)
utimensat(any, 0, any, 0) @ ld-musl-aarch64.so.1+0x52dc0(utimensat+48)
utimensat(AT_FDCWD, any, any, AT_SYMLINK_NOFOLLOW) @ ld-musl-aarch64.so.1+0x52dc0(utimensat+48)
exit(any) @ ld-musl-aarch64.so.1+0x60804
exit(any) @ ld-musl-aarch64.so.1+0x6083c
exit(0) @ ld-musl-aarch64.so.1+0x623bc(pthread_exit+416)
exit(0) @ ld-musl-aarch64.so.1+0x62460(start*+104)
exit_group(any) @ ld-musl-aarch64.so.1+0x206d8(_Exit+12)
set_tid_address(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x48268(__post_Fork*+44)
set_tid_address(any) @ ld-musl-aarch64.so.1+0x62454(start*+92)
futex(any, FUTEX_WAIT, any, 0, 0, 0)
futex(any, FUTEX_WAIT, non-NULL, 0, any, any u32)
futex(any, FUTEX_WAKE, 0-INT_MAX, any, any u32, INT_MAX)
futex(any, FUTEX_WAKE, 1, any, any, any)
futex(any, FUTEX_REQUEUE, 0, 1, ld-musl-aarch64.so.1+0xc2ab4, any)
futex(any, FUTEX_LOCK_PI-FUTEX_UNLOCK_PI, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, 0, 0)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, any, any u32)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 0-INT_MAX, any, any u32, INT_MAX)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 1, any, any, any)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, ld-musl-aarch64.so.1+0xc2ab4, any)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG-FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(ld-musl-aarch64.so.1+0xc1e90(exit_sem*), FUTEX_WAKE, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1e90(exit_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1e90(exit_sem*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1e90(exit_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1eb0(caller_sem*), FUTEX_WAKE, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1eb0(caller_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1eb0(caller_sem*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1eb0(caller_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1ed0(target_sem*), FUTEX_WAKE, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1ed0(target_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1ed0(target_sem*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1ed0(target_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAIT, non-NULL, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2a88, FUTEX_WAKE, INT_MAX, ld-musl-aarch64.so.1+0xc2a88, any, any)
futex(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), FUTEX_WAIT, non-NULL, 0, ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), ld-musl-aarch64.so.1+0xc2ed8(tl_lock_waiters*))
futex(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), ld-musl-aarch64.so.1+0xc2ed8(tl_lock_waiters*))
set_robust_list(0, 24) @ ld-musl-aarch64.so.1+0x623e8(pthread_exit+460)
set_robust_list(any, 24) @ ld-musl-aarch64.so.1+0x634f0(__pthread_mutex_trylock_owner*+92)
nanosleep(any, any) @ ld-musl-aarch64.so.1+0x60864
nanosleep(any, any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
clock_gettime(CLOCK_REALTIME, any) @ ld-musl-aarch64.so.1+0x66770(clock_gettime+60)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
sched_setscheduler(any u32, any, any) @ ld-musl-aarch64.so.1+0x62700(pthread_create+568)
restart_syscall()
kill(any, SIGKILL) @ ld-musl-aarch64.so.1+0x69334(do_setxid*+92)
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x20740(abort+84)
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x51d1c(raise+44)
tkill(any u32, SIGSETXID) @ ld-musl-aarch64.so.1+0x61394(cancel_handler*+132)
tkill(non-NULL, SIGSETXID) @ ld-musl-aarch64.so.1+0x63118(pthread_kill+68)
tkill(any, SIGSYNCCALL) @ ld-musl-aarch64.so.1+0x64cb0(__synccall*+380)
rt_sigaction(SIGABRT, any, 0, 8) @ ld-musl-aarch64.so.1+0x2072c(abort+64)
rt_sigaction(SIGINT, any, 0, 8) @ ld-musl-aarch64.so.1+0x51dfc(__libc_sigaction*+140)
rt_sigaction(SIGSETXID-SIGSYNCCALL, any, 0, 8) @ ld-musl-aarch64.so.1+0x51dfc(__libc_sigaction*+140)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x20758(abort+108)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa1060(all_mask*), any, 8) @ ld-musl-aarch64.so.1+0x51b58(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa1058(app_mask*), any, 8) @ ld-musl-aarch64.so.1+0x51b78(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x51b94(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x51ec8(__libc_sigaction*+344)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x6247c(start*+132)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x62800(pthread_create+824)
rt_sigprocmask(SIG_BLOCK, any, any, 8) @ ld-musl-aarch64.so.1+0x6424c(pthread_sigmask+24)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x6424c(pthread_sigmask+24)
rt_sigreturn(any) @ ld-musl-aarch64.so.1+0x51b14
setsid() @ ld-musl-aarch64.so.1+0x692b4(setsid+12)
uname(any) @ ld-musl-aarch64.so.1+0x3da6c(uname+12)
umask(any u32) @ ld-musl-aarch64.so.1+0x52d80(umask+16)
prctl(PR_GET_DUMPABLE, 0, 0, 0, 0) @ ld-musl-aarch64.so.1+0x249bc(prctl+48)
gettimeofday(any, 0) @ ld-musl-aarch64.so.1+0x66790(clock_gettime+92)
gettimeofday(non-NULL, any) @ [vdso]+0x658(__kernel_gettimeofday+256)
getpid() @ ld-musl-aarch64.so.1+0x68d10(getpid+4)
getpid() @ ld-musl-aarch64.so.1+0x69328(do_setxid*+80)
getppid() @ ld-musl-aarch64.so.1+0x68d1c(getppid+4)
getuid() @ ld-musl-aarch64.so.1+0x68d48(getuid+4)
geteuid() @ ld-musl-aarch64.so.1+0x68bc0(geteuid+4)
getgid() @ ld-musl-aarch64.so.1+0x68bcc(getgid+4)
getegid() @ ld-musl-aarch64.so.1+0x68bb4(getegid+4)
gettid() @ ld-musl-aarch64.so.1+0x3d518(syscall+76)
gettid() @ ld-musl-aarch64.so.1+0x64c08(__synccall*+212)
sysinfo(any) @ ld-musl-aarch64.so.1+0x24f64(sysinfo+12)
socket(AF_UNIX-AF_INET, SOCK_STREAM-SOCK_DGRAM, 0) @ ld-musl-aarch64.so.1+0x45c5c(socket+40)
socket(AF_UNIX-AF_INET, 0-SOCK_DGRAM, 0) @ ld-musl-aarch64.so.1+0x45c94(socket+96)
bind(STDIN_FILENO-0xfffffffffffffffe, any, 110) @ ld-musl-aarch64.so.1+0x3f738(bind+32)
listen(STDIN_FILENO-0xfffffffffffffffe, 100) @ ld-musl-aarch64.so.1+0x42748(listen+36)
accept(any, any, any) @ ld-musl-aarch64.so.1+0x60864
accept(any, any, any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
connect(STDIN_FILENO-0xfffffffffffffffe, any, 110) @ ld-musl-aarch64.so.1+0x60864
connect(STDIN_FILENO-0xfffffffffffffffe, any, 110) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
readahead(any, any, any u32) @ ld-musl-aarch64.so.1+0x24b84(readahead+8)
brk(any) @ ld-musl-aarch64.so.1+0x294b4(__malloc_alloc_meta*+332)
brk(0) @ ld-musl-aarch64.so.1+0x2956c(__malloc_alloc_meta*+516)
brk(any) @ ld-musl-aarch64.so.1+0x2958c(__malloc_alloc_meta*+548)
munmap(any, any) @ ld-musl-aarch64.so.1+0x3e250(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x607fc
mremap(any, NULL-0xfffffffffffff000, NULL-0x7ffffffffffffffe, MREMAP_MAYMOVE, 0) @ ld-musl-aarch64.so.1+0x3e160(mremap+48)
clone(SIGCHLD, 0, any, any, any) @ ld-musl-aarch64.so.1+0x482f8(_Fork+48)
clone(CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID|CLONE_DETACHED, any, any, any, ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x60824
mmap(0, NULL-0x7ffffffffffffffe, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e070(mmap+64)
mmap(0, NULL-0x7ffffffffffffffe, PROT_READ, MAP_SHARED, any, 0) @ ld-musl-aarch64.so.1+0x3e070(mmap+64)
mmap(0, NULL-0x7ffffffffffffffe, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e070(mmap+64)
mmap(any, any, any, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, any, any) @ ld-musl-aarch64.so.1+0x3e070(mmap+64)
fadvise64(any, 0, 0, 1) @ ld-musl-aarch64.so.1+0x20cb8(posix_fadvise+12)
fadvise64(any, 0, 0, 4) @ ld-musl-aarch64.so.1+0x20cb8(posix_fadvise+12)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x3e120(mprotect+56)
mprotect(any, any, PROT_READ|PROT_WRITE) @ ld-musl-aarch64.so.1+0x3e120(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x6b124(reloc_all*+268)
wait4(-1, any, 0, 0) @ ld-musl-aarch64.so.1+0x60864
wait4(-1, any, 0, 0) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
getrandom(any, non-NULL, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x60864
getrandom(any, non-NULL, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
membarrier(MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED, 0) @ ld-musl-aarch64.so.1+0x24824(__membarrier_init*+12)
