callander: permitted syscalls: dup(any) @ ld-musl-aarch64.so.1+0x48d24(child*+440)
dup3(any, any, 0) @ ld-musl-aarch64.so.1+0x48d84(child*+536)
dup3(any, any, 0) @ ld-musl-aarch64.so.1+0x48e78(child*+780)
dup3(any, STDIN_FILENO-STDOUT_FILENO, 0) @ ld-musl-aarch64.so.1+0x686a4(dup2+28)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x48e00(child*+660)
fcntl(any, F_SETFD, 0-0xfffffffffffffffe) @ ld-musl-aarch64.so.1+0x48e1c(child*+688)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x48ed4(child*+872)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x686d8(dup2+80)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x68fb0(pipe2+176)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x68fb8(pipe2+184)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x53594(__stdout_write*+56)
chdir(any) @ ld-musl-aarch64.so.1+0x48ea0(child*+820)
fchdir(any) @ ld-musl-aarch64.so.1+0x48de0(child*+628)
openat(AT_FDCWD, "/dev/null", O_RDWR|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x1ffe4(__init_libc*+424)
openat(AT_FDCWD, any, O_RDONLY|O_NOFOLLOW-0xffffffffffffffff, any) @ ld-musl-aarch64.so.1+0x48e48(child*+732)
close(any) @ ld-musl-aarch64.so.1+0x48d3c(child*+464)
close(any) @ ld-musl-aarch64.so.1+0x48da0(child*+564)
close(any) @ ld-musl-aarch64.so.1+0x48e90(child*+804)
close(any) @ ld-musl-aarch64.so.1+0x53290(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x60864
close(any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
pipe2(any, 0) @ ld-musl-aarch64.so.1+0x68ef0(pipe+16)
pipe2(any, O_CLOEXEC) @ ld-musl-aarch64.so.1+0x68f20(pipe2+32)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x68e14(lseek+12)
read(any, any, any) @ ld-musl-aarch64.so.1+0x53408(__stdio_read*+144)
read(any, any, 4) @ ld-musl-aarch64.so.1+0x60864
read(any, any, 4) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
write(any, any, 4) @ ld-musl-aarch64.so.1+0x48d00(child*+404)
readv(any, any, 2) @ ld-musl-aarch64.so.1+0x533c4(__stdio_read*+76)
writev(any, any, any) @ ld-musl-aarch64.so.1+0x5351c(__stdio_write*+184)
ppoll(any, 3, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x1ff94(__init_libc*+344)
exit(0) @ ld-musl-aarch64.so.1+0x60804
exit(0xfffffffffffff001-0xffffffffffffffff) @ ld-musl-aarch64.so.1+0x60804
exit(any) @ ld-musl-aarch64.so.1+0x6083c
exit(0) @ ld-musl-aarch64.so.1+0x623bc(pthread_exit+416)
exit_group(any) @ ld-musl-aarch64.so.1+0x206d8(_Exit+12)
set_tid_address(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x48268(__post_Fork*+44)
futex(any, FUTEX_WAIT, any, 0, 0, 0)
futex(any, FUTEX_WAIT, non-NULL, 0, any, 0)
futex(any, FUTEX_WAIT, 0x40000000-0xffffffffffffffff, 0, any, 0x40000000-0xffffffff)
futex(any, FUTEX_WAKE, 0-INT_MAX, any, any u32, INT_MAX)
futex(any, FUTEX_WAKE, 1, any, any, any)
futex(any, FUTEX_REQUEUE, 0, 1, ld-musl-aarch64.so.1+0xc2ab4, any)
futex(any, FUTEX_LOCK_PI-FUTEX_UNLOCK_PI, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, 0, 0)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, any, 0)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, 0x40000000-0xffffffffffffffff, 0, any, 0x40000000-0xffffffff)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 0-INT_MAX, any, any u32, INT_MAX)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 1, any, any, any)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, ld-musl-aarch64.so.1+0xc2ab4, any)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG-FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAIT, non-NULL, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2a88, FUTEX_WAKE, INT_MAX, ld-musl-aarch64.so.1+0xc2a88, any, any)
futex(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), FUTEX_WAIT, non-NULL, 0, ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), ld-musl-aarch64.so.1+0xc2ed8(tl_lock_waiters*))
futex(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), ld-musl-aarch64.so.1+0xc2ed8(tl_lock_waiters*))
set_robust_list(0, sizeof(struct robust_list_head)) @ ld-musl-aarch64.so.1+0x623e8(pthread_exit+460)
set_robust_list(any, sizeof(struct robust_list_head)) @ ld-musl-aarch64.so.1+0x634f0(__pthread_mutex_trylock_owner*+92)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
restart_syscall()
tkill(any, SIGSETXID) @ ld-musl-aarch64.so.1+0x61394(cancel_handler*+132)
tkill(non-NULL, SIGSETXID) @ ld-musl-aarch64.so.1+0x63118(pthread_kill+68)
rt_sigaction(any, any, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51dfc(__libc_sigaction*+140)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa1060(all_mask*), any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51b58(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa1058(app_mask*), any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51b78(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51b94(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51ec8(__libc_sigaction*+344)
rt_sigprocmask(SIG_BLOCK, any, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x6424c(pthread_sigmask+24)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x6424c(pthread_sigmask+24)
rt_sigreturn(any) @ ld-musl-aarch64.so.1+0x51b14
setgid(0-LONG_MAX) @ ld-musl-aarch64.so.1+0x48cb8(child*+332)
setgid(0-LONG_MAX) @ ld-musl-aarch64.so.1+0x692f8(do_setxid*+32)
setuid(0-LONG_MAX) @ ld-musl-aarch64.so.1+0x48cd0(child*+356)
setuid(0-LONG_MAX) @ ld-musl-aarch64.so.1+0x692f8(do_setxid*+32)
setpgid(0, any) @ ld-musl-aarch64.so.1+0x48c98(child*+300)
setsid() @ ld-musl-aarch64.so.1+0x48c78(child*+268)
gettimeofday(non-NULL, any) @ [vdso]+0x658(__kernel_gettimeofday+256)
getuid() @ ld-musl-aarch64.so.1+0x48cc8(child*+348)
getgid() @ ld-musl-aarch64.so.1+0x48cb0(child*+324)
brk(any) @ ld-musl-aarch64.so.1+0x294b4(__malloc_alloc_meta*+332)
brk(0) @ ld-musl-aarch64.so.1+0x2956c(__malloc_alloc_meta*+516)
brk(any) @ ld-musl-aarch64.so.1+0x2958c(__malloc_alloc_meta*+548)
munmap(any, non-NULL) @ ld-musl-aarch64.so.1+0x3e250(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x607fc
clone(SIGCHLD, 0, any, any, any) @ ld-musl-aarch64.so.1+0x482f8(_Fork+48)
clone(SIGCHLD|CLONE_VM|CLONE_VFORK, any, any, any, any) @ ld-musl-aarch64.so.1+0x60824
mmap(0, NULL-0x7ffffffffffffffe, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e070(mmap+64)
mmap(0, NULL-0x7ffffffffffffffe, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e070(mmap+64)
mmap(any, any, any, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, any, any) @ ld-musl-aarch64.so.1+0x3e070(mmap+64)
mprotect(any, any, PROT_READ|PROT_WRITE) @ ld-musl-aarch64.so.1+0x3e120(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x6b124(reloc_all*+268)
wait4(any, any, 0, 0) @ ld-musl-aarch64.so.1+0x60864
wait4(0x1-0xfffffffffffffffe, 0, WUNTRACED, 0) @ ld-musl-aarch64.so.1+0x60864
wait4(any, any, 0, 0) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
wait4(0x1-0xfffffffffffffffe, 0, WUNTRACED, 0) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
