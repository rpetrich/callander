callander: permitted syscalls: getcwd(any, 0x1000) @ ld-musl-aarch64.so.1+0x68b30(getcwd+36)
dup(any) @ ld-musl-aarch64.so.1+0x68678(dup+16)
dup3(any, any, 0) @ ld-musl-aarch64.so.1+0x686a4(dup2+28)
fcntl(any, F_DUPFD, any u32) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_SETFD, 0-FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_GETFL, 0) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_SETFL, any u32) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_GETPIPE_SZ, 0) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x20c20(open+136)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x45cb8(socket+132)
fcntl(any, F_SETFL, O_NONBLOCK) @ ld-musl-aarch64.so.1+0x45cd0(socket+156)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x52710(fchmod+60)
fcntl(STDIN_FILENO-0x7fffffff, F_GETFD, any) @ ld-musl-aarch64.so.1+0x5295c(fstatat+88)
fcntl(AT_FDCWD, F_GETFD, any) @ ld-musl-aarch64.so.1+0x5295c(fstatat+88)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x52e74(fdopen+120)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x5308c(__fopen_rb_ca*+96)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x5476c(fopen+116)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x686d8(dup2+80)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x68fb0(pipe2+176)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x68fb8(pipe2+184)
ioctl(any, TCGETS, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, TCSETSW, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, TCXONC, 1) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, TIOCGPGRP-TIOCSPGRP, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, TIOCGWINSZ-TIOCSWINSZ, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, FIONREAD, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, SIOCGIFINDEX, any) @ ld-musl-aarch64.so.1+0x3c3a8(ioctl+48)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x52eb4(fdopen+184)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x53594(__stdout_write*+56)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x68d68(isatty+24)
unlinkat(AT_FDCWD, any, 0) @ ld-musl-aarch64.so.1+0x695e0(unlink+24)
renameat(AT_FDCWD, non-NULL, AT_FDCWD, any) @ ld-musl-aarch64.so.1+0x56e98(rename+28)
faccessat(AT_FDCWD, any, X_OK) @ ld-musl-aarch64.so.1+0x68548(access+28)
faccessat(AT_FDCWD, non-NULL, R_OK) @ ld-musl-aarch64.so.1+0x68548(access+28)
faccessat(any, any, any) @ ld-musl-aarch64.so.1+0x68768(checker*+64)
faccessat(AT_FDCWD, any, X_OK-W_OK) @ ld-musl-aarch64.so.1+0x687e0(faccessat+52)
faccessat(AT_FDCWD, any, R_OK) @ ld-musl-aarch64.so.1+0x687e0(faccessat+52)
chdir(any) @ ld-musl-aarch64.so.1+0x685c4(chdir+12)
fchmod(any, 0400) @ ld-musl-aarch64.so.1+0x526f4(fchmod+32)
fchmod(any, 0600) @ ld-musl-aarch64.so.1+0x526f4(fchmod+32)
fchmodat(AT_FDCWD, any, 0400) @ ld-musl-aarch64.so.1+0x52738(fchmod+100)
fchmodat(AT_FDCWD, any, 0600) @ ld-musl-aarch64.so.1+0x52738(fchmod+100)
fchownat(AT_FDCWD, any, any u32, any u32, 0) @ ld-musl-aarch64.so.1+0x685f8(chown+36)
openat(AT_FDCWD, "/dev/null", O_RDWR|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x1ffe4(__init_libc*+424)
openat(AT_FDCWD, "/etc/hosts", O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x5306c(__fopen_rb_ca*+64)
openat(AT_FDCWD, "/etc/services", O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x5306c(__fopen_rb_ca*+64)
openat(AT_FDCWD, "/etc/resolv.conf", O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x5306c(__fopen_rb_ca*+64)
openat(AT_FDCWD, any, O_RDONLY, any) @ ld-musl-aarch64.so.1+0x54748(fopen+80)
openat(AT_FDCWD, "/dev/null", O_RDONLY|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x54748(fopen+80)
openat(AT_FDCWD, "/etc/group", O_RDONLY|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x54748(fopen+80)
openat(AT_FDCWD, "/etc/passwd", O_RDONLY|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x54748(fopen+80)
openat(AT_FDCWD, any, any, any) @ ld-musl-aarch64.so.1+0x60864
openat(AT_FDCWD, any, any, any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
openat(AT_FDCWD, any, O_RDONLY|O_NONBLOCK|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x64fa4(__map_file*+36)
close(any) @ ld-musl-aarch64.so.1+0x1f980(opendir+72)
close(any) @ ld-musl-aarch64.so.1+0x41fec(if_nametoindex+92)
close(any) @ ld-musl-aarch64.so.1+0x45178(__res_msend_rc*+2704)
close(any) @ ld-musl-aarch64.so.1+0x53290(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x547bc(fopen+196)
close(any) @ ld-musl-aarch64.so.1+0x60864
close(any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
close(any) @ ld-musl-aarch64.so.1+0x64fd0(__map_file*+80)
close(any) @ ld-musl-aarch64.so.1+0x65010(__map_file*+144)
close(any) @ ld-musl-aarch64.so.1+0x68894(faccessat+232)
close(any) @ ld-musl-aarch64.so.1+0x688c8(faccessat+284)
pipe2(any, 0) @ ld-musl-aarch64.so.1+0x68ef0(pipe+16)
pipe2(any, O_CLOEXEC) @ ld-musl-aarch64.so.1+0x68f20(pipe2+32)
getdents64(any, any, 2048) @ ld-musl-aarch64.so.1+0x1f9e0(readdir+80)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x68e14(lseek+12)
read(any, any, any) @ ld-musl-aarch64.so.1+0x53408(__stdio_read*+144)
read(any, any, any) @ ld-musl-aarch64.so.1+0x60864
read(any, any, any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
read(any, any, 4) @ ld-musl-aarch64.so.1+0x688ac(faccessat+256)
write(any, any, any) @ ld-musl-aarch64.so.1+0x60864
write(any, any, any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
write(any, any, 4) @ ld-musl-aarch64.so.1+0x68784(checker*+92)
readv(any, any, 2) @ ld-musl-aarch64.so.1+0x533c4(__stdio_read*+76)
writev(any, any, any) @ ld-musl-aarch64.so.1+0x5351c(__stdio_write*+184)
pread64(any, any, any, any) @ ld-musl-aarch64.so.1+0x60864
pread64(any, any, any, any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
pselect6(any, any, 0, any, any, any) @ ld-musl-aarch64.so.1+0x60864
pselect6(any, any, 0, any, any, any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
ppoll(any, 3, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x1ff94(__init_libc*+344)
ppoll(any, any, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x60864
ppoll(any, any, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
readlinkat(AT_FDCWD, any, any, 0x1000) @ ld-musl-aarch64.so.1+0x690f4(readlink+40)
readlinkat(AT_FDCWD, any, ld-musl-aarch64.so.1+0xc1f70(buf.0*), 32) @ ld-musl-aarch64.so.1+0x690f4(readlink+40)
readlinkat(AT_FDCWD, "/proc/self/exe", any, 512) @ ld-musl-aarch64.so.1+0x690f4(readlink+40)
newfstatat(STDIN_FILENO-0x7fffffff, "", any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x52974(fstatat+112)
newfstatat(AT_FDCWD, any, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x52974(fstatat+112)
newfstatat(AT_FDCWD, any, any, 0) @ ld-musl-aarch64.so.1+0x529ac(fstatat+168)
newfstatat(0x80000000--1 as u32, "", any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x529c8(fstatat+196)
newfstatat(AT_FDCWD, any, any, 0) @ ld-musl-aarch64.so.1+0x529c8(fstatat+196)
newfstatat(AT_FDCWD, any, any, AT_SYMLINK_NOFOLLOW) @ ld-musl-aarch64.so.1+0x529c8(fstatat+196)
fstat(STDIN_FILENO-0x7fffffff, any) @ ld-musl-aarch64.so.1+0x52940(fstatat+60)
fstat(AT_FDCWD, any) @ ld-musl-aarch64.so.1+0x52940(fstatat+60)
exit(0) @ ld-musl-aarch64.so.1+0x60804
exit(0xfffffffffffff001-0xffffffffffffffff) @ ld-musl-aarch64.so.1+0x60804
exit(any) @ ld-musl-aarch64.so.1+0x6083c
exit(0) @ ld-musl-aarch64.so.1+0x623bc(pthread_exit+416)
exit(1) @ ld-musl-aarch64.so.1+0x68750(checker*+40)
exit_group(any) @ ld-musl-aarch64.so.1+0x206d8(_Exit+12)
set_tid_address(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x48268(__post_Fork*+44)
futex(any, FUTEX_WAIT, any, 0, 0, 0)
futex(any, FUTEX_WAIT, non-NULL, 0, any, any u32)
futex(any, FUTEX_WAKE, 0-INT_MAX, any, any u32, INT_MAX)
futex(any, FUTEX_WAKE, 1, any, any, any)
futex(any, FUTEX_REQUEUE, 0, 1, ld-musl-aarch64.so.1+0xc2ab4, any)
futex(any, FUTEX_LOCK_PI-FUTEX_UNLOCK_PI, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, 0, 0)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, any, any u32)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 0-INT_MAX, any, any u32, INT_MAX)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 1, any, any, any)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, ld-musl-aarch64.so.1+0xc2ab4, any)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG-FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(ld-musl-aarch64.so.1+0xc06b0(barrier_sem*), FUTEX_WAKE, INT_MAX, 0, ld-musl-aarch64.so.1+0xc06b0(barrier_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc06b0(barrier_sem*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc06b0(barrier_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1e90(exit_sem*), FUTEX_WAKE, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1e90(exit_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1e90(exit_sem*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1e90(exit_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1eb0(caller_sem*), FUTEX_WAKE, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1eb0(caller_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1eb0(caller_sem*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1eb0(caller_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1ed0(target_sem*), FUTEX_WAKE, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1ed0(target_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1ed0(target_sem*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1ed0(target_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAIT, non-NULL, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2a88, FUTEX_WAKE, INT_MAX, ld-musl-aarch64.so.1+0xc2a88, any, any)
futex(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), FUTEX_WAIT, non-NULL, 0, ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), ld-musl-aarch64.so.1+0xc2ed8(tl_lock_waiters*))
futex(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), ld-musl-aarch64.so.1+0xc2ed8(tl_lock_waiters*))
set_robust_list(0, sizeof(struct robust_list_head)) @ ld-musl-aarch64.so.1+0x623e8(pthread_exit+460)
set_robust_list(any, sizeof(struct robust_list_head)) @ ld-musl-aarch64.so.1+0x634f0(__pthread_mutex_trylock_owner*+92)
nanosleep(any, any) @ ld-musl-aarch64.so.1+0x60864
nanosleep(any, any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
setitimer(ITIMER_REAL, any, any) @ ld-musl-aarch64.so.1+0x51d50(setitimer+16)
clock_gettime(CLOCK_REALTIME-CLOCK_MONOTONIC, any) @ ld-musl-aarch64.so.1+0x66770(clock_gettime+60)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
restart_syscall()
kill(any, any) @ ld-musl-aarch64.so.1+0x51bd0(kill+20)
kill(0-LONG_MAX, SIGKILL) @ ld-musl-aarch64.so.1+0x69334(do_setxid*+92)
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x20740(abort+84)
tkill(any, SIGSYNCCALL) @ ld-musl-aarch64.so.1+0x247a4(membarrier+232)
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x51d1c(raise+44)
tkill(any, SIGSETXID) @ ld-musl-aarch64.so.1+0x61394(cancel_handler*+132)
tkill(non-NULL, SIGSETXID) @ ld-musl-aarch64.so.1+0x63118(pthread_kill+68)
tkill(any, SIGSYNCCALL) @ ld-musl-aarch64.so.1+0x64cb0(__synccall*+380)
rt_sigaction(SIGABRT, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x2072c(abort+64)
rt_sigaction(any, any, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51dfc(__libc_sigaction*+140)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x20758(abort+108)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa1060(all_mask*), any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51b58(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa1058(app_mask*), any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51b78(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51b94(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51ec8(__libc_sigaction*+344)
rt_sigprocmask(SIG_SETMASK, 0, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x5256c(__sigsetjmp_tail*+36)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x5256c(__sigsetjmp_tail*+36)
rt_sigprocmask(SIG_BLOCK-SIG_SETMASK, any, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x6424c(pthread_sigmask+24)
rt_sigreturn(any) @ ld-musl-aarch64.so.1+0x51b14
setregid(0-LONG_MAX, -1) @ ld-musl-aarch64.so.1+0x68740(checker*+24)
setregid(0-LONG_MAX, -1) @ ld-musl-aarch64.so.1+0x692f8(do_setxid*+32)
setreuid(0-LONG_MAX, -1) @ ld-musl-aarch64.so.1+0x687a0(checker*+120)
setreuid(0-LONG_MAX, -1) @ ld-musl-aarch64.so.1+0x692f8(do_setxid*+32)
setfsuid(any u32) @ ld-musl-aarch64.so.1+0x24c3c(setfsuid+16)
setfsuid(any u32) @ ld-musl-aarch64.so.1+0x692f8(do_setxid*+32)
setfsgid(any u32) @ ld-musl-aarch64.so.1+0x24c1c(setfsgid+16)
setfsgid(any u32) @ ld-musl-aarch64.so.1+0x692f8(do_setxid*+32)
setpgid(any, any) @ ld-musl-aarch64.so.1+0x69234(setpgid+20)
getpgid(0) @ ld-musl-aarch64.so.1+0x68d04(getpgrp+8)
getgroups(any, any) @ ld-musl-aarch64.so.1+0x68be4(getgroups+16)
uname(any) @ ld-musl-aarch64.so.1+0x3da6c(uname+12)
getrlimit(any u8, any) @ ld-musl-aarch64.so.1+0x3c21c(getrlimit+108)
getrlimit(0xffffffff80000000-0xffffffffffffffff, any) @ ld-musl-aarch64.so.1+0x3c21c(getrlimit+108)
setrlimit(any, any) @ ld-musl-aarch64.so.1+0x3d430(do_setrlimit*+24)
getrusage(0, any) @ ld-musl-aarch64.so.1+0x3c250(getrusage+16)
getrusage(-1, any) @ ld-musl-aarch64.so.1+0x3c250(getrusage+16)
umask(any u32) @ ld-musl-aarch64.so.1+0x52d80(umask+16)
gettimeofday(any, 0) @ ld-musl-aarch64.so.1+0x66790(clock_gettime+92)
gettimeofday(non-NULL, any) @ [vdso]+0x658(__kernel_gettimeofday+256)
getpid() @ ld-musl-aarch64.so.1+0x68d10(getpid+4)
getpid() @ ld-musl-aarch64.so.1+0x69328(do_setxid*+80)
getppid() @ ld-musl-aarch64.so.1+0x68d1c(getppid+4)
getuid() @ ld-musl-aarch64.so.1+0x68d48(getuid+4)
geteuid() @ ld-musl-aarch64.so.1+0x68798(checker*+112)
geteuid() @ ld-musl-aarch64.so.1+0x68bc0(geteuid+4)
getgid() @ ld-musl-aarch64.so.1+0x68bcc(getgid+4)
getegid() @ ld-musl-aarch64.so.1+0x68734(checker*+12)
getegid() @ ld-musl-aarch64.so.1+0x68bb4(getegid+4)
gettid() @ ld-musl-aarch64.so.1+0x64c08(__synccall*+212)
socket(any, any, any) @ ld-musl-aarch64.so.1+0x45c5c(socket+40)
socket(any, 0-0xfffffffffff7f7ff, any) @ ld-musl-aarch64.so.1+0x45c94(socket+96)
bind(any, any, any u32) @ ld-musl-aarch64.so.1+0x3f738(bind+32)
connect(any, any, any u32) @ ld-musl-aarch64.so.1+0x60864
connect(any, any, any u32) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
getsockname(any, any, any) @ ld-musl-aarch64.so.1+0x41b04(getsockname+28)
getpeername(any, any, any) @ ld-musl-aarch64.so.1+0x41740(getpeername+28)
sendto(any, any, any, MSG_NOSIGNAL, any, any u32) @ ld-musl-aarch64.so.1+0x60864
sendto(any, any, any, MSG_NOSIGNAL, any, any u32) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
setsockopt(any, SOL_TCP, TCP_FASTOPEN_CONNECT, any, 4) @ ld-musl-aarch64.so.1+0x45bc0(setsockopt+32)
setsockopt(any, SOL_IPV6, IPV6_V6ONLY, any, 4) @ ld-musl-aarch64.so.1+0x45bc0(setsockopt+32)
sendmsg(any, any, MSG_NOSIGNAL) @ ld-musl-aarch64.so.1+0x60864
sendmsg(any, any, MSG_NOSIGNAL|MSG_FASTOPEN) @ ld-musl-aarch64.so.1+0x60864
sendmsg(any, any, MSG_NOSIGNAL) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
sendmsg(any, any, MSG_NOSIGNAL|MSG_FASTOPEN) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
recvmsg(any, any, 0) @ ld-musl-aarch64.so.1+0x60864
recvmsg(any, any, 0) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
brk(any) @ ld-musl-aarch64.so.1+0x294b4(__malloc_alloc_meta*+332)
brk(0) @ ld-musl-aarch64.so.1+0x2956c(__malloc_alloc_meta*+516)
brk(any) @ ld-musl-aarch64.so.1+0x2958c(__malloc_alloc_meta*+548)
munmap(any, any) @ ld-musl-aarch64.so.1+0x3e250(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x607fc
mremap(any, NULL-0xfffffffffffff000, NULL-0x7ffffffffffffffe, MREMAP_MAYMOVE, 0) @ ld-musl-aarch64.so.1+0x3e160(mremap+48)
clone(SIGCHLD, 0, any, any, any) @ ld-musl-aarch64.so.1+0x482f8(_Fork+48)
clone(0, any, 512, any, any) @ ld-musl-aarch64.so.1+0x60824
mmap(0, NULL-0x7ffffffffffffffe, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e070(mmap+64)
mmap(0, NULL-0x7ffffffffffffffe, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e070(mmap+64)
mmap(any, NULL-0x7ffffffffffffffe, any, MAP_SHARED-MAP_PRIVATE, any, any) @ ld-musl-aarch64.so.1+0x3e070(mmap+64)
mmap(any, any, any, MAP_PRIVATE|MAP_FIXED, any, any) @ ld-musl-aarch64.so.1+0x3e070(mmap+64)
mmap(any, any, any, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, any, any) @ ld-musl-aarch64.so.1+0x3e070(mmap+64)
mprotect(NULL-0xfffffffffffffffe, any, PROT_READ|PROT_WRITE|PROT_EXEC) @ ld-musl-aarch64.so.1+0x3e120(mprotect+56)
mprotect(any, any, PROT_READ|PROT_WRITE) @ ld-musl-aarch64.so.1+0x3e120(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x6b124(reloc_all*+268)
wait4(-1, any, any, 0) @ ld-musl-aarch64.so.1+0x60864
wait4(-1, any, any, 0) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
wait4(any, any, __WCLONE, 0) @ ld-musl-aarch64.so.1+0x688e0(faccessat+308)
prlimit64(0, any u8, 0, any) @ ld-musl-aarch64.so.1+0x3c1dc(getrlimit+44)
prlimit64(0, 0xffffffff80000000-0xffffffffffffffff, 0, any) @ ld-musl-aarch64.so.1+0x3c1dc(getrlimit+44)
prlimit64(0, any u8, any, 0) @ ld-musl-aarch64.so.1+0x3d464(setrlimit+36)
prlimit64(0, 0xffffffff80000000-0xffffffffffffffff, any, 0) @ ld-musl-aarch64.so.1+0x3d464(setrlimit+36)
getrandom(any, 4, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x60864
getrandom(any, 4, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
membarrier(MEMBARRIER_CMD_PRIVATE_EXPEDITED, 0) @ ld-musl-aarch64.so.1+0x246d8(membarrier+28)
faccessat2(AT_FDCWD, any, X_OK-W_OK, AT_EACCESS) @ ld-musl-aarch64.so.1+0x68810(faccessat+100)
faccessat2(AT_FDCWD, any, R_OK, AT_EACCESS) @ ld-musl-aarch64.so.1+0x68810(faccessat+100)
