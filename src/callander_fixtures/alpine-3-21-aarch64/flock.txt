callander: permitted syscalls: dup(any) @ ld-musl-aarch64.so.1+0x68678(dup+16)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x20c20(open+136)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x5295c(fstatat+88)
ioctl(any u32, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x53594(__stdout_write*+56)
flock(any, any) @ ld-musl-aarch64.so.1+0x2459c(flock+20)
faccessat(AT_FDCWD, any, W_OK|R_OK) @ ld-musl-aarch64.so.1+0x68548(access+28)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9ee10, O_RDWR|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x1ffe4(__init_libc*+424)
openat(AT_FDCWD, any, any, any) @ ld-musl-aarch64.so.1+0x60864
openat(AT_FDCWD, any, any, any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
openat(AT_FDCWD, any, O_RDONLY|O_NONBLOCK|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x64fa4(__map_file*+36)
close(any) @ ld-musl-aarch64.so.1+0x53290(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x60864
close(any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
close(any) @ ld-musl-aarch64.so.1+0x64fd0(__map_file*+80)
close(any) @ ld-musl-aarch64.so.1+0x65010(__map_file*+144)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x68e14(lseek+12)
read(any u32, any, any) @ ld-musl-aarch64.so.1+0x53408(__stdio_read*+144)
readv(any u32, any, 2) @ ld-musl-aarch64.so.1+0x533c4(__stdio_read*+76)
writev(any u32, any, any) @ ld-musl-aarch64.so.1+0x5351c(__stdio_write*+184)
ppoll(any, 3, any, 0, 8) @ ld-musl-aarch64.so.1+0x1ff94(__init_libc*+344)
newfstatat(any, ld-musl-aarch64.so.1+0x9f3f0, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x52974(fstatat+112)
newfstatat(AT_FDCWD, any, any, 0) @ ld-musl-aarch64.so.1+0x529ac(fstatat+168)
newfstatat(any, ld-musl-aarch64.so.1+0x9f3f0, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x529c8(fstatat+196)
fstat(any, any) @ ld-musl-aarch64.so.1+0x52940(fstatat+60)
exit(any) @ ld-musl-aarch64.so.1+0x60804
exit(any) @ ld-musl-aarch64.so.1+0x6083c
exit(0) @ ld-musl-aarch64.so.1+0x623bc(pthread_exit+416)
exit(0) @ ld-musl-aarch64.so.1+0x62460(start*+104)
exit_group(any) @ ld-musl-aarch64.so.1+0x206d8(_Exit+12)
set_tid_address(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x48268(__post_Fork*+44)
set_tid_address(any) @ ld-musl-aarch64.so.1+0x62454(start*+92)
futex(any, FUTEX_WAIT, any, 0, any, any)
futex(any, FUTEX_WAKE, 0-INT_MAX, any, any u32, INT_MAX)
futex(any, FUTEX_WAKE, 1, any, any, any)
futex(any, FUTEX_WAKE, INT_MAX, any, any, any)
futex(any, FUTEX_REQUEUE, 0, 1, ld-musl-aarch64.so.1+0xc2ab4, any)
futex(any, FUTEX_LOCK_PI-FUTEX_UNLOCK_PI, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any, any)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 0-INT_MAX, any, any u32, INT_MAX)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 1, any, any, any)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, any, any, any)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, ld-musl-aarch64.so.1+0xc2ab4, any)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG-FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
set_robust_list(0, 24) @ ld-musl-aarch64.so.1+0x623e8(pthread_exit+460)
set_robust_list(any, 24) @ ld-musl-aarch64.so.1+0x634f0(__pthread_mutex_trylock_owner*+92)
timer_create(CLOCK_MONOTONIC, any, any) @ ld-musl-aarch64.so.1+0x67f7c(timer_create+140)
timer_create(CLOCK_MONOTONIC, any, any) @ ld-musl-aarch64.so.1+0x6807c(timer_create+396)
timer_settime(any, 0, any, 0) @ ld-musl-aarch64.so.1+0x681fc(timer_settime+20)
timer_delete(0-INT_MAX) @ ld-musl-aarch64.so.1+0x67e58(start*+120)
timer_delete(any) @ ld-musl-aarch64.so.1+0x68150(timer_delete+8)
clock_gettime(CLOCK_MONOTONIC_RAW, any) @ ld-musl-aarch64.so.1+0x66770(clock_gettime+60)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
sched_setscheduler(any u32, any, any) @ ld-musl-aarch64.so.1+0x62700(pthread_create+568)
restart_syscall()
tkill(any u32, SIGSETXID) @ ld-musl-aarch64.so.1+0x61394(cancel_handler*+132)
tkill(non-NULL, SIGSETXID) @ ld-musl-aarch64.so.1+0x63118(pthread_kill+68)
tkill(any u32, SIGCANCEL) @ ld-musl-aarch64.so.1+0x6817c(timer_delete+52)
rt_sigaction(SIGALRM, any, 0, 8) @ ld-musl-aarch64.so.1+0x51dfc(__libc_sigaction*+140)
rt_sigaction(SIGCHLD, any, any, 8) @ ld-musl-aarch64.so.1+0x51dfc(__libc_sigaction*+140)
rt_sigaction(SIGCANCEL-SIGSETXID, any, 0, 8) @ ld-musl-aarch64.so.1+0x51dfc(__libc_sigaction*+140)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa1060(all_mask*), any, 8) @ ld-musl-aarch64.so.1+0x51b58(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa1058(app_mask*), any, 8) @ ld-musl-aarch64.so.1+0x51b78(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x51b94(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x51ec8(__libc_sigaction*+344)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x6247c(start*+132)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x62800(pthread_create+824)
rt_sigprocmask(SIG_BLOCK, any, any, 8) @ ld-musl-aarch64.so.1+0x6424c(pthread_sigmask+24)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x6424c(pthread_sigmask+24)
rt_sigprocmask(SIG_BLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x68024(timer_create+308)
rt_sigtimedwait(any, any, 0, 8) @ ld-musl-aarch64.so.1+0x60864
rt_sigtimedwait(any, any, 0, 8) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
rt_sigreturn(any) @ ld-musl-aarch64.so.1+0x51b14
gettimeofday(non-NULL, any) @ [vdso]+0x658(__kernel_gettimeofday+256)
brk(any) @ ld-musl-aarch64.so.1+0x294b4(__malloc_alloc_meta*+332)
brk(0) @ ld-musl-aarch64.so.1+0x2956c(__malloc_alloc_meta*+516)
brk(any) @ ld-musl-aarch64.so.1+0x2958c(__malloc_alloc_meta*+548)
munmap(any, any) @ ld-musl-aarch64.so.1+0x3e250(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x607fc
clone(SIGCHLD, 0, any, any, any) @ ld-musl-aarch64.so.1+0x482f8(_Fork+48)
clone(CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID|CLONE_DETACHED, any, any, any, ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x60824
mmap(0, NULL-0x7ffffffffffffffe, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e070(mmap+64)
mmap(0, NULL-0x7ffffffffffffffe, PROT_READ, MAP_SHARED, any, 0) @ ld-musl-aarch64.so.1+0x3e070(mmap+64)
mmap(0, NULL-0x7ffffffffffffffe, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e070(mmap+64)
mmap(any, any, any, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, any, any) @ ld-musl-aarch64.so.1+0x3e070(mmap+64)
mprotect(any, any, PROT_READ|PROT_WRITE) @ ld-musl-aarch64.so.1+0x3e120(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x6b124(reloc_all*+268)
wait4(0x1-0x7fffffff, any, 0, 0) @ ld-musl-aarch64.so.1+0x60864
wait4(0x1-0x7fffffff, any, 0, 0) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
membarrier(MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED, 0) @ ld-musl-aarch64.so.1+0x24824(__membarrier_init*+12)
