callander: permitted syscalls: getcwd(any, 0x1000-0x1001) @ ld-musl-aarch64.so.1+0x68b30(getcwd+36)
getcwd(non-NULL, non-NULL) @ ld-musl-aarch64.so.1+0x68b30(getcwd+36)
dup(any) @ ld-musl-aarch64.so.1+0x68678(dup+16)
fcntl(any, F_GETFD, 0) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_SETFD, FD_CLOEXEC-0xffffffff) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x20c20(open+136)
fcntl(STDIN_FILENO-0x7fffffff, F_GETFD, any) @ ld-musl-aarch64.so.1+0x5295c(fstatat+88)
fcntl(AT_FDCWD, F_GETFD, any) @ ld-musl-aarch64.so.1+0x5295c(fstatat+88)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x52e74(fdopen+120)
fcntl(any, F_GETFL, any) @ ld-musl-aarch64.so.1+0x52f5c(fdopen+352)
fcntl(any, F_SETFL, O_APPEND-0xffffffffffffffff) @ ld-musl-aarch64.so.1+0x52f74(fdopen+376)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x5476c(fopen+116)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x52eb4(fdopen+184)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x53594(__stdout_write*+56)
unlinkat(AT_FDCWD, any, 0) @ ld-musl-aarch64.so.1+0x695e0(unlink+24)
faccessat(AT_FDCWD, any, X_OK) @ ld-musl-aarch64.so.1+0x68548(access+28)
fchmodat(AT_FDCWD, any, 0-0777) @ ld-musl-aarch64.so.1+0x526c4(chmod+24)
openat(AT_FDCWD, "/dev/null", O_RDWR|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x1ffe4(__init_libc*+424)
openat(AT_FDCWD, any, O_RDONLY|O_NOFOLLOW-0xffffffffffffffff, any) @ ld-musl-aarch64.so.1+0x54748(fopen+80)
openat(AT_FDCWD, any, O_RDONLY|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x60864
openat(AT_FDCWD, any, O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x60864
openat(AT_FDCWD, non-NULL, O_RDONLY|O_DIRECTORY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x60864
openat(AT_FDCWD, any, O_RDONLY|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
openat(AT_FDCWD, any, O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
openat(AT_FDCWD, non-NULL, O_RDONLY|O_DIRECTORY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
openat(AT_FDCWD, any, O_RDONLY|O_NONBLOCK|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x64fa4(__map_file*+36)
close(any) @ ld-musl-aarch64.so.1+0x1f980(opendir+72)
close(any) @ ld-musl-aarch64.so.1+0x53290(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x547bc(fopen+196)
close(any) @ ld-musl-aarch64.so.1+0x60864
close(any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
close(any) @ ld-musl-aarch64.so.1+0x64fd0(__map_file*+80)
close(any) @ ld-musl-aarch64.so.1+0x65010(__map_file*+144)
getdents64(any, any, 2048) @ ld-musl-aarch64.so.1+0x1f9e0(readdir+80)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x68e14(lseek+12)
read(any, any, any) @ ld-musl-aarch64.so.1+0x53408(__stdio_read*+144)
read(any, any, any) @ ld-musl-aarch64.so.1+0x60864
read(any, any, any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
readv(any, any, 2) @ ld-musl-aarch64.so.1+0x533c4(__stdio_read*+76)
writev(any, any, any) @ ld-musl-aarch64.so.1+0x5351c(__stdio_write*+184)
pread64(any, any, any, any) @ ld-musl-aarch64.so.1+0x60864
pread64(any, any, any, any) @ ld-musl-aarch64.so.1+0x614f8(__syscall_cp_c*+200)
ppoll(any, 3, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x1ff94(__init_libc*+344)
readlinkat(AT_FDCWD, any, any, non-NULL) @ ld-musl-aarch64.so.1+0x690f4(readlink+40)
newfstatat(STDIN_FILENO-0x7fffffff, "", any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x52974(fstatat+112)
newfstatat(AT_FDCWD, any, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x52974(fstatat+112)
newfstatat(AT_FDCWD, any, any, 0) @ ld-musl-aarch64.so.1+0x529ac(fstatat+168)
newfstatat(0x80000000--1 as u32, "", any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x529c8(fstatat+196)
newfstatat(AT_FDCWD, any, any, 0) @ ld-musl-aarch64.so.1+0x529c8(fstatat+196)
newfstatat(AT_FDCWD, any, any, AT_SYMLINK_NOFOLLOW) @ ld-musl-aarch64.so.1+0x529c8(fstatat+196)
fstat(STDIN_FILENO-0x7fffffff, any) @ ld-musl-aarch64.so.1+0x52940(fstatat+60)
fstat(AT_FDCWD, any) @ ld-musl-aarch64.so.1+0x52940(fstatat+60)
exit(0) @ ld-musl-aarch64.so.1+0x60804
exit(0xfffffffffffff001-0xffffffffffffffff) @ ld-musl-aarch64.so.1+0x60804
exit(any) @ ld-musl-aarch64.so.1+0x6083c
exit(0) @ ld-musl-aarch64.so.1+0x623bc(pthread_exit+416)
exit(0) @ ld-musl-aarch64.so.1+0x62460(start*+104)
exit_group(NULL-0x1) @ ld-musl-aarch64.so.1+0x206d8(_Exit+12)
set_tid_address(any) @ ld-musl-aarch64.so.1+0x62454(start*+92)
futex(any, FUTEX_WAIT, any, 0, any, 0)
futex(any, FUTEX_WAIT, 0x40000000-0xffffffffffffffff, 0, any, 0x40000000-0xffffffff)
futex(any, FUTEX_WAKE, 0-INT_MAX, any, any u32, INT_MAX)
futex(any, FUTEX_WAKE, 1, any, any, any)
futex(any, FUTEX_WAKE, INT_MAX, any, any, any)
futex(any, FUTEX_REQUEUE, 0, 1, any, any)
futex(any, FUTEX_LOCK_PI-FUTEX_UNLOCK_PI, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any, 0)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, 0x40000000-0xffffffffffffffff, 0, any, 0x40000000-0xffffffff)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 0-INT_MAX, any, any u32, INT_MAX)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 1, any, any, any)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, any, any)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG-FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(ld-musl-aarch64.so.1+0xc06b0(barrier_sem*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc06b0(barrier_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1e90(exit_sem*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1e90(exit_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1eb0(caller_sem*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1eb0(caller_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1ed0(target_sem*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1ed0(target_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAIT, non-NULL, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), FUTEX_WAIT, non-NULL, 0, ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), ld-musl-aarch64.so.1+0xc2ed8(tl_lock_waiters*))
futex(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), ld-musl-aarch64.so.1+0xc2ed8(tl_lock_waiters*))
set_robust_list(0, sizeof(struct robust_list_head)) @ ld-musl-aarch64.so.1+0x623e8(pthread_exit+460)
set_robust_list(any, sizeof(struct robust_list_head)) @ ld-musl-aarch64.so.1+0x634f0(__pthread_mutex_trylock_owner*+92)
clock_gettime(CLOCK_REALTIME, any) @ ld-musl-aarch64.so.1+0x66770(clock_gettime+60)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
sched_setscheduler(any, any, any) @ ld-musl-aarch64.so.1+0x62700(pthread_create+568)
restart_syscall()
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x20740(abort+84)
tkill(any, SIGSYNCCALL) @ ld-musl-aarch64.so.1+0x247a4(membarrier+232)
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x51d1c(raise+44)
tkill(any, SIGSETXID) @ ld-musl-aarch64.so.1+0x61394(cancel_handler*+132)
tkill(non-NULL, SIGSETXID) @ ld-musl-aarch64.so.1+0x63118(pthread_kill+68)
tkill(any, SIGSYNCCALL) @ ld-musl-aarch64.so.1+0x64cb0(__synccall*+380)
rt_sigaction(SIGABRT, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x2072c(abort+64)
rt_sigaction(any, any, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51dfc(__libc_sigaction*+140)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x20758(abort+108)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa1060(all_mask*), any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51b58(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa1058(app_mask*), any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51b78(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51b94(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51ec8(__libc_sigaction*+344)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x6247c(start*+132)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x62800(pthread_create+824)
rt_sigprocmask(SIG_BLOCK, any, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x6424c(pthread_sigmask+24)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x6424c(pthread_sigmask+24)
rt_sigreturn(any) @ ld-musl-aarch64.so.1+0x51b14
getrlimit(RLIMIT_NOFILE, any) @ ld-musl-aarch64.so.1+0x3c21c(getrlimit+108)
setrlimit(any, any) @ ld-musl-aarch64.so.1+0x3d430(do_setrlimit*+24)
getrusage(0, any) @ ld-musl-aarch64.so.1+0x3c250(getrusage+16)
umask(any u32) @ ld-musl-aarch64.so.1+0x52d80(umask+16)
gettimeofday(any, 0) @ ld-musl-aarch64.so.1+0x66790(clock_gettime+92)
gettimeofday(non-NULL, any) @ [vdso]+0x658(__kernel_gettimeofday+256)
getuid() @ ld-musl-aarch64.so.1+0x68d48(getuid+4)
getgid() @ ld-musl-aarch64.so.1+0x68bcc(getgid+4)
gettid() @ ld-musl-aarch64.so.1+0x64c08(__synccall*+212)
brk(0) @ ld-musl-aarch64.so.1+0x24be8(sbrk+8)
brk(any) @ ld-musl-aarch64.so.1+0x294b4(__malloc_alloc_meta*+332)
brk(0) @ ld-musl-aarch64.so.1+0x2956c(__malloc_alloc_meta*+516)
brk(any) @ ld-musl-aarch64.so.1+0x2958c(__malloc_alloc_meta*+548)
munmap(any, any) @ ld-musl-aarch64.so.1+0x3e250(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x607fc
mremap(any, NULL-0xfffffffffffff000, NULL-0x7ffffffffffffffe, MREMAP_MAYMOVE, 0) @ ld-musl-aarch64.so.1+0x3e160(mremap+48)
clone(CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID|CLONE_DETACHED, any, any, any, ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x60824
mmap(any, NULL-0x7ffffffffffffffe, any, any, any, any) @ ld-musl-aarch64.so.1+0x3e070(mmap+64)
mmap(any, any, any, MAP_FIXED-0xffffffffffffffff, any, any) @ ld-musl-aarch64.so.1+0x3e070(mmap+64)
mprotect(NULL-0xfffffffffffffffe, any, PROT_READ|PROT_WRITE|PROT_EXEC) @ ld-musl-aarch64.so.1+0x3e120(mprotect+56)
mprotect(any, any, PROT_READ|PROT_WRITE) @ ld-musl-aarch64.so.1+0x3e120(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x6b124(reloc_all*+268)
prlimit64(0, RLIMIT_NOFILE, 0, any) @ ld-musl-aarch64.so.1+0x3c1dc(getrlimit+44)
prlimit64(0, RLIMIT_NOFILE, any, 0) @ ld-musl-aarch64.so.1+0x3d464(setrlimit+36)
membarrier(MEMBARRIER_CMD_PRIVATE_EXPEDITED, 0) @ ld-musl-aarch64.so.1+0x246d8(membarrier+28)
membarrier(MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED, 0) @ ld-musl-aarch64.so.1+0x24824(__membarrier_init*+12)
