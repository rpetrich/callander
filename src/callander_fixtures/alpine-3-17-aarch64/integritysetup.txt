callander: permitted syscalls: dup3(STDIN_FILENO, STDOUT_FILENO, 0) @ ld-musl-aarch64.so.1+0x642b0(dup2+28)
dup3(STDERR_FILENO--1 as u32, STDOUT_FILENO, 0) @ ld-musl-aarch64.so.1+0x642b0(dup2+28)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x2107c(fcntl+376)
fcntl(any, F_SETFD, any u32) @ ld-musl-aarch64.so.1+0x2107c(fcntl+376)
fcntl(any, F_GETFL, any) @ ld-musl-aarch64.so.1+0x2107c(fcntl+376)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x2111c(open+136)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x45434(socket+148)
fcntl(any, F_SETFL, 2048) @ ld-musl-aarch64.so.1+0x4544c(socket+172)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x50854(fstatat64+108)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x50db8(fdopen+176)
fcntl(any, F_GETFL, any) @ ld-musl-aarch64.so.1+0x50dd8(fdopen+208)
fcntl(any, F_SETFL, any) @ ld-musl-aarch64.so.1+0x50df0(fdopen+232)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x50f90(__fopen_rb_ca*+96)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x5257c(fopen64+148)
fcntl(STDOUT_FILENO, F_GETFD, any) @ ld-musl-aarch64.so.1+0x642e4(dup2+80)
ioctl(STDIN_FILENO-0xfffffffffffffffe, BLKROGET, any) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(STDIN_FILENO-0xfffffffffffffffe, FIONBIO, any) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, any, non-NULL) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, BLKGETSIZE, any) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, BLKRASET, NULL-0xfffffffe) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, BLKRAGET, any) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, BLKSSZGET, any) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, BLKIOMIN-BLKPBSZGET, any) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, BLKZEROOUT, any) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, LOOP_SET_FD, any u32) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, LOOP_CLR_FD, 0) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, LOOP_SET_STATUS64-LOOP_GET_STATUS64, any) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, LOOP_SET_CAPACITY, 0) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, LOOP_SET_BLOCK_SIZE-LOOP_CONFIGURE, any) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, LOOP_CTL_GET_FREE, any) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, CDROMMULTISESSION, any) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, CDROM_GET_CAPABILITY, 0) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, CDROM_LAST_WRITTEN, any) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, SIOCGIFNAME, any) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, SIOCGIFCONF, any) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, SIOCGIFHWADDR, any) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, SIOCGIFINDEX, any) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, BLKRESETZONE, any) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, BLKGETZONESZ, any) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, BLKGETSIZE64, any) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, EVMS_GET_STRIPE_INFO, any) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, FDGETPRM, any) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, FDGETFDCSTAT, any) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, GET_ARRAY_INFO, any) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x50e34(fdopen+300)
ioctl(any u32, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x51464(__stdout_write*+56)
ioctl(STDIN_FILENO, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x6494c(isatty+24)
flock(any, LOCK_SH-LOCK_EX) @ ld-musl-aarch64.so.1+0x242b4(flock+20)
flock(any, LOCK_EX|LOCK_NB) @ ld-musl-aarch64.so.1+0x242b4(flock+20)
flock(any, LOCK_UN) @ ld-musl-aarch64.so.1+0x242b4(flock+20)
mknodat(AT_FDCWD, any, any u32, any) @ ld-musl-aarch64.so.1+0x50a8c(mknod+36)
mkdirat(AT_FDCWD, any, 0777) @ ld-musl-aarch64.so.1+0x50a1c(mkdir+28)
mkdirat(any, any, 0700) @ ld-musl-aarch64.so.1+0x50a40(mkdirat+20)
unlinkat(AT_FDCWD, any, 0) @ ld-musl-aarch64.so.1+0x65190(unlink+24)
renameat(AT_FDCWD, any, AT_FDCWD, any) @ ld-musl-aarch64.so.1+0x549dc(rename+32)
fstatfs(any, any) @ ld-musl-aarch64.so.1+0x50b50(fstatfs64+52)
ftruncate(any, any) @ ld-musl-aarch64.so.1+0x646dc(ftruncate64+16)
fallocate(STDIN_FILENO-0xfffffffffffffffe, 0, 0, any) @ ld-musl-aarch64.so.1+0x211e4(posix_fallocate+24)
faccessat(AT_FDCWD, non-NULL, X_OK) @ ld-musl-aarch64.so.1+0x64150(access+32)
faccessat(any, libblkid.so.1+0x3cc58, F_OK) @ ld-musl-aarch64.so.1+0x643e8(faccessat+56)
faccessat(any, libblkid.so.1+0x3e501, F_OK) @ ld-musl-aarch64.so.1+0x643e8(faccessat+56)
faccessat(any, libblkid.so.1+0x3e512, F_OK) @ ld-musl-aarch64.so.1+0x643e8(faccessat+56)
faccessat(any, libblkid.so.1+0x3e528, F_OK) @ ld-musl-aarch64.so.1+0x643e8(faccessat+56)
faccessat(any, libblkid.so.1+0x3e53e, F_OK) @ ld-musl-aarch64.so.1+0x643e8(faccessat+56)
faccessat(any, libblkid.so.1+0x3e558, F_OK) @ ld-musl-aarch64.so.1+0x643e8(faccessat+56)
fchownat(AT_FDCWD, any, any u32, any u32, 0) @ ld-musl-aarch64.so.1+0x64208(chown+40)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9b2e1, O_RDWR|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x20548(__init_libc*+380)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9b455, O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x50f70(__fopen_rb_ca*+64)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9b460, O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x50f70(__fopen_rb_ca*+64)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9b6b1, O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x50f70(__fopen_rb_ca*+64)
openat(AT_FDCWD, any, any, any) @ ld-musl-aarch64.so.1+0x52558(fopen64+112)
openat(any, any, any, any) @ ld-musl-aarch64.so.1+0x5d210
openat(any, any, any, any) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
openat(AT_FDCWD, any, O_RDONLY|O_NONBLOCK|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x612b0(__map_file*+44)
close(any) @ ld-musl-aarch64.so.1+0x1ff28(opendir+56)
close(any) @ ld-musl-aarch64.so.1+0x41e58(if_indextoname+84)
close(any) @ ld-musl-aarch64.so.1+0x421c8(if_nametoindex+116)
close(any) @ ld-musl-aarch64.so.1+0x44604(cleanup*+4)
close(any) @ ld-musl-aarch64.so.1+0x51180(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x52598(fopen64+176)
close(any) @ ld-musl-aarch64.so.1+0x5d210
close(any) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
close(any) @ ld-musl-aarch64.so.1+0x612e4(__map_file*+96)
close(any) @ ld-musl-aarch64.so.1+0x6132c(__map_file*+168)
pipe2(any, 0) @ ld-musl-aarch64.so.1+0x64af8(pipe+16)
getdents64(any u32, any, 2048) @ ld-musl-aarch64.so.1+0x1ff70(readdir64+44)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x64a28(lseek64+12)
read(any u32, any, any) @ ld-musl-aarch64.so.1+0x512b0(__stdio_read*+76)
read(any, any, any) @ ld-musl-aarch64.so.1+0x5d210
read(any, any, any) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
write(any, any, any) @ ld-musl-aarch64.so.1+0x5d210
write(any, any, any) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
readv(any u32, any, 2) @ ld-musl-aarch64.so.1+0x512b0(__stdio_read*+76)
writev(any u32, any, any) @ ld-musl-aarch64.so.1+0x51388(__stdio_write*+76)
pread64(any, any, any, any) @ ld-musl-aarch64.so.1+0x5d210
pread64(any, any, any, any) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
pselect6(0x1-0x400, any, any, 0, any, any) @ ld-musl-aarch64.so.1+0x5d210
pselect6(0x1-0x400, any, any, 0, any, any) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
ppoll(any, 3, any, 0, 8) @ ld-musl-aarch64.so.1+0x20520(__init_libc*+340)
ppoll(any, 1, any, 0, 8) @ ld-musl-aarch64.so.1+0x5d210
ppoll(any, 1, any, 0, 8) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
readlinkat(AT_FDCWD, any, any, 4095) @ ld-musl-aarch64.so.1+0x64cc8(readlink+44)
readlinkat(AT_FDCWD, ld-musl-aarch64.so.1+0x9c369, any, 512) @ ld-musl-aarch64.so.1+0x64cc8(readlink+44)
newfstatat(any, any, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x50870(fstatat64+136)
newfstatat(any, any, any, 0-AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x508a4(fstatat64+188)
fstat(any, any) @ ld-musl-aarch64.so.1+0x50838(fstatat64+80)
fstat(any, any) @ ld-musl-aarch64.so.1+0x612d0(__map_file*+76)
fsync(any) @ ld-musl-aarch64.so.1+0x5d210
fsync(any) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
exit(any) @ ld-musl-aarch64.so.1+0x5d1b0
exit(0) @ ld-musl-aarch64.so.1+0x5e8d0(pthread_exit+396)
exit_group(NULL-0x1) @ ld-musl-aarch64.so.1+0x20bd4(_Exit+12)
futex(any, FUTEX_WAIT, any, 0, any u32, any)
futex(any, FUTEX_WAIT, non-NULL, 0, any, any u32)
futex(any, any, 0-INT_MAX, any, any u32, any u32)
futex(any, any, any, 0, 0, 0)
futex(any, any, 1, any, any, any)
futex(any, any, non-NULL, 0, 0, any)
futex(any, FUTEX_WAKE, INT_MAX, any, any, any)
futex(any, FUTEX_REQUEUE, 0, 1, ld-musl-aarch64.so.1+0xb1dec, ld-musl-aarch64.so.1+0xb1dec)
futex(any, FUTEX_LOCK_PI-FUTEX_UNLOCK_PI, 0, 0, any u32, any)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any u32, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, any, any u32)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, any, any, any)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, ld-musl-aarch64.so.1+0xb1dec, ld-musl-aarch64.so.1+0xb1dec)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG-FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any u32, any)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(ld-musl-aarch64.so.1+0xb2230(__thread_list_lock*), any, non-NULL, 0, ld-musl-aarch64.so.1+0xb22d8(tl_lock_waiters*), ld-musl-aarch64.so.1+0xb2230(__thread_list_lock*))
futex(ld-musl-aarch64.so.1+0xb232c(vmlock*), any, non-NULL, 0, ld-musl-aarch64.so.1+0xb2330, ld-musl-aarch64.so.1+0xb232c(vmlock*))
set_robust_list(0, 24) @ ld-musl-aarch64.so.1+0x5e898(pthread_exit+340)
set_robust_list(any, 24) @ ld-musl-aarch64.so.1+0x5f918(__pthread_mutex_trylock_owner*+204)
nanosleep(any, any) @ ld-musl-aarch64.so.1+0x5d210
nanosleep(any, any) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
clock_gettime(CLOCK_REALTIME-CLOCK_MONOTONIC, any) @ ld-musl-aarch64.so.1+0x62794(clock_gettime+72)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
restart_syscall()
kill(any, SIGKILL) @ ld-musl-aarch64.so.1+0x64ef8(do_setxid*+76)
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x20c34(abort+84)
tkill(any u32, SIGSYNCCALL) @ ld-musl-aarch64.so.1+0x24500(membarrier+304)
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x4fc9c(raise+44)
tkill(any u32, SIGSETXID) @ ld-musl-aarch64.so.1+0x5dc34(cancel_handler*+124)
tkill(non-NULL, SIGSETXID) @ ld-musl-aarch64.so.1+0x5f4d0(pthread_kill+68)
tkill(any u32, SIGSYNCCALL) @ ld-musl-aarch64.so.1+0x6100c(__synccall*+404)
rt_sigaction(SIGABRT, any, 0, 8) @ ld-musl-aarch64.so.1+0x20c20(abort+64)
rt_sigaction(any, any, any, 8) @ ld-musl-aarch64.so.1+0x4fde0(__libc_sigaction*+240)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x20c4c(abort+108)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0x6e528(all_mask*), any, 8) @ ld-musl-aarch64.so.1+0x4fadc(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0x6e520(app_mask*), any, 8) @ ld-musl-aarch64.so.1+0x4fafc(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x4fb18(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x4fe68(__libc_sigaction*+376)
rt_sigprocmask(SIG_SETMASK, 0, libcrypto.so.3+0x382510, 8) @ ld-musl-aarch64.so.1+0x50498(__sigsetjmp_tail*+32)
rt_sigprocmask(SIG_SETMASK, libcrypto.so.3+0x382510, 0, 8) @ ld-musl-aarch64.so.1+0x50498(__sigsetjmp_tail*+32)
rt_sigprocmask(SIG_BLOCK, any, any, 8) @ ld-musl-aarch64.so.1+0x605cc(pthread_sigmask+24)
rt_sigprocmask(SIG_UNBLOCK-SIG_SETMASK, any, any, 8) @ ld-musl-aarch64.so.1+0x605cc(pthread_sigmask+24)
rt_sigreturn(any) @ ld-musl-aarch64.so.1+0x4fa98
uname(any) @ ld-musl-aarch64.so.1+0x3e148(uname+12)
umask(any u32) @ ld-musl-aarch64.so.1+0x50ca4(umask+16)
gettimeofday(any, 0) @ ld-musl-aarch64.so.1+0x627b4(clock_gettime+104)
gettimeofday(non-NULL, any) @ [vdso]+0x658(__kernel_gettimeofday+256)
getpid() @ ld-musl-aarch64.so.1+0x648f4(getpid+4)
getpid() @ ld-musl-aarch64.so.1+0x64eec(do_setxid*+64)
getppid() @ ld-musl-aarch64.so.1+0x64900(getppid+4)
getuid() @ ld-musl-aarch64.so.1+0x6492c(getuid+4)
geteuid() @ ld-musl-aarch64.so.1+0x647a0(geteuid+4)
getgid() @ ld-musl-aarch64.so.1+0x647ac(getgid+4)
getegid() @ ld-musl-aarch64.so.1+0x64794(getegid+4)
gettid() @ ld-musl-aarch64.so.1+0x3dbd0(syscall+172)
gettid() @ ld-musl-aarch64.so.1+0x47774(_Fork+84)
gettid() @ ld-musl-aarch64.so.1+0x60f9c(__synccall*+292)
shmget(114, 1, 0) @ ld-musl-aarch64.so.1+0x233b0(shmget+28)
shmget(114, 1, 0444) @ ld-musl-aarch64.so.1+0x233b0(shmget+28)
shmget(114, -1, 0) @ ld-musl-aarch64.so.1+0x233b0(shmget+28)
shmget(114, -1, 0444) @ ld-musl-aarch64.so.1+0x233b0(shmget+28)
shmat(NULL-0xfffffffffffffffe, 0, SHM_NORESERVE) @ ld-musl-aarch64.so.1+0x23348(shmat+12)
shmdt(any) @ ld-musl-aarch64.so.1+0x23384(shmdt+12)
socket(any, any, any) @ ld-musl-aarch64.so.1+0x453c8(socket+40)
socket(any, 0-0xfffffffffff7f7ff, any) @ ld-musl-aarch64.so.1+0x45400(socket+96)
bind(any, any, any u32) @ ld-musl-aarch64.so.1+0x3fbe0(bind+32)
listen(STDIN_FILENO-0xfffffffffffffffe, 128) @ ld-musl-aarch64.so.1+0x42900(listen+36)
accept(any, any, any) @ ld-musl-aarch64.so.1+0x5d210
accept(any, any, any) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
connect(any, any, any u32) @ ld-musl-aarch64.so.1+0x5d210
connect(any, any, any u32) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
getsockname(any, any, any) @ ld-musl-aarch64.so.1+0x41cf8(getsockname+28)
sendto(any, any, any u32, MSG_NOSIGNAL, any, 16) @ ld-musl-aarch64.so.1+0x5d210
sendto(any, any, any u32, MSG_NOSIGNAL, any, 28) @ ld-musl-aarch64.so.1+0x5d210
sendto(any, any, any, 0, any, any u32) @ ld-musl-aarch64.so.1+0x5d210
sendto(any, any, any u32, MSG_NOSIGNAL, any, 16) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
sendto(any, any, any u32, MSG_NOSIGNAL, any, 28) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
sendto(any, any, any, 0, any, any u32) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
recvfrom(any, any, any, any, any, any) @ ld-musl-aarch64.so.1+0x5d210
recvfrom(any, any, any, any, any, any) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
setsockopt(STDIN_FILENO-0xfffffffffffffffe, SOL_SOCKET, SO_REUSEADDR, any, 4) @ ld-musl-aarch64.so.1+0x45330(setsockopt+32)
setsockopt(STDIN_FILENO-0xfffffffffffffffe, IPPROTO_TCP, SO_DEBUG, any, 4) @ ld-musl-aarch64.so.1+0x45330(setsockopt+32)
setsockopt(any, SOL_IP-SOL_SOCKET, SO_KEEPALIVE-SO_OOBINLINE, any, 4) @ ld-musl-aarch64.so.1+0x45330(setsockopt+32)
setsockopt(any, SOL_SOCKET, 0x14-0x15, any, 16) @ ld-musl-aarch64.so.1+0x45330(setsockopt+32)
setsockopt(any, IPPROTO_TCP, 0x1f, libcrypto.so.3+0x2abc22, 4) @ ld-musl-aarch64.so.1+0x45330(setsockopt+32)
setsockopt(any, SOL_IPV6, TCP_FASTOPEN, any, 4) @ ld-musl-aarch64.so.1+0x45330(setsockopt+32)
setsockopt(any, SOL_IPV6, 0x1a, any, 4) @ ld-musl-aarch64.so.1+0x45330(setsockopt+32)
setsockopt(any, SOL_IPV6, 0x3e, any, 4) @ ld-musl-aarch64.so.1+0x45330(setsockopt+32)
setsockopt(any, 0x11a, SO_DEBUG-SO_REUSEADDR, any, any u32) @ ld-musl-aarch64.so.1+0x45330(setsockopt+32)
getsockopt(any, SOL_IP, 0xe, any, any) @ ld-musl-aarch64.so.1+0x41d24(getsockopt+28)
getsockopt(any, SOL_SOCKET, SO_TYPE-SO_ERROR, any, any) @ ld-musl-aarch64.so.1+0x41d24(getsockopt+28)
getsockopt(any, SOL_SOCKET, 0x14-0x15, any, any) @ ld-musl-aarch64.so.1+0x41d24(getsockopt+28)
getsockopt(any, SOL_IPV6, 0x18, any, any) @ ld-musl-aarch64.so.1+0x41d24(getsockopt+28)
shutdown(STDIN_FILENO-0xfffffffffffffffe, SHUT_RDWR) @ ld-musl-aarch64.so.1+0x45368(shutdown+36)
sendmsg(any, any, 0) @ ld-musl-aarch64.so.1+0x5d210
sendmsg(any, any, 0) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
recvmsg(any, any, 0) @ ld-musl-aarch64.so.1+0x5d210
recvmsg(any, any, 0) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
brk(0) @ ld-musl-aarch64.so.1+0x2b5b4(__malloc_alloc_meta*+296)
brk(any) @ ld-musl-aarch64.so.1+0x2b5d4(__malloc_alloc_meta*+328)
brk(any) @ ld-musl-aarch64.so.1+0x2b644(__malloc_alloc_meta*+440)
munmap(any, any) @ ld-musl-aarch64.so.1+0x3e8bc(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x5d1a8
mremap(any, NULL-0xfffffffffffff000, NULL-0xfffffffffffff000, MREMAP_MAYMOVE, 0) @ ld-musl-aarch64.so.1+0x3e818(mremap+140)
add_key(any, any, any, any, any) @ ld-musl-aarch64.so.1+0x3dbd0(syscall+172)
request_key(any, any, any, any) @ ld-musl-aarch64.so.1+0x3dbd0(syscall+172)
keyctl(3, any u32, any, any, any) @ ld-musl-aarch64.so.1+0x3dbd0(syscall+172)
keyctl(9, any u32, any, any, any) @ ld-musl-aarch64.so.1+0x3dbd0(syscall+172)
clone(SIGCHLD, 0, any, any, any) @ ld-musl-aarch64.so.1+0x4775c(_Fork+60)
mmap(0, any, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e710(mmap+148)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e710(mmap+148)
mmap(any, any, PROT_NONE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e710(mmap+148)
mmap(any, any, any, MAP_SHARED-MAP_PRIVATE, any, any) @ ld-musl-aarch64.so.1+0x3e710(mmap+148)
mmap(any, non-NULL, any, MAP_PRIVATE|MAP_FIXED, any, any) @ ld-musl-aarch64.so.1+0x3e710(mmap+148)
mmap(any, non-NULL, any, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e710(mmap+148)
fadvise64(any, 0, 0, 1) @ ld-musl-aarch64.so.1+0x211c0(posix_fadvise64+12)
mprotect(NULL-0xfffffffffffffffe, any, PROT_READ|PROT_WRITE|PROT_EXEC) @ ld-musl-aarch64.so.1+0x3e77c(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x3e77c(mprotect+56)
mprotect(any, any, PROT_READ|PROT_WRITE) @ ld-musl-aarch64.so.1+0x3e77c(mprotect+56)
madvise(any, any, MADV_FREE) @ ld-musl-aarch64.so.1+0x3e614(madvise+16)
getrandom(any, non-NULL, any) @ ld-musl-aarch64.so.1+0x3dbd0(syscall+172)
getrandom(any, non-NULL, 0-GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x5d210
getrandom(any, non-NULL, 0-GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
membarrier(MEMBARRIER_CMD_PRIVATE_EXPEDITED, 0) @ ld-musl-aarch64.so.1+0x243f4(membarrier+36)
