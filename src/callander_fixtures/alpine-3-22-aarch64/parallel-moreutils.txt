callander: permitted syscalls: dup(any) @ ld-musl-aarch64.so.1+0x48d28(child*+440)
dup3(any, any, 0) @ ld-musl-aarch64.so.1+0x48d88(child*+536)
dup3(any, any, 0) @ ld-musl-aarch64.so.1+0x48e7c(child*+780)
dup3(any u32, STDOUT_FILENO-STDERR_FILENO, 0) @ ld-musl-aarch64.so.1+0x686a8(dup2+28)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x48e04(child*+660)
fcntl(any, F_SETFD, 0-0xfffffffffffffffe) @ ld-musl-aarch64.so.1+0x48e20(child*+688)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x48ed8(child*+872)
fcntl(STDOUT_FILENO, F_GETFD, /usr/bin/parallel-moreutils+0x1b49) @ ld-musl-aarch64.so.1+0x686dc(dup2+80)
fcntl(STDERR_FILENO, F_GETFD, /usr/bin/parallel-moreutils+0x1b50) @ ld-musl-aarch64.so.1+0x686dc(dup2+80)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x68fb4(pipe2+176)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x68fbc(pipe2+184)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x53598(__stdout_write*+56)
chdir(any) @ ld-musl-aarch64.so.1+0x48ea4(child*+820)
fchdir(any) @ ld-musl-aarch64.so.1+0x48de4(child*+628)
openat(AT_FDCWD, "/dev/null", O_RDWR|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x1ffe4(__init_libc*+424)
openat(AT_FDCWD, any, any, any) @ ld-musl-aarch64.so.1+0x48e4c(child*+732)
close(any) @ ld-musl-aarch64.so.1+0x48d40(child*+464)
close(any) @ ld-musl-aarch64.so.1+0x48da4(child*+564)
close(any) @ ld-musl-aarch64.so.1+0x48e94(child*+804)
close(any) @ ld-musl-aarch64.so.1+0x53294(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x60868
close(any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
pipe2(any, 0) @ ld-musl-aarch64.so.1+0x68ef4(pipe+16)
pipe2(any, O_CLOEXEC) @ ld-musl-aarch64.so.1+0x68f24(pipe2+32)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x68e18(lseek+12)
read(any, any, any) @ ld-musl-aarch64.so.1+0x5340c(__stdio_read*+144)
read(any, any, 4) @ ld-musl-aarch64.so.1+0x60868
read(any, any, 0x1000) @ ld-musl-aarch64.so.1+0x60868
read(any, any, 4) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
read(any, any, 0x1000) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
write(any, any, 4) @ ld-musl-aarch64.so.1+0x48d04(child*+404)
write(STDOUT_FILENO-STDERR_FILENO, any, any) @ ld-musl-aarch64.so.1+0x60868
write(STDOUT_FILENO-STDERR_FILENO, any, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
readv(any, any, 2) @ ld-musl-aarch64.so.1+0x533c8(__stdio_read*+76)
writev(any, any, any) @ ld-musl-aarch64.so.1+0x53520(__stdio_write*+184)
ppoll(any, 3, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x1ff94(__init_libc*+344)
exit(0) @ ld-musl-aarch64.so.1+0x60808
exit(0xfffffffffffff001-0xffffffffffffffff) @ ld-musl-aarch64.so.1+0x60808
exit(any) @ ld-musl-aarch64.so.1+0x60840
exit(0) @ ld-musl-aarch64.so.1+0x623c0(pthread_exit+416)
exit_group(any) @ ld-musl-aarch64.so.1+0x206d8(_Exit+12)
waitid(P_ALL, 0, any, 0-WNOHANG|WEXITED, 0) @ ld-musl-aarch64.so.1+0x60868
waitid(P_ALL, 0, any, 0-WNOHANG|WEXITED, 0) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
set_tid_address(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x4826c(__post_Fork*+44)
futex(any, FUTEX_WAIT, any, 0, 0, 0)
futex(any, FUTEX_WAIT, non-NULL, 0, any, any u32)
futex(any, FUTEX_WAKE, 0-INT_MAX, any, any u32, INT_MAX)
futex(any, FUTEX_WAKE, 1, any, any, any)
futex(any, FUTEX_REQUEUE, 0, 1, ld-musl-aarch64.so.1+0xc2ab4, any)
futex(any, FUTEX_LOCK_PI-FUTEX_UNLOCK_PI, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, 0, 0)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, any, any u32)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 0-INT_MAX, any, any u32, INT_MAX)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 1, any, any, any)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, ld-musl-aarch64.so.1+0xc2ab4, any)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG-FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAIT, non-NULL, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2a88, FUTEX_WAKE, INT_MAX, ld-musl-aarch64.so.1+0xc2a88, any, any)
futex(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), FUTEX_WAIT, non-NULL, 0, ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), ld-musl-aarch64.so.1+0xc2ed8(tl_lock_waiters*))
futex(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), ld-musl-aarch64.so.1+0xc2ed8(tl_lock_waiters*))
set_robust_list(0, sizeof(struct robust_list_head)) @ ld-musl-aarch64.so.1+0x623ec(pthread_exit+460)
set_robust_list(any, sizeof(struct robust_list_head)) @ ld-musl-aarch64.so.1+0x634f4(__pthread_mutex_trylock_owner*+92)
nanosleep(any, any) @ ld-musl-aarch64.so.1+0x60868
nanosleep(any, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
sched_getaffinity(0, 128, any) @ ld-musl-aarch64.so.1+0x1be54(sysconf+432)
restart_syscall()
kill(non-NULL, SIGKILL) @ ld-musl-aarch64.so.1+0x51bd4(kill+20)
tkill(any, SIGSETXID) @ ld-musl-aarch64.so.1+0x61398(cancel_handler*+132)
tkill(non-NULL, SIGSETXID) @ ld-musl-aarch64.so.1+0x6311c(pthread_kill+68)
rt_sigaction(any, any, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51e00(__libc_sigaction*+140)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa1060(all_mask*), any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51b5c(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa1058(app_mask*), any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51b7c(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51b98(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51ecc(__libc_sigaction*+344)
rt_sigprocmask(SIG_BLOCK, any, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x64250(pthread_sigmask+24)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x64250(pthread_sigmask+24)
rt_sigreturn(any) @ ld-musl-aarch64.so.1+0x51b18
setgid(0-LONG_MAX) @ ld-musl-aarch64.so.1+0x48cbc(child*+332)
setgid(0-LONG_MAX) @ ld-musl-aarch64.so.1+0x692fc(do_setxid*+32)
setuid(0-LONG_MAX) @ ld-musl-aarch64.so.1+0x48cd4(child*+356)
setuid(0-LONG_MAX) @ ld-musl-aarch64.so.1+0x692fc(do_setxid*+32)
setpgid(0, any) @ ld-musl-aarch64.so.1+0x48c9c(child*+300)
setsid() @ ld-musl-aarch64.so.1+0x48c7c(child*+268)
gettimeofday(non-NULL, any) @ [vdso]+0x658(__kernel_gettimeofday+256)
getuid() @ ld-musl-aarch64.so.1+0x48ccc(child*+348)
getgid() @ ld-musl-aarch64.so.1+0x48cb4(child*+324)
sysinfo(any) @ ld-musl-aarch64.so.1+0x24f64(sysinfo+12)
brk(any) @ ld-musl-aarch64.so.1+0x294b8(__malloc_alloc_meta*+332)
brk(0) @ ld-musl-aarch64.so.1+0x29570(__malloc_alloc_meta*+516)
brk(any) @ ld-musl-aarch64.so.1+0x29590(__malloc_alloc_meta*+548)
munmap(any, non-NULL) @ ld-musl-aarch64.so.1+0x3e254(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x60800
clone(SIGCHLD, 0, any, any, any) @ ld-musl-aarch64.so.1+0x482fc(_Fork+48)
clone(SIGCHLD|CLONE_VM|CLONE_VFORK, any, any, any, any) @ ld-musl-aarch64.so.1+0x60828
mmap(0, NULL-0x7ffffffffffffffe, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e074(mmap+64)
mmap(0, NULL-0x7ffffffffffffffe, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e074(mmap+64)
mmap(any, any, any, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, any, any) @ ld-musl-aarch64.so.1+0x3e074(mmap+64)
mprotect(any, any, PROT_READ|PROT_WRITE) @ ld-musl-aarch64.so.1+0x3e124(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x6b128(reloc_all*+268)
wait4(any, any, 0, 0) @ ld-musl-aarch64.so.1+0x60868
wait4(any, any, 0, 0) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
