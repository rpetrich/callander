callander: permitted syscalls: dup(any) @ ld-musl-aarch64.so.1+0x48d28(child*+440)
dup3(any, any, 0) @ ld-musl-aarch64.so.1+0x48d88(child*+536)
dup3(any, any, 0) @ ld-musl-aarch64.so.1+0x48e7c(child*+780)
dup3(STDIN_FILENO-0xfffffffffffffffe, STDIN_FILENO-STDERR_FILENO, 0) @ ld-musl-aarch64.so.1+0x686a8(dup2+28)
fcntl(STDIN_FILENO-0xfffffffffffffffe, F_GETFD, any) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(STDIN_FILENO-0xfffffffffffffffe, F_SETFD, any u32) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(STDIN_FILENO-0xfffffffffffffffe, F_GETFL, 0) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(STDIN_FILENO-0xfffffffffffffffe, F_SETFL, 0-O_CREAT|O_EXCL|O_NOCTTY|O_TRUNC|O_APPEND|O_NONBLOCK|O_DSYNC|O_ASYNC|O_DIRECTORY|O_LARGEFILE|O_DIRECT|O_NOFOLLOW|O_NOATIME|O_CLOEXEC|__O_SYNC|O_PATH|__O_TMPFILE) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x20c20(open+136)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x45cbc(socket+132)
fcntl(any, F_SETFL, O_NONBLOCK) @ ld-musl-aarch64.so.1+0x45cd4(socket+156)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x45dc4(socketpair+208)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x45dcc(socketpair+216)
fcntl(any, F_SETFL, O_NONBLOCK) @ ld-musl-aarch64.so.1+0x45de4(socketpair+240)
fcntl(any, F_SETFL, O_NONBLOCK) @ ld-musl-aarch64.so.1+0x45dec(socketpair+248)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x48e04(child*+660)
fcntl(any, F_SETFD, 0-0xfffffffffffffffe) @ ld-musl-aarch64.so.1+0x48e20(child*+688)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x48ed8(child*+872)
fcntl(STDIN_FILENO-0x7fffffff, F_GETFD, any) @ ld-musl-aarch64.so.1+0x52960(fstatat+88)
fcntl(AT_FDCWD, F_GETFD, any) @ ld-musl-aarch64.so.1+0x52960(fstatat+88)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x52e78(fdopen+120)
fcntl(any, F_GETFL, any) @ ld-musl-aarch64.so.1+0x52f60(fdopen+352)
fcntl(any, F_SETFL, any) @ ld-musl-aarch64.so.1+0x52f78(fdopen+376)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x54770(fopen+116)
fcntl(STDIN_FILENO-0xfffffffffffffffe, F_GETFD, any) @ ld-musl-aarch64.so.1+0x686dc(dup2+80)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x68fb4(pipe2+176)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x68fbc(pipe2+184)
ioctl(STDIN_FILENO-0xfffffffffffffffe, any, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, SIOCGIFFLAGS-SIOCSIFFLAGS, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, SIOCGIFMTU, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, SIOCSIFHWADDR, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, SIOCGIFHWADDR, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, SIOCGIFINDEX, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, SIOCGIFVLAN, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x52eb8(fdopen+184)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x53598(__stdout_write*+56)
ioctl(STDOUT_FILENO-STDERR_FILENO, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x68d6c(isatty+24)
flock(STDIN_FILENO-0xfffffffffffffffe, LOCK_EX|LOCK_NB) @ ld-musl-aarch64.so.1+0x2459c(flock+20)
flock(any, LOCK_EX) @ ld-musl-aarch64.so.1+0x2459c(flock+20)
flock(any, LOCK_UN) @ ld-musl-aarch64.so.1+0x2459c(flock+20)
mkdirat(AT_FDCWD, "/var/lib/dhcpcd", 0750) @ ld-musl-aarch64.so.1+0x52b08(mkdir+24)
mkdirat(AT_FDCWD, "/run/dhcpcd", 0755) @ ld-musl-aarch64.so.1+0x52b08(mkdir+24)
unlinkat(AT_FDCWD, any, 0) @ ld-musl-aarch64.so.1+0x695e4(unlink+24)
ftruncate(any, 0) @ ld-musl-aarch64.so.1+0x68b00(ftruncate+16)
chdir(any) @ ld-musl-aarch64.so.1+0x48ea4(child*+820)
chdir("/") @ ld-musl-aarch64.so.1+0x685c8(chdir+12)
fchdir(any) @ ld-musl-aarch64.so.1+0x48de4(child*+628)
chroot(any) @ ld-musl-aarch64.so.1+0x24208(chroot+12)
fchmodat(AT_FDCWD, any, 0660) @ ld-musl-aarch64.so.1+0x526c8(chmod+24)
fchmodat(AT_FDCWD, any, 0666) @ ld-musl-aarch64.so.1+0x526c8(chmod+24)
fchmodat(AT_FDCWD, "/var/lib/dhcpcd/rdm_monotonic", 0400) @ ld-musl-aarch64.so.1+0x526c8(chmod+24)
fchownat(AT_FDCWD, any, any u32, any u32, 0) @ ld-musl-aarch64.so.1+0x685fc(chown+36)
openat(AT_FDCWD, "/dev/null", O_RDWR|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x1ffe4(__init_libc*+424)
openat(AT_FDCWD, any, any, any) @ ld-musl-aarch64.so.1+0x48e4c(child*+732)
openat(AT_FDCWD, non-NULL, O_WRONLY|O_CREAT|O_APPEND|O_CLOEXEC, 0666) @ ld-musl-aarch64.so.1+0x5474c(fopen+80)
openat(AT_FDCWD, "/var/lib/dhcpcd/rdm_monotonic", O_RDWR, any) @ ld-musl-aarch64.so.1+0x5474c(fopen+80)
openat(AT_FDCWD, "/var/lib/dhcpcd/rdm_monotonic", O_WRONLY|O_CREAT|O_TRUNC, 0666) @ ld-musl-aarch64.so.1+0x5474c(fopen+80)
openat(AT_FDCWD, "/dev/null", O_RDONLY|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x5474c(fopen+80)
openat(AT_FDCWD, "/etc/group", O_RDONLY|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x5474c(fopen+80)
openat(AT_FDCWD, "/etc/passwd", O_RDONLY|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x5474c(fopen+80)
openat(AT_FDCWD, any, O_RDONLY|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x60868
openat(AT_FDCWD, any, O_WRONLY|O_CREAT|O_TRUNC|O_NOFOLLOW, any u32) @ ld-musl-aarch64.so.1+0x60868
openat(AT_FDCWD, any, O_RDONLY|O_NONBLOCK|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x60868
openat(AT_FDCWD, any, O_WRONLY|O_CREAT|O_NONBLOCK|O_NOFOLLOW|O_CLOEXEC, 0644) @ ld-musl-aarch64.so.1+0x60868
openat(AT_FDCWD, "/dev/null", O_WRONLY|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x60868
openat(AT_FDCWD, "/var/run/netns", O_RDONLY|O_DIRECTORY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x60868
openat(AT_FDCWD, "/dev/console", O_WRONLY|O_NOCTTY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x60868
openat(AT_FDCWD, any, O_RDONLY|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
openat(AT_FDCWD, any, O_WRONLY|O_CREAT|O_TRUNC|O_NOFOLLOW, any u32) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
openat(AT_FDCWD, any, O_RDONLY|O_NONBLOCK|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
openat(AT_FDCWD, any, O_WRONLY|O_CREAT|O_NONBLOCK|O_NOFOLLOW|O_CLOEXEC, 0644) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
openat(AT_FDCWD, "/dev/null", O_WRONLY|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
openat(AT_FDCWD, "/var/run/netns", O_RDONLY|O_DIRECTORY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
openat(AT_FDCWD, "/dev/console", O_WRONLY|O_NOCTTY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
openat(AT_FDCWD, any, O_RDONLY|O_NONBLOCK|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x64fa8(__map_file*+36)
close(any) @ ld-musl-aarch64.so.1+0x1f980(opendir+72)
close(any) @ ld-musl-aarch64.so.1+0x43d60(__rtnetlink_enumerate*+104)
close(any) @ ld-musl-aarch64.so.1+0x48d40(child*+464)
close(any) @ ld-musl-aarch64.so.1+0x48da4(child*+564)
close(any) @ ld-musl-aarch64.so.1+0x48e94(child*+804)
close(any) @ ld-musl-aarch64.so.1+0x53294(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x547c0(fopen+196)
close(any) @ ld-musl-aarch64.so.1+0x60868
close(any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
close(any) @ ld-musl-aarch64.so.1+0x64fd4(__map_file*+80)
close(any) @ ld-musl-aarch64.so.1+0x65014(__map_file*+144)
pipe2(any, 0) @ ld-musl-aarch64.so.1+0x68ef4(pipe+16)
pipe2(any, O_CLOEXEC) @ ld-musl-aarch64.so.1+0x68f24(pipe2+32)
getdents64(any, any, 2048) @ ld-musl-aarch64.so.1+0x1f9e0(readdir+80)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x68e18(lseek+12)
read(any, any, any) @ ld-musl-aarch64.so.1+0x5340c(__stdio_read*+144)
read(any, any, any) @ ld-musl-aarch64.so.1+0x60868
read(any, any, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
write(any, any, 4) @ ld-musl-aarch64.so.1+0x48d04(child*+404)
write(any, any, any) @ ld-musl-aarch64.so.1+0x60868
write(any, any, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
readv(any, any, 2) @ ld-musl-aarch64.so.1+0x533c8(__stdio_read*+76)
readv(any, any, 2) @ ld-musl-aarch64.so.1+0x60868
readv(any, any, 2) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
writev(any, any, any) @ ld-musl-aarch64.so.1+0x53520(__stdio_write*+184)
writev(any, any, any) @ ld-musl-aarch64.so.1+0x60868
writev(any, any, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
ppoll(any, 3, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x1ff94(__init_libc*+344)
ppoll(any, any, any, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x60868
ppoll(any, any, any, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
readlinkat(AT_FDCWD, "/proc/self/exe", non-NULL, 0x1001) @ ld-musl-aarch64.so.1+0x690f8(readlink+40)
newfstatat(STDIN_FILENO-0x7fffffff, "", any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x52978(fstatat+112)
newfstatat(AT_FDCWD, any, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x52978(fstatat+112)
newfstatat(AT_FDCWD, any, any, 0) @ ld-musl-aarch64.so.1+0x529b0(fstatat+168)
newfstatat(0x80000000--1 as u32, "", any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x529cc(fstatat+196)
newfstatat(AT_FDCWD, any, any, 0) @ ld-musl-aarch64.so.1+0x529cc(fstatat+196)
fstat(STDIN_FILENO-0x7fffffff, any) @ ld-musl-aarch64.so.1+0x52944(fstatat+60)
fstat(AT_FDCWD, any) @ ld-musl-aarch64.so.1+0x52944(fstatat+60)
exit(0) @ ld-musl-aarch64.so.1+0x60808
exit(0xfffffffffffff001-0xffffffffffffffff) @ ld-musl-aarch64.so.1+0x60808
exit(any) @ ld-musl-aarch64.so.1+0x60840
exit(0) @ ld-musl-aarch64.so.1+0x623c0(pthread_exit+416)
exit_group(any) @ ld-musl-aarch64.so.1+0x206d8(_Exit+12)
set_tid_address(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x4826c(__post_Fork*+44)
futex(any, FUTEX_WAIT, any, 0, 0, 0)
futex(any, FUTEX_WAIT, non-NULL, 0, any, any u32)
futex(any, FUTEX_WAKE, 0-INT_MAX, any, any u32, INT_MAX)
futex(any, FUTEX_WAKE, 1, any, any, any)
futex(any, FUTEX_REQUEUE, 0, 1, ld-musl-aarch64.so.1+0xc2ab4, any)
futex(any, FUTEX_LOCK_PI-FUTEX_UNLOCK_PI, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, 0, 0)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, any, any u32)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 0-INT_MAX, any, any u32, INT_MAX)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 1, any, any, any)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, ld-musl-aarch64.so.1+0xc2ab4, any)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG-FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(ld-musl-aarch64.so.1+0xc1e90(exit_sem*), FUTEX_WAKE, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1e90(exit_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1e90(exit_sem*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1e90(exit_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1eb0(caller_sem*), FUTEX_WAKE, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1eb0(caller_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1eb0(caller_sem*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1eb0(caller_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1ed0(target_sem*), FUTEX_WAKE, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1ed0(target_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1ed0(target_sem*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1ed0(target_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAIT, non-NULL, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2a88, FUTEX_WAKE, INT_MAX, ld-musl-aarch64.so.1+0xc2a88, any, any)
futex(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), FUTEX_WAIT, non-NULL, 0, ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), ld-musl-aarch64.so.1+0xc2ed8(tl_lock_waiters*))
futex(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), ld-musl-aarch64.so.1+0xc2ed8(tl_lock_waiters*))
set_robust_list(0, sizeof(struct robust_list_head)) @ ld-musl-aarch64.so.1+0x623ec(pthread_exit+460)
set_robust_list(any, sizeof(struct robust_list_head)) @ ld-musl-aarch64.so.1+0x634f4(__pthread_mutex_trylock_owner*+92)
clock_gettime(CLOCK_REALTIME-CLOCK_MONOTONIC, any) @ ld-musl-aarch64.so.1+0x66774(clock_gettime+60)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
restart_syscall()
kill(0-LONG_MAX, SIGKILL) @ ld-musl-aarch64.so.1+0x24ca8(do_setgroups*+92)
kill(any, SIGHUP) @ ld-musl-aarch64.so.1+0x51bd4(kill+20)
kill(any, SIGUSR1) @ ld-musl-aarch64.so.1+0x51bd4(kill+20)
kill(any, SIGALRM-SIGTERM) @ ld-musl-aarch64.so.1+0x51bd4(kill+20)
kill(0-LONG_MAX, SIGKILL) @ ld-musl-aarch64.so.1+0x69338(do_setxid*+92)
tkill(any, SIGSETXID) @ ld-musl-aarch64.so.1+0x61398(cancel_handler*+132)
tkill(non-NULL, SIGSETXID) @ ld-musl-aarch64.so.1+0x6311c(pthread_kill+68)
tkill(any, SIGSYNCCALL) @ ld-musl-aarch64.so.1+0x64cb4(__synccall*+380)
rt_sigaction(any, any, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51e00(__libc_sigaction*+140)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa1060(all_mask*), any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51b5c(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa1058(app_mask*), any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51b7c(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51b98(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51ecc(__libc_sigaction*+344)
rt_sigprocmask(SIG_BLOCK, any, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x64250(pthread_sigmask+24)
rt_sigprocmask(SIG_SETMASK, any, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x64250(pthread_sigmask+24)
rt_sigreturn(any) @ ld-musl-aarch64.so.1+0x51b18
setgid(0-LONG_MAX) @ ld-musl-aarch64.so.1+0x48cbc(child*+332)
setgid(0-LONG_MAX) @ ld-musl-aarch64.so.1+0x692fc(do_setxid*+32)
setuid(0-LONG_MAX) @ ld-musl-aarch64.so.1+0x48cd4(child*+356)
setuid(0-LONG_MAX) @ ld-musl-aarch64.so.1+0x692fc(do_setxid*+32)
setpgid(0, any) @ ld-musl-aarch64.so.1+0x48c9c(child*+300)
setsid() @ ld-musl-aarch64.so.1+0x48c7c(child*+268)
setsid() @ ld-musl-aarch64.so.1+0x692b8(setsid+12)
setgroups(any, any) @ ld-musl-aarch64.so.1+0x24c6c(do_setgroups*+32)
setgroups(any, any) @ ld-musl-aarch64.so.1+0x692fc(do_setxid*+32)
uname(any) @ ld-musl-aarch64.so.1+0x3da70(uname+12)
getrlimit(RLIMIT_NOFILE, any) @ ld-musl-aarch64.so.1+0x3c220(getrlimit+108)
getrlimit(0x64, any) @ ld-musl-aarch64.so.1+0x3c220(getrlimit+108)
setrlimit(any, any) @ ld-musl-aarch64.so.1+0x3d434(do_setrlimit*+24)
prctl(PR_SET_SECCOMP, SECCOMP_GET_ACTION_AVAIL, /sbin/dhcpcd+0x608d0, 0, 0) @ ld-musl-aarch64.so.1+0x249bc(prctl+48)
prctl(PR_SET_NO_NEW_PRIVS, 1, 0, 0, 0) @ ld-musl-aarch64.so.1+0x249bc(prctl+48)
gettimeofday(any, 0) @ ld-musl-aarch64.so.1+0x66794(clock_gettime+92)
gettimeofday(non-NULL, any) @ [vdso]+0x658(__kernel_gettimeofday+256)
getpid() @ ld-musl-aarch64.so.1+0x24c9c(do_setgroups*+80)
getpid() @ ld-musl-aarch64.so.1+0x68d14(getpid+4)
getpid() @ ld-musl-aarch64.so.1+0x6932c(do_setxid*+80)
getuid() @ ld-musl-aarch64.so.1+0x48ccc(child*+348)
geteuid() @ ld-musl-aarch64.so.1+0x68bc4(geteuid+4)
getgid() @ ld-musl-aarch64.so.1+0x48cb4(child*+324)
gettid() @ ld-musl-aarch64.so.1+0x64c0c(__synccall*+212)
socket(AF_UNIX, SOCK_STREAM|SOCK_NONBLOCK|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x45c60(socket+40)
socket(AF_UNIX-AF_INET, SOCK_STREAM|SOCK_CLOEXEC-SOCK_DGRAM|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x45c60(socket+40)
socket(AF_INET, SOCK_DGRAM, 0) @ ld-musl-aarch64.so.1+0x45c60(socket+40)
socket(AF_INET, SOCK_DGRAM|SOCK_NONBLOCK|SOCK_CLOEXEC-SOCK_RAW|SOCK_NONBLOCK|SOCK_CLOEXEC, 17) @ ld-musl-aarch64.so.1+0x45c60(socket+40)
socket(AF_INET6, SOCK_DGRAM, 0) @ ld-musl-aarch64.so.1+0x45c60(socket+40)
socket(AF_INET6, SOCK_DGRAM|SOCK_NONBLOCK|SOCK_CLOEXEC-SOCK_RAW|SOCK_NONBLOCK|SOCK_CLOEXEC, 17) @ ld-musl-aarch64.so.1+0x45c60(socket+40)
socket(AF_INET6, SOCK_RAW|SOCK_NONBLOCK|SOCK_CLOEXEC, 58) @ ld-musl-aarch64.so.1+0x45c60(socket+40)
socket(AF_NETLINK, SOCK_RAW|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x45c60(socket+40)
socket(AF_NETLINK, SOCK_RAW|SOCK_CLOEXEC, 16) @ ld-musl-aarch64.so.1+0x45c60(socket+40)
socket(AF_NETLINK-AF_PACKET, SOCK_RAW|SOCK_NONBLOCK|SOCK_CLOEXEC, any u16) @ ld-musl-aarch64.so.1+0x45c60(socket+40)
socket(AF_UNIX-AF_INET, 0-SOCK_DGRAM|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x45c98(socket+96)
socket(AF_INET, 0-SOCK_RAW|SOCK_NONBLOCK|SOCK_CLOEXEC, 17) @ ld-musl-aarch64.so.1+0x45c98(socket+96)
socket(AF_INET6, 0-SOCK_RAW|SOCK_NONBLOCK|SOCK_CLOEXEC, 17) @ ld-musl-aarch64.so.1+0x45c98(socket+96)
socket(AF_INET6, SOCK_RAW, 58) @ ld-musl-aarch64.so.1+0x45c98(socket+96)
socket(AF_NETLINK-AF_PACKET, SOCK_RAW, any u16) @ ld-musl-aarch64.so.1+0x45c98(socket+96)
socketpair(AF_UNIX, SOCK_STREAM|SOCK_NONBLOCK|SOCK_CLOEXEC, 0, any) @ ld-musl-aarch64.so.1+0x45d30(socketpair+60)
socketpair(AF_UNIX, SOCK_SEQPACKET|SOCK_NONBLOCK|SOCK_CLOEXEC, 0, any) @ ld-musl-aarch64.so.1+0x45d30(socketpair+60)
socketpair(AF_UNIX, SOCK_STREAM, 0, any) @ ld-musl-aarch64.so.1+0x45da0(socketpair+172)
socketpair(AF_UNIX, SOCK_SEQPACKET, 0, any) @ ld-musl-aarch64.so.1+0x45da0(socketpair+172)
bind(STDIN_FILENO-0xfffffffffffffffe, any, any u32) @ ld-musl-aarch64.so.1+0x3f73c(bind+32)
listen(STDIN_FILENO-0xfffffffffffffffe, 16) @ ld-musl-aarch64.so.1+0x4274c(listen+36)
accept(any, any, any) @ ld-musl-aarch64.so.1+0x60868
accept(any, any, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
connect(STDIN_FILENO-0xfffffffffffffffe, any, any u32) @ ld-musl-aarch64.so.1+0x60868
connect(any, ld-musl-aarch64.so.1+0xa0e98(log_addr*), 12) @ ld-musl-aarch64.so.1+0x60868
connect(any, ld-musl-aarch64.so.1+0xa1040(addr*), 24) @ ld-musl-aarch64.so.1+0x60868
connect(STDIN_FILENO-0xfffffffffffffffe, any, any u32) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
connect(any, ld-musl-aarch64.so.1+0xa0e98(log_addr*), 12) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
connect(any, ld-musl-aarch64.so.1+0xa1040(addr*), 24) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
getsockname(STDIN_FILENO-0xfffffffffffffffe, any, any) @ ld-musl-aarch64.so.1+0x41b08(getsockname+28)
sendto(any, any, any, 0, 0, 0) @ ld-musl-aarch64.so.1+0x60868
sendto(any, any, any, 0, 0, 0) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
recvfrom(any, any, 24, MSG_PEEK, 0, 0) @ ld-musl-aarch64.so.1+0x60868
recvfrom(any, any, 0x2000, MSG_DONTWAIT, 0, 0) @ ld-musl-aarch64.so.1+0x60868
recvfrom(any, any, 24, MSG_PEEK, 0, 0) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
recvfrom(any, any, 0x2000, MSG_DONTWAIT, 0, 0) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
setsockopt(STDIN_FILENO-0xfffffffffffffffe, SOL_SOCKET, SO_REUSEADDR, any, 4) @ ld-musl-aarch64.so.1+0x45bc4(setsockopt+32)
setsockopt(STDIN_FILENO-0xfffffffffffffffe, SOL_IPV6, IPV6_CHECKSUM, any, 4) @ ld-musl-aarch64.so.1+0x45bc4(setsockopt+32)
setsockopt(STDIN_FILENO-0xfffffffffffffffe, SOL_IPV6, IPV6_MULTICAST_HOPS, any, 4) @ ld-musl-aarch64.so.1+0x45bc4(setsockopt+32)
setsockopt(STDIN_FILENO-0xfffffffffffffffe, SOL_IPV6, IPV6_RECVPKTINFO, any, 4) @ ld-musl-aarch64.so.1+0x45bc4(setsockopt+32)
setsockopt(STDIN_FILENO-0xfffffffffffffffe, SOL_IPV6, IPV6_RECVHOPLIMIT, any, 4) @ ld-musl-aarch64.so.1+0x45bc4(setsockopt+32)
setsockopt(STDIN_FILENO-0xfffffffffffffffe, SOL_ICMPV6, ICMPV6_FILTER, any, 32) @ ld-musl-aarch64.so.1+0x45bc4(setsockopt+32)
setsockopt(STDIN_FILENO-0xfffffffffffffffe, SOL_NETLINK, NETLINK_BROADCAST_ERROR, any, 4) @ ld-musl-aarch64.so.1+0x45bc4(setsockopt+32)
setsockopt(any, SOL_IP-SOL_SOCKET, SO_BROADCAST-SO_RCVBUF, any, 4) @ ld-musl-aarch64.so.1+0x45bc4(setsockopt+32)
setsockopt(any, SOL_SOCKET, SO_ATTACH_FILTER, any, 16) @ ld-musl-aarch64.so.1+0x45bc4(setsockopt+32)
setsockopt(any, SOL_SOCKET, SO_LOCK_FILTER, any, 4) @ ld-musl-aarch64.so.1+0x45bc4(setsockopt+32)
setsockopt(any, SOL_PACKET, SO_RCVBUF, any, 4) @ ld-musl-aarch64.so.1+0x45bc4(setsockopt+32)
getsockopt(any, SOL_SOCKET, SO_SNDBUF-SO_RCVBUF, any, any) @ ld-musl-aarch64.so.1+0x41b34(getsockopt+28)
shutdown(any, SHUT_WR-SHUT_RDWR) @ ld-musl-aarch64.so.1+0x45bfc(shutdown+36)
sendmsg(any, any, 0) @ ld-musl-aarch64.so.1+0x60868
sendmsg(any, any, MSG_NOSIGNAL) @ ld-musl-aarch64.so.1+0x60868
sendmsg(any, any, 0) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
sendmsg(any, any, MSG_NOSIGNAL) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
recvmsg(any, any, any) @ ld-musl-aarch64.so.1+0x60868
recvmsg(any, any, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
brk(any) @ ld-musl-aarch64.so.1+0x294b8(__malloc_alloc_meta*+332)
brk(0) @ ld-musl-aarch64.so.1+0x29570(__malloc_alloc_meta*+516)
brk(any) @ ld-musl-aarch64.so.1+0x29590(__malloc_alloc_meta*+548)
munmap(any, any) @ ld-musl-aarch64.so.1+0x3e254(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x60800
mremap(any, NULL-0xfffffffffffff000, NULL-0x7ffffffffffffffe, MREMAP_MAYMOVE, 0) @ ld-musl-aarch64.so.1+0x3e164(mremap+48)
clone(SIGCHLD, 0, any, any, any) @ ld-musl-aarch64.so.1+0x482fc(_Fork+48)
clone(SIGCHLD|CLONE_VM|CLONE_VFORK, any, any, any, any) @ ld-musl-aarch64.so.1+0x60828
mmap(0, NULL-0x7ffffffffffffffe, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e074(mmap+64)
mmap(0, NULL-0x7ffffffffffffffe, PROT_READ, MAP_SHARED, any, 0) @ ld-musl-aarch64.so.1+0x3e074(mmap+64)
mmap(0, NULL-0x7ffffffffffffffe, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e074(mmap+64)
mmap(any, any, any, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, any, any) @ ld-musl-aarch64.so.1+0x3e074(mmap+64)
mprotect(any, any, PROT_READ|PROT_WRITE) @ ld-musl-aarch64.so.1+0x3e124(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x6b128(reloc_all*+268)
wait4(any, any, 0-WNOHANG, 0) @ ld-musl-aarch64.so.1+0x60868
wait4(any, any, 0-WNOHANG, 0) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
prlimit64(0, RLIMIT_NOFILE, 0, any) @ ld-musl-aarch64.so.1+0x3c1e0(getrlimit+44)
prlimit64(0, 0x64, 0, any) @ ld-musl-aarch64.so.1+0x3c1e0(getrlimit+44)
prlimit64(0, RLIMIT_FSIZE, any, 0) @ ld-musl-aarch64.so.1+0x3d468(setrlimit+36)
prlimit64(0, RLIMIT_NPROC, any, 0) @ ld-musl-aarch64.so.1+0x3d468(setrlimit+36)
close_range(3, -1 as u32, 0) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
