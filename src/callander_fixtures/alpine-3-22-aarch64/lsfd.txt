callander: permitted syscalls: getxattr(any, "system.sockprotoname", any, 255) @ ld-musl-aarch64.so.1+0x25098(getxattr+4)
dup(any) @ ld-musl-aarch64.so.1+0x6867c(dup+16)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_SETFD, any u32) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_GETFL, any) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_DUPFD_CLOEXEC, 3) @ ld-musl-aarch64.so.1+0x20b1c(fcntl+244)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x20b3c(fcntl+276)
fcntl(any, F_DUPFD_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x20b54(fcntl+300)
fcntl(any, F_DUPFD, 3) @ ld-musl-aarch64.so.1+0x20b88(fcntl+352)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x20c20(open+136)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x45cbc(socket+132)
fcntl(any, F_SETFL, O_NONBLOCK) @ ld-musl-aarch64.so.1+0x45cd4(socket+156)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x52960(fstatat+88)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x52e78(fdopen+120)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x54770(fopen+116)
ioctl(any, SIOCGIFINDEX, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, SIOCGSKNS, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, NS_GET_NSTYPE, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(STDOUT_FILENO, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x52eb8(fdopen+184)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x53598(__stdout_write*+56)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x68d6c(isatty+24)
openat(AT_FDCWD, "/dev/null", O_RDWR|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x1ffe4(__init_libc*+424)
openat(AT_FDCWD, "/proc/tty/drivers", O_RDONLY, any) @ ld-musl-aarch64.so.1+0x5474c(fopen+80)
openat(AT_FDCWD, "/proc/partitions", O_RDONLY, any) @ ld-musl-aarch64.so.1+0x5474c(fopen+80)
openat(AT_FDCWD, "/proc/net/netlink", O_RDONLY, any) @ ld-musl-aarch64.so.1+0x5474c(fopen+80)
openat(AT_FDCWD, "/proc/net/packet", O_RDONLY, any) @ ld-musl-aarch64.so.1+0x5474c(fopen+80)
openat(AT_FDCWD, "/proc/net/unix", O_RDONLY, any) @ ld-musl-aarch64.so.1+0x5474c(fopen+80)
openat(AT_FDCWD, "/proc/net/tcp", O_RDONLY, any) @ ld-musl-aarch64.so.1+0x5474c(fopen+80)
openat(AT_FDCWD, "/proc/net/udp", O_RDONLY, any) @ ld-musl-aarch64.so.1+0x5474c(fopen+80)
openat(AT_FDCWD, "/proc/net/udplite", O_RDONLY, any) @ ld-musl-aarch64.so.1+0x5474c(fopen+80)
openat(AT_FDCWD, "/proc/net/raw", O_RDONLY, any) @ ld-musl-aarch64.so.1+0x5474c(fopen+80)
openat(AT_FDCWD, "/proc/net/tcp6", O_RDONLY, any) @ ld-musl-aarch64.so.1+0x5474c(fopen+80)
openat(AT_FDCWD, "/proc/net/udp6", O_RDONLY, any) @ ld-musl-aarch64.so.1+0x5474c(fopen+80)
openat(AT_FDCWD, "/proc/net/udplite6", O_RDONLY, any) @ ld-musl-aarch64.so.1+0x5474c(fopen+80)
openat(AT_FDCWD, "/proc/net/raw6", O_RDONLY, any) @ ld-musl-aarch64.so.1+0x5474c(fopen+80)
openat(AT_FDCWD, "/proc/net/icmp", O_RDONLY, any) @ ld-musl-aarch64.so.1+0x5474c(fopen+80)
openat(AT_FDCWD, "/proc/net/icmp6", O_RDONLY, any) @ ld-musl-aarch64.so.1+0x5474c(fopen+80)
openat(AT_FDCWD, "/proc/devices", O_RDONLY, any) @ ld-musl-aarch64.so.1+0x5474c(fopen+80)
openat(AT_FDCWD, "/proc/misc", O_RDONLY, any) @ ld-musl-aarch64.so.1+0x5474c(fopen+80)
openat(AT_FDCWD, "/dev/null", O_RDONLY|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x5474c(fopen+80)
openat(AT_FDCWD, "/etc/passwd", O_RDONLY|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x5474c(fopen+80)
openat(any, any, O_RDONLY|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x60868
openat(any, any, O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x60868
openat(AT_FDCWD, "/proc/self/fd", O_RDONLY|O_DIRECTORY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x60868
openat(AT_FDCWD, "/proc", O_RDONLY|O_DIRECTORY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x60868
openat(any, any, O_RDONLY|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
openat(any, any, O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
openat(AT_FDCWD, "/proc/self/fd", O_RDONLY|O_DIRECTORY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
openat(AT_FDCWD, "/proc", O_RDONLY|O_DIRECTORY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
openat(AT_FDCWD, any, O_RDONLY|O_NONBLOCK|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x64fa8(__map_file*+36)
close(any) @ ld-musl-aarch64.so.1+0x1f980(opendir+72)
close(STDIN_FILENO-0xffffffffffffffe9) @ ld-musl-aarch64.so.1+0x20b6c(fcntl+324)
close(any) @ ld-musl-aarch64.so.1+0x3e414(mq_close+16)
close(any) @ ld-musl-aarch64.so.1+0x41ff0(if_nametoindex+92)
close(any) @ ld-musl-aarch64.so.1+0x43d60(__rtnetlink_enumerate*+104)
close(any) @ ld-musl-aarch64.so.1+0x53294(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x547c0(fopen+196)
close(any) @ ld-musl-aarch64.so.1+0x60868
close(any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
close(any) @ ld-musl-aarch64.so.1+0x64fd4(__map_file*+80)
close(any) @ ld-musl-aarch64.so.1+0x65014(__map_file*+144)
getdents64(any, any, 2048) @ ld-musl-aarch64.so.1+0x1f9e0(readdir+80)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x68e18(lseek+12)
read(any, any, any) @ ld-musl-aarch64.so.1+0x5340c(__stdio_read*+144)
read(any, any, non-NULL) @ ld-musl-aarch64.so.1+0x60868
read(any, any, non-NULL) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
readv(any, any, 2) @ ld-musl-aarch64.so.1+0x533c8(__stdio_read*+76)
writev(any, any, any) @ ld-musl-aarch64.so.1+0x53520(__stdio_write*+184)
ppoll(any, 3, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x1ff94(__init_libc*+344)
readlinkat(AT_FDCWD, non-NULL, any, 4095) @ ld-musl-aarch64.so.1+0x690f8(readlink+40)
readlinkat(any, any, any, 4095) @ ld-musl-aarch64.so.1+0x69140(readlinkat+24)
newfstatat(any, any, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x52978(fstatat+112)
newfstatat(AT_FDCWD, any, any, 0) @ ld-musl-aarch64.so.1+0x529b0(fstatat+168)
newfstatat(any, any, any, 0) @ ld-musl-aarch64.so.1+0x529cc(fstatat+196)
newfstatat(any, any, any, AT_SYMLINK_NOFOLLOW) @ ld-musl-aarch64.so.1+0x529cc(fstatat+196)
newfstatat(0x80000000--1 as u32, "", any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x529cc(fstatat+196)
fstat(any, any) @ ld-musl-aarch64.so.1+0x52944(fstatat+60)
exit(0) @ ld-musl-aarch64.so.1+0x60808
exit(0xfffffffffffff001-0xffffffffffffffff) @ ld-musl-aarch64.so.1+0x60808
exit(0) @ ld-musl-aarch64.so.1+0x623c0(pthread_exit+416)
exit_group(any) @ ld-musl-aarch64.so.1+0x206d8(_Exit+12)
futex(any, FUTEX_WAIT, any, 0, 0, 0)
futex(any, FUTEX_WAIT, non-NULL, 0, any, any u32)
futex(any, FUTEX_WAKE, 0-INT_MAX, any, any u32, INT_MAX)
futex(any, FUTEX_WAKE, 1, any, any, any)
futex(any, FUTEX_REQUEUE, 0, 1, ld-musl-aarch64.so.1+0xc2ab4, any)
futex(any, FUTEX_LOCK_PI-FUTEX_UNLOCK_PI, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, 0, 0)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, any, any u32)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 0-INT_MAX, any, any u32, INT_MAX)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 1, any, any, any)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, ld-musl-aarch64.so.1+0xc2ab4, any)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG-FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAIT, non-NULL, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2a88, FUTEX_WAKE, INT_MAX, ld-musl-aarch64.so.1+0xc2a88, any, any)
futex(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), FUTEX_WAIT, non-NULL, 0, ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), ld-musl-aarch64.so.1+0xc2ed8(tl_lock_waiters*))
futex(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), ld-musl-aarch64.so.1+0xc2ed8(tl_lock_waiters*))
set_robust_list(0, sizeof(struct robust_list_head)) @ ld-musl-aarch64.so.1+0x623ec(pthread_exit+460)
set_robust_list(any, sizeof(struct robust_list_head)) @ ld-musl-aarch64.so.1+0x634f4(__pthread_mutex_trylock_owner*+92)
nanosleep(any, 0) @ ld-musl-aarch64.so.1+0x60868
nanosleep(any, 0) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
restart_syscall()
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x20740(abort+84)
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x51d20(raise+44)
tkill(any, SIGSETXID) @ ld-musl-aarch64.so.1+0x61398(cancel_handler*+132)
tkill(non-NULL, SIGSETXID) @ ld-musl-aarch64.so.1+0x6311c(pthread_kill+68)
rt_sigaction(SIGABRT, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x2072c(abort+64)
rt_sigaction(SIGSETXID, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51e00(__libc_sigaction*+140)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x20758(abort+108)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa1060(all_mask*), any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51b5c(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa1058(app_mask*), any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51b7c(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51b98(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51ecc(__libc_sigaction*+344)
rt_sigprocmask(SIG_BLOCK, any, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x64250(pthread_sigmask+24)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x64250(pthread_sigmask+24)
rt_sigreturn(any) @ ld-musl-aarch64.so.1+0x51b18
getrlimit(RLIMIT_NOFILE, any) @ ld-musl-aarch64.so.1+0x3c220(getrlimit+108)
gettimeofday(non-NULL, any) @ [vdso]+0x658(__kernel_gettimeofday+256)
getpid() @ ld-musl-aarch64.so.1+0x68d14(getpid+4)
getuid() @ ld-musl-aarch64.so.1+0x68d4c(getuid+4)
geteuid() @ ld-musl-aarch64.so.1+0x68bc4(geteuid+4)
getgid() @ ld-musl-aarch64.so.1+0x68bd0(getgid+4)
getegid() @ ld-musl-aarch64.so.1+0x68bb8(getegid+4)
mq_open(any, O_RDONLY|O_CREAT|O_EXCL, 0600, any) @ ld-musl-aarch64.so.1+0x3e6e4(mq_open+44)
mq_unlink(any) @ ld-musl-aarch64.so.1+0x3e7d0(mq_unlink+16)
shmget(0, any, 0600) @ ld-musl-aarch64.so.1+0x23500(shmget+28)
shmctl(NULL-0xfffffffffffffffe, IPC_RMID, 0) @ ld-musl-aarch64.so.1+0x234b4(shmctl+20)
shmat(NULL-0xfffffffffffffffe, 0, SHM_NORESERVE) @ ld-musl-aarch64.so.1+0x23498(shmat+12)
shmdt(NULL-0xfffffffffffffffe) @ ld-musl-aarch64.so.1+0x234d4(shmdt+12)
socket(AF_UNIX, SOCK_STREAM|SOCK_CLOEXEC-SOCK_DGRAM|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x45c60(socket+40)
socket(AF_NETLINK, SOCK_DGRAM, 4) @ ld-musl-aarch64.so.1+0x45c60(socket+40)
socket(AF_NETLINK, SOCK_RAW|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x45c60(socket+40)
socket(AF_UNIX, 0-SOCK_DGRAM|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x45c98(socket+96)
socket(AF_NETLINK, SOCK_RAW, 0) @ ld-musl-aarch64.so.1+0x45c98(socket+96)
connect(any, ld-musl-aarch64.so.1+0xa1040(addr*), 24) @ ld-musl-aarch64.so.1+0x60868
connect(any, ld-musl-aarch64.so.1+0xa1040(addr*), 24) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
sendto(any, any, 20, 0, 0, 0) @ ld-musl-aarch64.so.1+0x60868
sendto(any, any, 20, 0, 0, 0) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
recvfrom(any, any, 0x2000, 0, 0, 0) @ ld-musl-aarch64.so.1+0x60868
recvfrom(any, any, 0x2000, MSG_DONTWAIT, 0, 0) @ ld-musl-aarch64.so.1+0x60868
recvfrom(any, any, 0x2000, 0, 0, 0) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
recvfrom(any, any, 0x2000, MSG_DONTWAIT, 0, 0) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
sendmsg(any, any, 0) @ ld-musl-aarch64.so.1+0x60868
sendmsg(any, any, MSG_NOSIGNAL) @ ld-musl-aarch64.so.1+0x60868
sendmsg(any, any, 0) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
sendmsg(any, any, MSG_NOSIGNAL) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
brk(any) @ ld-musl-aarch64.so.1+0x294b8(__malloc_alloc_meta*+332)
brk(0) @ ld-musl-aarch64.so.1+0x29570(__malloc_alloc_meta*+516)
brk(any) @ ld-musl-aarch64.so.1+0x29590(__malloc_alloc_meta*+548)
munmap(any, non-NULL) @ ld-musl-aarch64.so.1+0x3e254(munmap+36)
munmap(non-NULL, any) @ ld-musl-aarch64.so.1+0x3e254(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x60800
mremap(any, NULL-0xfffffffffffff000, NULL-0x7ffffffffffffffe, MREMAP_MAYMOVE, 0) @ ld-musl-aarch64.so.1+0x3e164(mremap+48)
mmap(0, NULL-0x7ffffffffffffffe, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e074(mmap+64)
mmap(0, NULL-0x7ffffffffffffffe, PROT_READ, MAP_SHARED, any, 0) @ ld-musl-aarch64.so.1+0x3e074(mmap+64)
mmap(0, NULL-0x7ffffffffffffffe, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e074(mmap+64)
mmap(any, any, any, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, any, any) @ ld-musl-aarch64.so.1+0x3e074(mmap+64)
mprotect(any, any, PROT_READ|PROT_WRITE) @ ld-musl-aarch64.so.1+0x3e124(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x6b128(reloc_all*+268)
prlimit64(0, RLIMIT_NOFILE, 0, any) @ ld-musl-aarch64.so.1+0x3c1e0(getrlimit+44)
setns(any, CLONE_NEWNS) @ ld-musl-aarch64.so.1+0x24d1c(setns+20)
setns(any, CLONE_NEWNET) @ ld-musl-aarch64.so.1+0x24d1c(setns+20)
process_vm_readv(any, any, 1, any, 1, 0) @ ld-musl-aarch64.so.1+0x24a74(process_vm_readv+8)
process_vm_readv(any, any, 3, any, 3, 0) @ ld-musl-aarch64.so.1+0x24a74(process_vm_readv+8)
kcmp(any u32, any u32, 0x1-0x3, 0, 0) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
bpf(BPF_PROG_GET_FD_BY_ID-BPF_MAP_GET_FD_BY_ID, any, 152) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
bpf(BPF_OBJ_GET_INFO_BY_FD, any, 16) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
pidfd_open(any u32, 0) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
close_range(3, -1 as u32, 0) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
pidfd_getfd(any u32, any u32, 0) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
