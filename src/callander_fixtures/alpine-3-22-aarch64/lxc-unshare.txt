callander: permitted syscalls: getxattr(non-NULL, "security.capability", any, 24) @ ld-musl-aarch64.so.1+0x25098(getxattr+4)
eventfd2(0, EFD_CLOEXEC) @ ld-musl-aarch64.so.1+0x244bc(eventfd+20)
epoll_create1(EPOLL_CLOEXEC) @ ld-musl-aarch64.so.1+0x24400(epoll_create1+16)
epoll_ctl(any, 1, any, any) @ ld-musl-aarch64.so.1+0x24454(epoll_ctl+24)
epoll_ctl(any, 2, any, 0) @ ld-musl-aarch64.so.1+0x24454(epoll_ctl+24)
epoll_pwait(any, any, any u16, any, any u16) @ ld-musl-aarch64.so.1+0x60868
epoll_pwait(any, any, any u8, any, any u8) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
dup(any) @ ld-musl-aarch64.so.1+0x6867c(dup+16)
dup3(any, STDIN_FILENO-STDERR_FILENO, 0) @ ld-musl-aarch64.so.1+0x686a8(dup2+28)
dup3(any, STDERR_FILENO, O_CLOEXEC) @ ld-musl-aarch64.so.1+0x68710(dup3+28)
fcntl(any, F_DUPFD, 3) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_GETFD, 0) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_SETFD, any u32) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_GETFL, any) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_SETFL, O_NOFOLLOW-0xffffffff) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_DUPFD_CLOEXEC, 0x2-0x3) @ ld-musl-aarch64.so.1+0x20b1c(fcntl+244)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x20b3c(fcntl+276)
fcntl(any, F_DUPFD_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x20b54(fcntl+300)
fcntl(any, F_DUPFD, 0x2-0x3) @ ld-musl-aarch64.so.1+0x20b88(fcntl+352)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x20c20(open+136)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x3f710(accept4+232)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x45cbc(socket+132)
fcntl(any, F_SETFL, O_NONBLOCK) @ ld-musl-aarch64.so.1+0x45cd4(socket+156)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x45dc4(socketpair+208)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x45dcc(socketpair+216)
fcntl(STDIN_FILENO-0x7fffffff, F_GETFD, any) @ ld-musl-aarch64.so.1+0x52960(fstatat+88)
fcntl(AT_FDCWD, F_GETFD, any) @ ld-musl-aarch64.so.1+0x52960(fstatat+88)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x52e78(fdopen+120)
fcntl(any, F_GETFL, any) @ ld-musl-aarch64.so.1+0x52f60(fdopen+352)
fcntl(any, F_SETFL, O_APPEND-0xffffffffffffffff) @ ld-musl-aarch64.so.1+0x52f78(fdopen+376)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x53090(__fopen_rb_ca*+96)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x54770(fopen+116)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x686dc(dup2+80)
fcntl(any, F_GETFD, any u32) @ ld-musl-aarch64.so.1+0x68a04(fchown+68)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x68fb4(pipe2+176)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x68fbc(pipe2+184)
ioctl(STDIN_FILENO, TIOCSCTTY, 0) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, LOOP_SET_FD, any u32) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, LOOP_SET_STATUS64-LOOP_GET_STATUS64, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, LOOP_CTL_GET_FREE, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, TCGETS, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, TCSETSF, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, TIOCGWINSZ-TIOCSWINSZ, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, SIOCGIFNAME, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, SIOCSIFHWADDR, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, SIOCGIFHWADDR, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, SIOCGIFINDEX, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, SIOCBRADDIF, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, TIOCSPTLCK, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, SECCOMP_IOCTL_NOTIF_ID_VALID, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, FS_IOC_SETFLAGS, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, BTRFS_IOC_SUBVOL_CREATE-BTRFS_IOC_SNAP_DESTROY, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, BTRFS_IOC_SNAP_CREATE_V2, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, TIOCGPTN, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, BLKGETSIZE64, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, SECCOMP_IOCTL_NOTIF_ID_VALID_WRONG_DIR, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, FS_IOC_GETFLAGS, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, BTRFS_IOC_SPACE_INFO, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, SECCOMP_IOCTL_NOTIF_SEND, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, SECCOMP_IOCTL_NOTIF_RECV, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, BTRFS_IOC_TREE_SEARCH-BTRFS_IOC_INO_LOOKUP, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x52eb8(fdopen+184)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x53598(__stdout_write*+56)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x68d6c(isatty+24)
mkdirat(AT_FDCWD, any, 0700) @ ld-musl-aarch64.so.1+0x52b08(mkdir+24)
mkdirat(AT_FDCWD, any, 0755) @ ld-musl-aarch64.so.1+0x52b08(mkdir+24)
mkdirat(AT_FDCWD, "/dev/shm", 0770) @ ld-musl-aarch64.so.1+0x52b08(mkdir+24)
mkdirat(AT_FDCWD, "/dev/mqueue", 0660) @ ld-musl-aarch64.so.1+0x52b08(mkdir+24)
unlinkat(AT_FDCWD, any, AT_REMOVEDIR) @ ld-musl-aarch64.so.1+0x691d8(rmdir+24)
unlinkat(AT_FDCWD, any, 0) @ ld-musl-aarch64.so.1+0x695e4(unlink+24)
renameat(AT_FDCWD, any, AT_FDCWD, any) @ ld-musl-aarch64.so.1+0x56e9c(rename+28)
umount2(non-NULL, 0) @ ld-musl-aarch64.so.1+0x248dc(umount+16)
umount2(any, MNT_DETACH) @ ld-musl-aarch64.so.1+0x248fc(umount2+16)
mount(any, any, any, any, any) @ ld-musl-aarch64.so.1+0x248bc(mount+12)
statfs(any, any) @ ld-musl-aarch64.so.1+0x52be0(statfs+36)
statfs(non-NULL, any) @ ld-musl-aarch64.so.1+0x52c5c(statvfs+52)
fstatfs(any, any) @ ld-musl-aarch64.so.1+0x52c18(fstatfs+40)
faccessat(AT_FDCWD, any, F_OK-X_OK) @ ld-musl-aarch64.so.1+0x6854c(access+28)
chroot(any) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
fchmodat(AT_FDCWD, any, 0777) @ ld-musl-aarch64.so.1+0x526c8(chmod+24)
fchownat(AT_FDCWD, any, any u32, any u32, 0) @ ld-musl-aarch64.so.1+0x68a38(fchown+120)
fchown(any, any u32, any u32) @ ld-musl-aarch64.so.1+0x689e8(fchown+40)
openat(AT_FDCWD, "/dev/null", O_RDWR|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x1ffe4(__init_libc*+424)
openat(AT_FDCWD, "/etc/hosts", O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x53070(__fopen_rb_ca*+64)
openat(AT_FDCWD, "/etc/services", O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x53070(__fopen_rb_ca*+64)
openat(AT_FDCWD, "/etc/resolv.conf", O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x53070(__fopen_rb_ca*+64)
openat(AT_FDCWD, any, O_RDONLY|O_NOFOLLOW-0xffffffffffffffff, any) @ ld-musl-aarch64.so.1+0x5474c(fopen+80)
openat(any, any, any u32, any) @ ld-musl-aarch64.so.1+0x60868
openat(AT_FDCWD, any, O_RDONLY|O_NOFOLLOW-0xffffffffffffffff, any) @ ld-musl-aarch64.so.1+0x60868
openat(any, any, any u32, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
openat(AT_FDCWD, any, O_RDONLY|O_NOFOLLOW-0xffffffffffffffff, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
close(any) @ ld-musl-aarch64.so.1+0x1f980(opendir+72)
close(STDIN_FILENO-0xffffffffffffffe9) @ ld-musl-aarch64.so.1+0x20b6c(fcntl+324)
close(any) @ ld-musl-aarch64.so.1+0x41c74(if_indextoname+84)
close(any) @ ld-musl-aarch64.so.1+0x41ff0(if_nametoindex+92)
close(any) @ ld-musl-aarch64.so.1+0x4517c(__res_msend_rc*+2704)
close(any) @ ld-musl-aarch64.so.1+0x53294(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x547c0(fopen+196)
close(any) @ ld-musl-aarch64.so.1+0x60868
close(any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
pipe2(any, 0) @ ld-musl-aarch64.so.1+0x68ef4(pipe+16)
pipe2(any, O_CLOEXEC) @ ld-musl-aarch64.so.1+0x68f24(pipe2+32)
getdents64(any, any, 2048) @ ld-musl-aarch64.so.1+0x1f9e0(readdir+80)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x68e18(lseek+12)
read(any, any, any) @ ld-musl-aarch64.so.1+0x5340c(__stdio_read*+144)
read(any, any, any) @ ld-musl-aarch64.so.1+0x60868
read(any, any, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
write(any, any, any) @ ld-musl-aarch64.so.1+0x60868
write(any, any, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
readv(any, any, 2) @ ld-musl-aarch64.so.1+0x533c8(__stdio_read*+76)
writev(any, any, any) @ ld-musl-aarch64.so.1+0x53520(__stdio_write*+184)
ppoll(any, 3, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x1ff94(__init_libc*+344)
ppoll(any, any, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x60868
ppoll(any, any, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
signalfd4(-1, any, sizeof(kernel_sigset_t), SFD_CLOEXEC) @ ld-musl-aarch64.so.1+0x24da4(signalfd+24)
readlinkat(AT_FDCWD, any, any, 0x1000) @ ld-musl-aarch64.so.1+0x690f8(readlink+40)
newfstatat(STDIN_FILENO-0x7fffffff, "", any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x52978(fstatat+112)
newfstatat(AT_FDCWD, any, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x52978(fstatat+112)
newfstatat(AT_FDCWD, any, any, 0) @ ld-musl-aarch64.so.1+0x529b0(fstatat+168)
newfstatat(0x80000000--1 as u32, "", any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x529cc(fstatat+196)
newfstatat(AT_FDCWD, any, any, 0) @ ld-musl-aarch64.so.1+0x529cc(fstatat+196)
newfstatat(AT_FDCWD, any, any, AT_SYMLINK_NOFOLLOW) @ ld-musl-aarch64.so.1+0x529cc(fstatat+196)
fstat(STDIN_FILENO-0x7fffffff, any) @ ld-musl-aarch64.so.1+0x52944(fstatat+60)
fstat(AT_FDCWD, any) @ ld-musl-aarch64.so.1+0x52944(fstatat+60)
fsync(any) @ ld-musl-aarch64.so.1+0x60868
fsync(any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
capget(any, any) @ ld-musl-aarch64.so.1+0x241ec(capget+12)
capset(any, any) @ ld-musl-aarch64.so.1+0x241d0(capset+12)
capset(any, any) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
exit(0) @ ld-musl-aarch64.so.1+0x60808
exit(0xfffffffffffff001-0xffffffffffffffff) @ ld-musl-aarch64.so.1+0x60808
exit(any) @ ld-musl-aarch64.so.1+0x60840
exit(0) @ ld-musl-aarch64.so.1+0x623c0(pthread_exit+416)
exit_group(any) @ ld-musl-aarch64.so.1+0x206d8(_Exit+12)
set_tid_address(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x4826c(__post_Fork*+44)
unshare(CLONE_NEWNS) @ ld-musl-aarch64.so.1+0x25004(unshare+16)
unshare(CLONE_NEWUSER) @ ld-musl-aarch64.so.1+0x25004(unshare+16)
futex(any, FUTEX_WAIT, any, 0, any, 0)
futex(any, FUTEX_WAIT, any, any, any u16, any u16)
futex(any, FUTEX_WAIT, 0x40000000-0xffffffffffffffff, 0, any, 0x40000000-0xffffffff)
futex(any, FUTEX_WAKE, 0-INT_MAX, any, any u32, INT_MAX)
futex(any, FUTEX_WAKE, 1, any, any, any)
futex(any, FUTEX_WAKE, INT_MAX, any, any, any)
futex(any, FUTEX_REQUEUE, 0, 1, any, any)
futex(any, FUTEX_LOCK_PI-FUTEX_UNLOCK_PI, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any, 0)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, any, any u16, any u16)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, 0x40000000-0xffffffffffffffff, 0, any, 0x40000000-0xffffffff)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 0-INT_MAX, any, any u32, INT_MAX)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 1, any, any, any)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, any, any)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG-FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(ld-musl-aarch64.so.1+0xc1e90(exit_sem*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1e90(exit_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1eb0(caller_sem*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1eb0(caller_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1ed0(target_sem*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1ed0(target_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAIT, non-NULL, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), FUTEX_WAIT, non-NULL, 0, ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), ld-musl-aarch64.so.1+0xc2ed8(tl_lock_waiters*))
futex(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), ld-musl-aarch64.so.1+0xc2ed8(tl_lock_waiters*))
set_robust_list(0, sizeof(struct robust_list_head)) @ ld-musl-aarch64.so.1+0x623ec(pthread_exit+460)
set_robust_list(any, sizeof(struct robust_list_head)) @ ld-musl-aarch64.so.1+0x634f4(__pthread_mutex_trylock_owner*+92)
nanosleep(any, any) @ ld-musl-aarch64.so.1+0x60868
nanosleep(any, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
setitimer(ITIMER_REAL, any, any) @ ld-musl-aarch64.so.1+0x51d54(setitimer+16)
clock_gettime(any, any) @ ld-musl-aarch64.so.1+0x66774(clock_gettime+60)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(CLOCK_MONOTONIC, any) @ ld-musl-aarch64.so.1+0x666a0(clock_getres+16)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
sched_yield() @ ld-musl-aarch64.so.1+0x50edc(sched_yield+12)
restart_syscall()
kill(0-LONG_MAX, SIGKILL) @ ld-musl-aarch64.so.1+0x24ca8(do_setgroups*+92)
kill(any, any) @ ld-musl-aarch64.so.1+0x51bd4(kill+20)
kill(0-LONG_MAX, SIGKILL) @ ld-musl-aarch64.so.1+0x69338(do_setxid*+92)
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x20740(abort+84)
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x51d20(raise+44)
tkill(any, SIGSETXID) @ ld-musl-aarch64.so.1+0x61398(cancel_handler*+132)
tkill(non-NULL, SIGSETXID) @ ld-musl-aarch64.so.1+0x6311c(pthread_kill+68)
tkill(any, SIGSYNCCALL) @ ld-musl-aarch64.so.1+0x64cb4(__synccall*+380)
rt_sigaction(SIGABRT, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x2072c(abort+64)
rt_sigaction(any, any, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51e00(__libc_sigaction*+140)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x20758(abort+108)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa1060(all_mask*), any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51b5c(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa1058(app_mask*), any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51b7c(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51b98(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51ecc(__libc_sigaction*+344)
rt_sigprocmask(SIG_BLOCK-SIG_SETMASK, any, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x64250(pthread_sigmask+24)
rt_sigreturn(any) @ ld-musl-aarch64.so.1+0x51b18
setgid(any) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
setgid(any) @ ld-musl-aarch64.so.1+0x692fc(do_setxid*+32)
setuid(any) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
setuid(any) @ ld-musl-aarch64.so.1+0x692fc(do_setxid*+32)
setsid() @ ld-musl-aarch64.so.1+0x692b8(setsid+12)
setgroups(any, any) @ ld-musl-aarch64.so.1+0x24c6c(do_setgroups*+32)
setgroups(any, any) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
setgroups(any, any) @ ld-musl-aarch64.so.1+0x692fc(do_setxid*+32)
sethostname(non-NULL, any) @ ld-musl-aarch64.so.1+0x24cf8(sethostname+12)
getrlimit(RLIMIT_NOFILE, any) @ ld-musl-aarch64.so.1+0x3c220(getrlimit+108)
umask(any u32) @ ld-musl-aarch64.so.1+0x52d84(umask+16)
prctl(PR_SET_KEEPCAPS, 1, any, any, any) @ ld-musl-aarch64.so.1+0x249bc(prctl+48)
prctl(PR_CAPBSET_READ, any, any, any, any) @ ld-musl-aarch64.so.1+0x249bc(prctl+48)
prctl(PR_SET_MM, PR_SET_MM_MAP, any, 104, 0) @ ld-musl-aarch64.so.1+0x249bc(prctl+48)
prctl(any, any, any, any, any) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
gettimeofday(any, 0) @ ld-musl-aarch64.so.1+0x66794(clock_gettime+92)
gettimeofday(non-NULL, any) @ [vdso]+0x658(__kernel_gettimeofday+256)
getpid() @ ld-musl-aarch64.so.1+0x24c9c(do_setgroups*+80)
getpid() @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
getpid() @ ld-musl-aarch64.so.1+0x68d14(getpid+4)
getpid() @ ld-musl-aarch64.so.1+0x6932c(do_setxid*+80)
getuid() @ ld-musl-aarch64.so.1+0x68d4c(getuid+4)
geteuid() @ ld-musl-aarch64.so.1+0x68bc4(geteuid+4)
getgid() @ ld-musl-aarch64.so.1+0x68bd0(getgid+4)
getegid() @ ld-musl-aarch64.so.1+0x68bb8(getegid+4)
gettid() @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
gettid() @ ld-musl-aarch64.so.1+0x64c0c(__synccall*+212)
socket(any, SOCK_STREAM, 0) @ ld-musl-aarch64.so.1+0x45c60(socket+40)
socket(any, SOCK_STREAM|SOCK_CLOEXEC-SOCK_RAW|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x45c60(socket+40)
socket(any, SOCK_DGRAM|SOCK_CLOEXEC, 17) @ ld-musl-aarch64.so.1+0x45c60(socket+40)
socket(any, SOCK_STREAM|SOCK_NONBLOCK|SOCK_CLOEXEC-SOCK_DGRAM|SOCK_NONBLOCK|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x45c60(socket+40)
socket(AF_UNIX, SOCK_SEQPACKET|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x45c60(socket+40)
socket(any, 0-SOCK_DGRAM|SOCK_NONBLOCK|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x45c98(socket+96)
socket(any, SOCK_DGRAM, 17) @ ld-musl-aarch64.so.1+0x45c98(socket+96)
socketpair(AF_UNIX, SOCK_STREAM, 0, any) @ ld-musl-aarch64.so.1+0x45d30(socketpair+60)
socketpair(AF_UNIX, SOCK_STREAM|SOCK_CLOEXEC, 0, any) @ ld-musl-aarch64.so.1+0x45d30(socketpair+60)
socketpair(AF_UNIX, SOCK_STREAM, 0, any) @ ld-musl-aarch64.so.1+0x45da0(socketpair+172)
bind(any, any, any u32) @ ld-musl-aarch64.so.1+0x3f73c(bind+32)
listen(any, 30) @ ld-musl-aarch64.so.1+0x4274c(listen+36)
listen(any, 128) @ ld-musl-aarch64.so.1+0x4274c(listen+36)
accept(any, any, any) @ ld-musl-aarch64.so.1+0x60868
accept(any, any, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
connect(any, any, any u32) @ ld-musl-aarch64.so.1+0x60868
connect(any, any, any u32) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
getsockname(any, any, any) @ ld-musl-aarch64.so.1+0x41b08(getsockname+28)
sendto(any, any, any, 0, 0, 0) @ ld-musl-aarch64.so.1+0x60868
sendto(any, any, any, MSG_NOSIGNAL, any, any u32) @ ld-musl-aarch64.so.1+0x60868
sendto(any, any, any, 0, 0, 0) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
sendto(any, any, any, MSG_NOSIGNAL, any, any u32) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
recvfrom(any, any, any u32, any u16, any u16, any u16) @ ld-musl-aarch64.so.1+0x60868
recvfrom(any, any, any u32, any u16, any u16, any u16) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
setsockopt(any, SOL_SOCKET, SO_REUSEADDR, any, 4) @ ld-musl-aarch64.so.1+0x45bc4(setsockopt+32)
setsockopt(any, SOL_SOCKET, SO_SNDBUF-SO_RCVBUF, any, 4) @ ld-musl-aarch64.so.1+0x45bc4(setsockopt+32)
setsockopt(any, SOL_SOCKET, SO_RCVTIMEO_OLD-SO_SNDTIMEO_OLD, any, 16) @ ld-musl-aarch64.so.1+0x45bc4(setsockopt+32)
setsockopt(any, SOL_TCP, TCP_NODELAY, any, 4) @ ld-musl-aarch64.so.1+0x45bc4(setsockopt+32)
setsockopt(any, SOL_TCP, TCP_FASTOPEN_CONNECT, any, 4) @ ld-musl-aarch64.so.1+0x45bc4(setsockopt+32)
setsockopt(any, SOL_IPV6, IPV6_V6ONLY, any, 4) @ ld-musl-aarch64.so.1+0x45bc4(setsockopt+32)
setsockopt(any, SOL_NETLINK, NETLINK_GET_STRICT_CHK, any, 4) @ ld-musl-aarch64.so.1+0x45bc4(setsockopt+32)
getsockopt(any, SOL_SOCKET, SO_PEERCRED, any, any) @ ld-musl-aarch64.so.1+0x41b34(getsockopt+28)
getsockopt(any, SOL_SOCKET, SO_PEERSEC, any, any) @ ld-musl-aarch64.so.1+0x41b34(getsockopt+28)
getsockopt(any, SOL_SOCKET, SO_PEERGROUPS, non-NULL, any) @ ld-musl-aarch64.so.1+0x41b34(getsockopt+28)
sendmsg(any, any, MSG_NOSIGNAL) @ ld-musl-aarch64.so.1+0x60868
sendmsg(any, any, MSG_NOSIGNAL|MSG_FASTOPEN) @ ld-musl-aarch64.so.1+0x60868
sendmsg(any, any, MSG_NOSIGNAL) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
sendmsg(any, any, MSG_NOSIGNAL|MSG_FASTOPEN) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
recvmsg(any, any, any u8) @ ld-musl-aarch64.so.1+0x60868
recvmsg(any, any, MSG_CMSG_CLOEXEC) @ ld-musl-aarch64.so.1+0x60868
recvmsg(any, any, any u8) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
recvmsg(any, any, MSG_CMSG_CLOEXEC) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
brk(any) @ ld-musl-aarch64.so.1+0x294b8(__malloc_alloc_meta*+332)
brk(0) @ ld-musl-aarch64.so.1+0x29570(__malloc_alloc_meta*+516)
brk(any) @ ld-musl-aarch64.so.1+0x29590(__malloc_alloc_meta*+548)
brk(0) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
munmap(any, any) @ ld-musl-aarch64.so.1+0x3e254(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x60800
mremap(any, NULL-0xfffffffffffff000, NULL-0x7ffffffffffffffe, MREMAP_MAYMOVE, 0) @ ld-musl-aarch64.so.1+0x3e164(mremap+48)
clone(SIGCHLD, 0, 0, any, any) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
clone(SIGCHLD|CLONE_NEWUSER, 0, 0, any, any) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
clone(SIGCHLD, 0, any, any, any) @ ld-musl-aarch64.so.1+0x482fc(_Fork+48)
clone(SIGCHLD-0xffffffff, any, 0, any, any) @ ld-musl-aarch64.so.1+0x60828
mmap(0, NULL-0x7ffffffffffffffe, PROT_NONE-PROT_READ, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e074(mmap+64)
mmap(0, NULL-0x7ffffffffffffffe, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e074(mmap+64)
mmap(0, NULL-0x7ffffffffffffffe, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_POPULATE, any, 0) @ ld-musl-aarch64.so.1+0x3e074(mmap+64)
mmap(NULL-0xfffffffffffffffe, any, any, MAP_PRIVATE|MAP_FIXED, any, any) @ ld-musl-aarch64.so.1+0x3e074(mmap+64)
mmap(any, any, any, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, any, any) @ ld-musl-aarch64.so.1+0x3e074(mmap+64)
mprotect(any, any, PROT_READ|PROT_WRITE) @ ld-musl-aarch64.so.1+0x3e124(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x6b128(reloc_all*+268)
accept4(any, any, any, any) @ ld-musl-aarch64.so.1+0x60868
accept4(any, any, any, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
wait4(any, any, 0, 0) @ ld-musl-aarch64.so.1+0x60868
wait4(any, any, 0, 0) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
prlimit64(0, RLIMIT_NOFILE, 0, any) @ ld-musl-aarch64.so.1+0x3c1e0(getrlimit+44)
seccomp(SECCOMP_SET_MODE_STRICT-SECCOMP_SET_MODE_FILTER, 1, 0) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
seccomp(SECCOMP_SET_MODE_FILTER, 2, 0) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
seccomp(SECCOMP_SET_MODE_FILTER, 4, 0) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
seccomp(SECCOMP_SET_MODE_FILTER, 8, 0) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
seccomp(SECCOMP_SET_MODE_FILTER, 16, 0) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
seccomp(SECCOMP_SET_MODE_FILTER, 40, 0) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
seccomp(SECCOMP_GET_ACTION_AVAIL-0x3, 0, any) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
getrandom(any, 4, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x60868
getrandom(any, 8, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x60868
getrandom(any, 10, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x60868
getrandom(any, 12, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x60868
getrandom(any, 16, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x60868
getrandom(any, 24, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x60868
getrandom(any, 4, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
getrandom(any, 8, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
getrandom(any, 10, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
getrandom(any, 12, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
getrandom(any, 16, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
getrandom(any, 24, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
memfd_create(".lxc_config_file", MFD_CLOEXEC) @ ld-musl-aarch64.so.1+0x2483c(memfd_create+16)
bpf(BPF_PROG_LOAD, any, 120) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
bpf(BPF_PROG_ATTACH-BPF_PROG_DETACH, any, 120) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
pidfd_send_signal(any u32, any u32, 0, 0) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
open_tree(any u32, "", 0x81001) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
open_tree(any u32, "", 0x89001) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
open_tree(0xfffffff7, 0, 0) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
move_mount(any u32, "", any u32, "", 68) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
move_mount(0xfffffff7, 0, 0xfffffff7, 0, 0) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
fsopen(0, 0) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
fsconfig(0xfffffff7, 0xffffffea, 0, 0, 0) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
fsmount(0xfffffff7, 0, 0) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
pidfd_open(any, 0) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
clone3(any, 64) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
close_range(3, INT_MAX, 0) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
close_range(3, -1 as u32, 2) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
openat2(any u32, "cgroup.freeze", any, 24) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
openat2(any u32, "", any, 24) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
openat2(any u32, "cgroup.events", any, 24) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
openat2(any u32, "attr/apparmor/current", any, 24) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
openat2(any u32, "attr/current", any, 24) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
openat2(0xfffffff7, any, any, 24) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
openat2(0xfffffff7, "", 0, 0) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
mount_setattr(any u32, "", AT_EMPTY_PATH, any, 32) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
mount_setattr(any u32, "", AT_EMPTY_PATH|AT_RECURSIVE, any, 32) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
mount_setattr(0xfffffff7, 0, 0, 0, 0) @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
