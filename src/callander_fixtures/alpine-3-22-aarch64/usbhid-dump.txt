callander: permitted syscalls: eventfd2(0, EFD_NONBLOCK|EFD_CLOEXEC) @ ld-musl-aarch64.so.1+0x244bc(eventfd+20)
fcntl(STDIN_FILENO-0xfffffffffffffffe, F_GETFD, any) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(STDIN_FILENO-0xfffffffffffffffe, F_SETFD, any u32) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(STDIN_FILENO-0xfffffffffffffffe, F_GETFL, any) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(STDIN_FILENO-0xfffffffffffffffe, F_SETFL, 0-O_CREAT|O_EXCL|O_NOCTTY|O_TRUNC|O_APPEND|O_NONBLOCK|O_DSYNC|O_ASYNC|O_DIRECTORY|O_LARGEFILE|O_DIRECT|O_NOFOLLOW|O_NOATIME|O_CLOEXEC|__O_SYNC|O_PATH|__O_TMPFILE) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x20c20(open+136)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x45cbc(socket+132)
fcntl(any, F_SETFL, O_NONBLOCK) @ ld-musl-aarch64.so.1+0x45cd4(socket+156)
ioctl(any, USBDEVFS_DISCARDURB, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, USBDEVFS_RESET, 0) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, USBDEVFS_GET_SPEED, 0) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, USBDEVFS_REAPURBNDELAY, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, USBDEVFS_CONNECTINFO, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, USBDEVFS_GETDRIVER, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, USBDEVFS_SETCONFIGURATION, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, USBDEVFS_CLAIMINTERFACE-USBDEVFS_RELEASEINTERFACE, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, USBDEVFS_CLEAR_HALT, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, USBDEVFS_GET_CAPABILITIES, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, USBDEVFS_SETINTERFACE, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, USBDEVFS_ALLOC_STREAMS-USBDEVFS_FREE_STREAMS, non-NULL) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, USBDEVFS_SUBMITURB, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, USBDEVFS_DISCONNECT_CLAIM, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, USBDEVFS_IOCTL, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, USBDEVFS_CONTROL, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x53598(__stdout_write*+56)
statfs("/sys", any) @ ld-musl-aarch64.so.1+0x52be0(statfs+36)
openat(AT_FDCWD, "/dev/null", O_RDWR|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x1ffe4(__init_libc*+424)
openat(AT_FDCWD, any, O_RDONLY|O_NOFOLLOW-O_RDWR|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x60868
openat(AT_FDCWD, any, O_RDONLY|O_DIRECTORY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x60868
openat(AT_FDCWD, any, O_RDONLY|O_NOFOLLOW-O_RDWR|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
openat(AT_FDCWD, any, O_RDONLY|O_DIRECTORY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
close(any) @ ld-musl-aarch64.so.1+0x1f980(opendir+72)
close(any) @ ld-musl-aarch64.so.1+0x53294(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x60868
close(any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
getdents64(any, any, 2048) @ ld-musl-aarch64.so.1+0x1f9e0(readdir+80)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x68e18(lseek+12)
read(any, any, any) @ ld-musl-aarch64.so.1+0x5340c(__stdio_read*+144)
read(any, any, 8) @ ld-musl-aarch64.so.1+0x60868
read(any, any, 19) @ ld-musl-aarch64.so.1+0x60868
read(any, any, 256) @ ld-musl-aarch64.so.1+0x60868
read(any, any, 8) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
read(any, any, 19) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
read(any, any, 256) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
write(any, any, 8) @ ld-musl-aarch64.so.1+0x60868
write(any, libusb-1.0.so.0+0x1431e, NULL-0xf) @ ld-musl-aarch64.so.1+0x60868
write(any, any, 8) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
write(any, libusb-1.0.so.0+0x1431e, NULL-0xf) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
readv(any, any, 2) @ ld-musl-aarch64.so.1+0x533c8(__stdio_read*+76)
writev(any, any, any) @ ld-musl-aarch64.so.1+0x53520(__stdio_write*+184)
ppoll(any, 3, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x1ff94(__init_libc*+344)
ppoll(any, any u32, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x60868
ppoll(any, any u32, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
readlinkat(AT_FDCWD, any, any, 4095) @ ld-musl-aarch64.so.1+0x690f8(readlink+40)
timerfd_create(CLOCK_MONOTONIC, TFD_NONBLOCK|TFD_CLOEXEC) @ ld-musl-aarch64.so.1+0x24fa0(timerfd_create+20)
timerfd_settime(any, 0-TFD_TIMER_ABSTIME, any, 0) @ ld-musl-aarch64.so.1+0x24fc4(timerfd_settime+20)
exit(0) @ ld-musl-aarch64.so.1+0x60808
exit(0xfffffffffffff001-0xffffffffffffffff) @ ld-musl-aarch64.so.1+0x60808
exit(any) @ ld-musl-aarch64.so.1+0x60840
exit(0) @ ld-musl-aarch64.so.1+0x623c0(pthread_exit+416)
exit(0) @ ld-musl-aarch64.so.1+0x62464(start*+104)
exit_group(any) @ ld-musl-aarch64.so.1+0x206d8(_Exit+12)
set_tid_address(any) @ ld-musl-aarch64.so.1+0x62458(start*+92)
futex(any, FUTEX_WAIT, any, 0, any, 0)
futex(any, FUTEX_WAIT, any, any, 0, 0)
futex(any, FUTEX_WAIT, non-NULL, 0, any, any u32)
futex(any, FUTEX_WAKE, 0-INT_MAX, any, any u32, INT_MAX)
futex(any, FUTEX_WAKE, 1, any, any, any)
futex(any, FUTEX_WAKE, INT_MAX, any, any, any)
futex(any, FUTEX_REQUEUE, 0, 1, any, any)
futex(any, FUTEX_LOCK_PI-FUTEX_UNLOCK_PI, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any, 0)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, any, 0, 0)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, any, any u32)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 0-INT_MAX, any, any u32, INT_MAX)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 1, any, any, any)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, any, any)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG-FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAIT, non-NULL, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), FUTEX_WAIT, non-NULL, 0, ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), ld-musl-aarch64.so.1+0xc2ed8(tl_lock_waiters*))
futex(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), ld-musl-aarch64.so.1+0xc2ed8(tl_lock_waiters*))
set_robust_list(0, sizeof(struct robust_list_head)) @ ld-musl-aarch64.so.1+0x623ec(pthread_exit+460)
set_robust_list(any, sizeof(struct robust_list_head)) @ ld-musl-aarch64.so.1+0x634f4(__pthread_mutex_trylock_owner*+92)
nanosleep(any, 0) @ ld-musl-aarch64.so.1+0x60868
nanosleep(any, 0) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
clock_gettime(any, any) @ ld-musl-aarch64.so.1+0x66774(clock_gettime+60)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
sched_setscheduler(any, any, any) @ ld-musl-aarch64.so.1+0x62704(pthread_create+568)
restart_syscall()
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x20740(abort+84)
tkill(any, any) @ ld-musl-aarch64.so.1+0x51d20(raise+44)
tkill(any, SIGSETXID) @ ld-musl-aarch64.so.1+0x61398(cancel_handler*+132)
tkill(non-NULL, SIGSETXID) @ ld-musl-aarch64.so.1+0x6311c(pthread_kill+68)
rt_sigaction(SIGABRT, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x2072c(abort+64)
rt_sigaction(SIGINT, any, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51e00(__libc_sigaction*+140)
rt_sigaction(SIGUSR1, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51e00(__libc_sigaction*+140)
rt_sigaction(SIGUSR2, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51e00(__libc_sigaction*+140)
rt_sigaction(SIGTERM, any, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51e00(__libc_sigaction*+140)
rt_sigaction(SIGSETXID, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51e00(__libc_sigaction*+140)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x20758(abort+108)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa1060(all_mask*), any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51b5c(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa1058(app_mask*), any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51b7c(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51b98(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51ecc(__libc_sigaction*+344)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x62480(start*+132)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x62804(pthread_create+824)
rt_sigprocmask(SIG_BLOCK, any, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x64250(pthread_sigmask+24)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x64250(pthread_sigmask+24)
rt_sigreturn(any) @ ld-musl-aarch64.so.1+0x51b18
uname(any) @ ld-musl-aarch64.so.1+0x3da70(uname+12)
prctl(PR_SET_NAME, "libusb_event", 0, 0, 0) @ ld-musl-aarch64.so.1+0x249bc(prctl+48)
gettimeofday(any, 0) @ ld-musl-aarch64.so.1+0x66794(clock_gettime+92)
gettimeofday(non-NULL, any) @ [vdso]+0x658(__kernel_gettimeofday+256)
gettid() @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
socket(AF_NETLINK, SOCK_RAW, 15) @ ld-musl-aarch64.so.1+0x45c60(socket+40)
socket(AF_NETLINK, SOCK_RAW|SOCK_NONBLOCK|SOCK_CLOEXEC, 15) @ ld-musl-aarch64.so.1+0x45c60(socket+40)
socket(AF_NETLINK, SOCK_RAW, 15) @ ld-musl-aarch64.so.1+0x45c98(socket+96)
bind(any, any, 12) @ ld-musl-aarch64.so.1+0x3f73c(bind+32)
setsockopt(any, SOL_SOCKET, SO_PASSCRED, any, 4) @ ld-musl-aarch64.so.1+0x45bc4(setsockopt+32)
recvmsg(any, any, 0) @ ld-musl-aarch64.so.1+0x60868
recvmsg(any, any, 0) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
brk(any) @ ld-musl-aarch64.so.1+0x294b8(__malloc_alloc_meta*+332)
brk(0) @ ld-musl-aarch64.so.1+0x29570(__malloc_alloc_meta*+516)
brk(any) @ ld-musl-aarch64.so.1+0x29590(__malloc_alloc_meta*+548)
munmap(any, any) @ ld-musl-aarch64.so.1+0x3e254(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x60800
mremap(any, NULL-0xfffffffffffff000, NULL-0x7ffffffffffffffe, MREMAP_MAYMOVE, 0) @ ld-musl-aarch64.so.1+0x3e164(mremap+48)
clone(CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID|CLONE_DETACHED, any, any, any, ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x60828
mmap(0, NULL-0x7ffffffffffffffe, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e074(mmap+64)
mmap(0, NULL-0x7ffffffffffffffe, PROT_READ|PROT_WRITE, MAP_SHARED, any, 0) @ ld-musl-aarch64.so.1+0x3e074(mmap+64)
mmap(0, NULL-0x7ffffffffffffffe, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e074(mmap+64)
mmap(any, any, any, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, any, any) @ ld-musl-aarch64.so.1+0x3e074(mmap+64)
mprotect(any, any, PROT_READ|PROT_WRITE) @ ld-musl-aarch64.so.1+0x3e124(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x6b128(reloc_all*+268)
membarrier(MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED, 0) @ ld-musl-aarch64.so.1+0x24824(__membarrier_init*+12)
