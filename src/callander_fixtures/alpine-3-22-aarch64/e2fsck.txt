callander: permitted syscalls: getcwd(any, 0x1000-0x1001) @ ld-musl-aarch64.so.1+0x68b34(getcwd+36)
dup(any) @ ld-musl-aarch64.so.1+0x48d28(child*+440)
dup(any) @ ld-musl-aarch64.so.1+0x6867c(dup+16)
dup3(any, any, 0) @ ld-musl-aarch64.so.1+0x48d88(child*+536)
dup3(any, any, 0) @ ld-musl-aarch64.so.1+0x48e7c(child*+780)
dup3(any, STDIN_FILENO-STDERR_FILENO, 0) @ ld-musl-aarch64.so.1+0x686a8(dup2+28)
fcntl(any, F_GETOWN_EX, any) @ ld-musl-aarch64.so.1+0x20a80(fcntl+88)
fcntl(any, F_DUPFD-F_GETFL, any) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_SETFL, O_NOFOLLOW-0xffffffffffffffff) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_GETLK-F_SETLK, any) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_SETOWN, any) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_SETSIG-0x405, any) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_SETPIPE_SZ-0xffffffffffffffff, any) @ ld-musl-aarch64.so.1+0x20ab4(fcntl+140)
fcntl(any, F_GETOWN, any) @ ld-musl-aarch64.so.1+0x20af4(fcntl+204)
fcntl(any, F_DUPFD_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x20b1c(fcntl+244)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x20b3c(fcntl+276)
fcntl(any, F_DUPFD_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x20b54(fcntl+300)
fcntl(any, F_DUPFD, any) @ ld-musl-aarch64.so.1+0x20b88(fcntl+352)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x20c20(open+136)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x45cbc(socket+132)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x48e04(child*+660)
fcntl(any, F_SETFD, 0-0xfffffffffffffffe) @ ld-musl-aarch64.so.1+0x48e20(child*+688)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x48ed8(child*+872)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x52714(fchmod+60)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x52960(fstatat+88)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x52e78(fdopen+120)
fcntl(any, F_GETFL, any) @ ld-musl-aarch64.so.1+0x52f60(fdopen+352)
fcntl(any, F_SETFL, O_APPEND-0xffffffffffffffff) @ ld-musl-aarch64.so.1+0x52f78(fdopen+376)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x54770(fopen+116)
fcntl(any, F_SETLKW, any) @ ld-musl-aarch64.so.1+0x60868
fcntl(any, F_SETLKW, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x686dc(dup2+80)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x68fb4(pipe2+176)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x68fbc(pipe2+184)
ioctl(STDIN_FILENO, TCSETS, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, FDFLUSH, 0) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, BLKROGET, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, BLKGETSIZE, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, BLKFLSBUF, 0) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, BLKSSZGET, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, BLKDISCARD-BLKDISCARDZEROES, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, LOOP_GET_STATUS64, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, CDROMMULTISESSION, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, CDROM_DRIVE_STATUS, INT_MAX) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, CDROM_GET_CAPABILITY, 0) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, CDROM_LAST_WRITTEN, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, TCGETS, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, SIOCGIFCONF, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, SIOCGIFHWADDR, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, FS_IOC_SETFLAGS, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, BLKGETZONESZ, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, BLKBSZGET, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, BLKGETSIZE64, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, BLKGETDISKSEQ, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, FS_IOC_GETFLAGS, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, IOC_OPAL_GET_STATUS, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, EVMS_GET_STRIPE_INFO, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, FDGETPRM, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, FDGETFDCSTAT, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, GET_ARRAY_INFO, any) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, BLKREPORTZONE, non-NULL) @ ld-musl-aarch64.so.1+0x3c3ac(ioctl+48)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x52eb8(fdopen+184)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x53598(__stdout_write*+56)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x68d6c(isatty+24)
flock(any, LOCK_EX) @ ld-musl-aarch64.so.1+0x2459c(flock+20)
flock(any, LOCK_UN) @ ld-musl-aarch64.so.1+0x2459c(flock+20)
mkdirat(AT_FDCWD, "/run/blkid", 0755) @ ld-musl-aarch64.so.1+0x52b08(mkdir+24)
unlinkat(AT_FDCWD, non-NULL, 0) @ ld-musl-aarch64.so.1+0x695e4(unlink+24)
linkat(AT_FDCWD, non-NULL, AT_FDCWD, non-NULL, 0) @ ld-musl-aarch64.so.1+0x68dd4(link+32)
renameat(AT_FDCWD, non-NULL, AT_FDCWD, non-NULL) @ ld-musl-aarch64.so.1+0x56e9c(rename+28)
ftruncate(any, any) @ ld-musl-aarch64.so.1+0x68b00(ftruncate+16)
fallocate(any, 3, any, any) @ ld-musl-aarch64.so.1+0x2452c(fallocate+20)
fallocate(any, 16, any, any) @ ld-musl-aarch64.so.1+0x2452c(fallocate+20)
faccessat(AT_FDCWD, any, F_OK) @ ld-musl-aarch64.so.1+0x6854c(access+28)
faccessat(AT_FDCWD, any, W_OK) @ ld-musl-aarch64.so.1+0x6854c(access+28)
faccessat(any, any, R_OK) @ ld-musl-aarch64.so.1+0x687e4(faccessat+52)
faccessat(any, "partition", F_OK) @ ld-musl-aarch64.so.1+0x687e4(faccessat+52)
faccessat(any, "alignment_offset", F_OK) @ ld-musl-aarch64.so.1+0x687e4(faccessat+52)
faccessat(any, "queue/minimum_io_size", F_OK) @ ld-musl-aarch64.so.1+0x687e4(faccessat+52)
faccessat(any, "queue/optimal_io_size", F_OK) @ ld-musl-aarch64.so.1+0x687e4(faccessat+52)
faccessat(any, "queue/physical_block_size", F_OK) @ ld-musl-aarch64.so.1+0x687e4(faccessat+52)
faccessat(any, "queue/dax", F_OK) @ ld-musl-aarch64.so.1+0x687e4(faccessat+52)
faccessat(any, "diskseq", F_OK) @ ld-musl-aarch64.so.1+0x687e4(faccessat+52)
chdir(any) @ ld-musl-aarch64.so.1+0x48ea4(child*+820)
chdir("/") @ ld-musl-aarch64.so.1+0x685c8(chdir+12)
fchdir(any) @ ld-musl-aarch64.so.1+0x48de4(child*+628)
fchmod(any, 0644) @ ld-musl-aarch64.so.1+0x526f8(fchmod+32)
fchmodat(AT_FDCWD, any, 0644) @ ld-musl-aarch64.so.1+0x5273c(fchmod+100)
openat(AT_FDCWD, "/dev/null", O_RDWR|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x1ffe4(__init_libc*+424)
openat(AT_FDCWD, any, O_RDONLY|O_NOFOLLOW-0xffffffffffffffff, any) @ ld-musl-aarch64.so.1+0x48e4c(child*+732)
openat(AT_FDCWD, any, O_RDONLY|O_NOFOLLOW-0xffffffffffffffff, any) @ ld-musl-aarch64.so.1+0x5474c(fopen+80)
openat(any, any, O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x60868
openat(any, "size", O_RDONLY|O_NOFOLLOW-0xffffffffffffffff, any) @ ld-musl-aarch64.so.1+0x60868
openat(any, "alignment_offset", any, any) @ ld-musl-aarch64.so.1+0x60868
openat(AT_FDCWD, any, O_RDONLY|O_NOFOLLOW-0xffffffffffffffff, any) @ ld-musl-aarch64.so.1+0x60868
openat(any, any, O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
openat(any, "size", O_RDONLY|O_NOFOLLOW-0xffffffffffffffff, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
openat(any, "alignment_offset", any, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
openat(AT_FDCWD, any, O_RDONLY|O_NOFOLLOW-0xffffffffffffffff, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
openat(AT_FDCWD, any, O_RDONLY|O_NONBLOCK|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x64fa8(__map_file*+36)
close(any) @ ld-musl-aarch64.so.1+0x1f980(opendir+72)
close(STDIN_FILENO-0xffffffffffffffe9) @ ld-musl-aarch64.so.1+0x20b6c(fcntl+324)
close(any) @ ld-musl-aarch64.so.1+0x48d40(child*+464)
close(any) @ ld-musl-aarch64.so.1+0x48da4(child*+564)
close(any) @ ld-musl-aarch64.so.1+0x48e94(child*+804)
close(any) @ ld-musl-aarch64.so.1+0x53294(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x547c0(fopen+196)
close(any) @ ld-musl-aarch64.so.1+0x5686c(popen+184)
close(any) @ ld-musl-aarch64.so.1+0x56874(popen+192)
close(any) @ ld-musl-aarch64.so.1+0x568c4(popen+272)
close(any) @ ld-musl-aarch64.so.1+0x56980(popen+460)
close(any) @ ld-musl-aarch64.so.1+0x60868
close(any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
close(any) @ ld-musl-aarch64.so.1+0x64fd4(__map_file*+80)
close(any) @ ld-musl-aarch64.so.1+0x65014(__map_file*+144)
pipe2(any, 0) @ ld-musl-aarch64.so.1+0x68ef4(pipe+16)
pipe2(any, O_CLOEXEC) @ ld-musl-aarch64.so.1+0x68f24(pipe2+32)
getdents64(any, any, 2048) @ ld-musl-aarch64.so.1+0x1f9e0(readdir+80)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x68e18(lseek+12)
read(any, any, any) @ ld-musl-aarch64.so.1+0x5340c(__stdio_read*+144)
read(any, any, any) @ ld-musl-aarch64.so.1+0x60868
read(any, any, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
write(any, any, 4) @ ld-musl-aarch64.so.1+0x48d04(child*+404)
write(any, any, any) @ ld-musl-aarch64.so.1+0x60868
write(any, any, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
readv(any, any, 2) @ ld-musl-aarch64.so.1+0x533c8(__stdio_read*+76)
writev(any, any, any) @ ld-musl-aarch64.so.1+0x53520(__stdio_write*+184)
pread64(any, any, any, any) @ ld-musl-aarch64.so.1+0x60868
pread64(any, any, any, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
pwrite64(any, any, any, any) @ ld-musl-aarch64.so.1+0x60868
pwrite64(any, any, any, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
ppoll(any, 3, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x1ff94(__init_libc*+344)
readlinkat(AT_FDCWD, any, any, non-NULL) @ ld-musl-aarch64.so.1+0x690f8(readlink+40)
newfstatat(any, any, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x52978(fstatat+112)
newfstatat(AT_FDCWD, any, any, 0) @ ld-musl-aarch64.so.1+0x529b0(fstatat+168)
newfstatat(any, any, any, 0) @ ld-musl-aarch64.so.1+0x529cc(fstatat+196)
newfstatat(any, any, any, AT_SYMLINK_NOFOLLOW) @ ld-musl-aarch64.so.1+0x529cc(fstatat+196)
newfstatat(0x80000000--1 as u32, "", any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x529cc(fstatat+196)
fstat(any, any) @ ld-musl-aarch64.so.1+0x52944(fstatat+60)
fsync(any) @ ld-musl-aarch64.so.1+0x60868
fsync(any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
exit(0) @ ld-musl-aarch64.so.1+0x60808
exit(0xfffffffffffff001-0xffffffffffffffff) @ ld-musl-aarch64.so.1+0x60808
exit(any) @ ld-musl-aarch64.so.1+0x60840
exit(0) @ ld-musl-aarch64.so.1+0x623c0(pthread_exit+416)
exit(0) @ ld-musl-aarch64.so.1+0x62464(start*+104)
exit_group(any) @ ld-musl-aarch64.so.1+0x206d8(_Exit+12)
set_tid_address(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x4826c(__post_Fork*+44)
set_tid_address(any) @ ld-musl-aarch64.so.1+0x62458(start*+92)
futex(any, FUTEX_WAIT, any, 0, 0, 0)
futex(any, FUTEX_WAIT, non-NULL, 0, any, 0)
futex(any, FUTEX_WAIT, 0x40000000-0xffffffffffffffff, 0, any, 0x40000000-0xffffffff)
futex(any, FUTEX_WAKE, 0-INT_MAX, any, any u32, INT_MAX)
futex(any, FUTEX_WAKE, 1, any, any, any)
futex(any, FUTEX_REQUEUE, 0, 1, ld-musl-aarch64.so.1+0xc2ab4, any)
futex(any, FUTEX_LOCK_PI-FUTEX_UNLOCK_PI, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, 0, 0)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, any, 0)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, 0x40000000-0xffffffffffffffff, 0, any, 0x40000000-0xffffffff)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 0-INT_MAX, any, any u32, INT_MAX)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 1, any, any, any)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, ld-musl-aarch64.so.1+0xc2ab4, any)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG-FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(ld-musl-aarch64.so.1+0xc1e90(exit_sem*), FUTEX_WAKE, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1e90(exit_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1e90(exit_sem*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1e90(exit_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1eb0(caller_sem*), FUTEX_WAKE, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1eb0(caller_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1eb0(caller_sem*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1eb0(caller_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1ed0(target_sem*), FUTEX_WAKE, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1ed0(target_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1ed0(target_sem*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1ed0(target_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAIT, non-NULL, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2a88, FUTEX_WAKE, INT_MAX, ld-musl-aarch64.so.1+0xc2a88, any, any)
futex(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), FUTEX_WAIT, non-NULL, 0, ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), ld-musl-aarch64.so.1+0xc2ed8(tl_lock_waiters*))
futex(ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*), ld-musl-aarch64.so.1+0xc2ed8(tl_lock_waiters*))
set_robust_list(0, sizeof(struct robust_list_head)) @ ld-musl-aarch64.so.1+0x623ec(pthread_exit+460)
set_robust_list(any, sizeof(struct robust_list_head)) @ ld-musl-aarch64.so.1+0x634f4(__pthread_mutex_trylock_owner*+92)
nanosleep(any, any) @ ld-musl-aarch64.so.1+0x60868
nanosleep(any, any) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
clock_gettime(CLOCK_REALTIME, any) @ ld-musl-aarch64.so.1+0x66774(clock_gettime+60)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
sched_setscheduler(any, any, any) @ ld-musl-aarch64.so.1+0x62704(pthread_create+568)
sched_getaffinity(0, 128, any) @ ld-musl-aarch64.so.1+0x1be54(sysconf+432)
restart_syscall()
kill(0-LONG_MAX, SIGKILL) @ ld-musl-aarch64.so.1+0x69338(do_setxid*+92)
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x20740(abort+84)
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x51d20(raise+44)
tkill(any, SIGSETXID) @ ld-musl-aarch64.so.1+0x61398(cancel_handler*+132)
tkill(non-NULL, SIGSETXID) @ ld-musl-aarch64.so.1+0x6311c(pthread_kill+68)
tkill(any, SIGSYNCCALL) @ ld-musl-aarch64.so.1+0x64cb4(__synccall*+380)
rt_sigaction(SIGABRT, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x2072c(abort+64)
rt_sigaction(any, 0, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51e00(__libc_sigaction*+140)
rt_sigaction(any, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51e00(__libc_sigaction*+140)
rt_sigaction(SIGHUP-SIGILL, any, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51e00(__libc_sigaction*+140)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x20758(abort+108)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa1060(all_mask*), any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51b5c(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa1058(app_mask*), any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51b7c(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51b98(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51ecc(__libc_sigaction*+344)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x62480(start*+132)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x62804(pthread_create+824)
rt_sigprocmask(SIG_BLOCK, any, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x64250(pthread_sigmask+24)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x64250(pthread_sigmask+24)
rt_sigreturn(any) @ ld-musl-aarch64.so.1+0x51b18
setgid(0-LONG_MAX) @ ld-musl-aarch64.so.1+0x48cbc(child*+332)
setgid(0-LONG_MAX) @ ld-musl-aarch64.so.1+0x692fc(do_setxid*+32)
setuid(0-LONG_MAX) @ ld-musl-aarch64.so.1+0x48cd4(child*+356)
setuid(0-LONG_MAX) @ ld-musl-aarch64.so.1+0x692fc(do_setxid*+32)
setpgid(0, any) @ ld-musl-aarch64.so.1+0x48c9c(child*+300)
setsid() @ ld-musl-aarch64.so.1+0x48c7c(child*+268)
setsid() @ ld-musl-aarch64.so.1+0x692b8(setsid+12)
uname(any) @ ld-musl-aarch64.so.1+0x3da70(uname+12)
getrlimit(RLIMIT_FSIZE, any) @ ld-musl-aarch64.so.1+0x3c220(getrlimit+108)
setrlimit(any, any) @ ld-musl-aarch64.so.1+0x3d434(do_setrlimit*+24)
getrusage(0, any) @ ld-musl-aarch64.so.1+0x3c254(getrusage+16)
umask(any u32) @ ld-musl-aarch64.so.1+0x52d84(umask+16)
prctl(PR_GET_DUMPABLE, 0, 0, 0, 0) @ ld-musl-aarch64.so.1+0x249bc(prctl+48)
gettimeofday(any, 0) @ ld-musl-aarch64.so.1+0x66794(clock_gettime+92)
gettimeofday(non-NULL, any) @ [vdso]+0x658(__kernel_gettimeofday+256)
getpid() @ ld-musl-aarch64.so.1+0x68d14(getpid+4)
getpid() @ ld-musl-aarch64.so.1+0x6932c(do_setxid*+80)
getppid() @ ld-musl-aarch64.so.1+0x68d20(getppid+4)
getuid() @ ld-musl-aarch64.so.1+0x48ccc(child*+348)
getuid() @ ld-musl-aarch64.so.1+0x68d4c(getuid+4)
geteuid() @ ld-musl-aarch64.so.1+0x68bc4(geteuid+4)
getgid() @ ld-musl-aarch64.so.1+0x48cb4(child*+324)
getgid() @ ld-musl-aarch64.so.1+0x68bd0(getgid+4)
getegid() @ ld-musl-aarch64.so.1+0x68bb8(getegid+4)
gettid() @ ld-musl-aarch64.so.1+0x3d51c(syscall+76)
gettid() @ ld-musl-aarch64.so.1+0x64c0c(__synccall*+212)
sysinfo(any) @ ld-musl-aarch64.so.1+0x24f64(sysinfo+12)
socket(AF_UNIX, SOCK_STREAM|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x45c60(socket+40)
socket(AF_INET, SOCK_DGRAM, 0) @ ld-musl-aarch64.so.1+0x45c60(socket+40)
socket(AF_UNIX, SOCK_STREAM, 0) @ ld-musl-aarch64.so.1+0x45c98(socket+96)
connect(any, ld-musl-aarch64.so.1+0xa1040(addr*), 24) @ ld-musl-aarch64.so.1+0x60868
connect(any, ld-musl-aarch64.so.1+0xa1040(addr*), 24) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
sendmsg(any, any, MSG_NOSIGNAL) @ ld-musl-aarch64.so.1+0x60868
sendmsg(any, any, MSG_NOSIGNAL) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
brk(0) @ ld-musl-aarch64.so.1+0x24be8(sbrk+8)
brk(any) @ ld-musl-aarch64.so.1+0x294b8(__malloc_alloc_meta*+332)
brk(0) @ ld-musl-aarch64.so.1+0x29570(__malloc_alloc_meta*+516)
brk(any) @ ld-musl-aarch64.so.1+0x29590(__malloc_alloc_meta*+548)
munmap(any, any) @ ld-musl-aarch64.so.1+0x3e254(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x60800
mremap(any, NULL-0xfffffffffffff000, NULL-0x7ffffffffffffffe, MREMAP_MAYMOVE, 0) @ ld-musl-aarch64.so.1+0x3e164(mremap+48)
clone(SIGCHLD, 0, any, any, any) @ ld-musl-aarch64.so.1+0x482fc(_Fork+48)
clone(SIGCHLD|CLONE_VM|CLONE_VFORK, any, any, any, any) @ ld-musl-aarch64.so.1+0x60828
clone(CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID|CLONE_DETACHED, any, any, any, ld-musl-aarch64.so.1+0xc2e80(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x60828
mmap(0, any u32, PROT_READ|PROT_WRITE, MAP_SHARED, any, 0) @ ld-musl-aarch64.so.1+0x3e074(mmap+64)
mmap(0, NULL-0x7ffffffffffffffe, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e074(mmap+64)
mmap(0, NULL-0x7ffffffffffffffe, PROT_READ, MAP_SHARED, any, 0) @ ld-musl-aarch64.so.1+0x3e074(mmap+64)
mmap(0, NULL-0x7ffffffffffffffe, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e074(mmap+64)
mmap(any, any, any, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, any, any) @ ld-musl-aarch64.so.1+0x3e074(mmap+64)
fadvise64(any, 0, 0, 1) @ ld-musl-aarch64.so.1+0x20cb8(posix_fadvise+12)
fadvise64(any, any, any, 3) @ ld-musl-aarch64.so.1+0x20cb8(posix_fadvise+12)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x3e124(mprotect+56)
mprotect(any, any, PROT_READ|PROT_WRITE) @ ld-musl-aarch64.so.1+0x3e124(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x6b128(reloc_all*+268)
msync(non-NULL, any u32, MS_SYNC) @ ld-musl-aarch64.so.1+0x60868
msync(non-NULL, any u32, MS_SYNC) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
wait4(any, any, 0, 0) @ ld-musl-aarch64.so.1+0x56640(pclose+44)
wait4(0-INT_MAX, any, 0, 0) @ ld-musl-aarch64.so.1+0x60868
wait4(0-INT_MAX, any, 0, 0) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
prlimit64(0, RLIMIT_FSIZE, 0, any) @ ld-musl-aarch64.so.1+0x3c1e0(getrlimit+44)
prlimit64(0, RLIMIT_FSIZE, any, 0) @ ld-musl-aarch64.so.1+0x3d468(setrlimit+36)
getrandom(any, non-NULL, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x60868
getrandom(any, non-NULL, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x614fc(__syscall_cp_c*+200)
membarrier(MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED, 0) @ ld-musl-aarch64.so.1+0x24824(__membarrier_init*+12)
