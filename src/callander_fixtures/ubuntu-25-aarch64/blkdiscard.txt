callander: permitted syscalls: getcwd(non-NULL, any) @ libc.so.6+0xe6650(getcwd+112)
dup(any u32) @ libc.so.6+0xe3108(dup+8)
dup3(STDIN_FILENO, STDOUT_FILENO, 0) @ libc.so.6+0xe314c(__dup2+44)
dup3(STDERR_FILENO--1, STDOUT_FILENO, 0) @ libc.so.6+0xe314c(__dup2+44)
fcntl(any, F_SETFD, FD_CLOEXEC) @ libc.so.6+0xe8e94(__fcntl64_nocancel*+84)
fcntl(any, F_GETFL, any) @ libc.so.6+0xe8e94(__fcntl64_nocancel*+84)
fcntl(any, F_GETFL, any) @ libc.so.6+0xe8f68(__fcntl64_nocancel_adjusted*+56)
fcntl(any, F_SETFL, any u32) @ libc.so.6+0xe8f68(__fcntl64_nocancel_adjusted*+56)
ioctl(any, TCGETS, any) @ libc.so.6+0xe98f8(tcgetattr+56)
ioctl(any, BLKGETSIZE, any) @ libc.so.6+0xee24c(ioctl+12)
ioctl(any, BLKSSZGET, any) @ libc.so.6+0xee24c(ioctl+12)
ioctl(any, BLKDISCARD-BLKPBSZGET, any) @ libc.so.6+0xee24c(ioctl+12)
ioctl(any, BLKSECDISCARD, any) @ libc.so.6+0xee24c(ioctl+12)
ioctl(any, BLKZEROOUT, any) @ libc.so.6+0xee24c(ioctl+12)
ioctl(any, CDROMMULTISESSION, any) @ libc.so.6+0xee24c(ioctl+12)
ioctl(any, CDROM_DRIVE_STATUS, INT_MAX) @ libc.so.6+0xee24c(ioctl+12)
ioctl(any, CDROM_GET_CAPABILITY, 0) @ libc.so.6+0xee24c(ioctl+12)
ioctl(any, CDROM_LAST_WRITTEN, any) @ libc.so.6+0xee24c(ioctl+12)
ioctl(any, BLKGETZONESZ, any) @ libc.so.6+0xee24c(ioctl+12)
ioctl(any, BLKGETSIZE64, any) @ libc.so.6+0xee24c(ioctl+12)
ioctl(any, BLKGETDISKSEQ, any) @ libc.so.6+0xee24c(ioctl+12)
ioctl(any, IOC_OPAL_GET_STATUS, any) @ libc.so.6+0xee24c(ioctl+12)
ioctl(any, EVMS_GET_STRIPE_INFO, any) @ libc.so.6+0xee24c(ioctl+12)
ioctl(any, FDGETPRM, any) @ libc.so.6+0xee24c(ioctl+12)
ioctl(any, FDGETFDCSTAT, any) @ libc.so.6+0xee24c(ioctl+12)
ioctl(any, GET_ARRAY_INFO, any) @ libc.so.6+0xee24c(ioctl+12)
ioctl(any, BLKREPORTZONE, non-NULL) @ libc.so.6+0xee24c(ioctl+12)
ioctl(any, BLKBSZGET, any) @ libc.so.6+0xee24c(ioctl+12)
faccessat(any, "partition", F_OK) @ libc.so.6+0xe3488(faccessat+328)
faccessat(any, "alignment_offset", F_OK) @ libc.so.6+0xe3488(faccessat+328)
faccessat(any, "queue/minimum_io_size", F_OK) @ libc.so.6+0xe3488(faccessat+328)
faccessat(any, "queue/optimal_io_size", F_OK) @ libc.so.6+0xe3488(faccessat+328)
faccessat(any, "queue/physical_block_size", F_OK) @ libc.so.6+0xe3488(faccessat+328)
faccessat(any, "queue/dax", F_OK) @ libc.so.6+0xe3488(faccessat+328)
faccessat(any, "diskseq", F_OK) @ libc.so.6+0xe3488(faccessat+328)
openat(AT_FDCWD, any, any u32, any) @ libc.so.6+0xe7444(__open+100)
openat(AT_FDCWD, any, any u32, any) @ libc.so.6+0xe74d0(__open+240)
openat(any, any, O_RDONLY, any) @ libc.so.6+0xe7624(openat+100)
openat(any, "dm/uuid", O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0xe7624(openat+100)
openat(any, "slaves", O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0xe7624(openat+100)
openat(any, "alignment_offset", O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0xe7624(openat+100)
openat(any, "queue/minimum_io_size", O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0xe7624(openat+100)
openat(any, "queue/optimal_io_size", O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0xe7624(openat+100)
openat(any, "queue/physical_block_size", O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0xe7624(openat+100)
openat(any, "queue/dax", O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0xe7624(openat+100)
openat(any, "diskseq", O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0xe7624(openat+100)
openat(any, any, O_RDONLY, any) @ libc.so.6+0xe76b8(openat+248)
openat(any, "dm/uuid", O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0xe76b8(openat+248)
openat(any, "slaves", O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0xe76b8(openat+248)
openat(any, "alignment_offset", O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0xe76b8(openat+248)
openat(any, "queue/minimum_io_size", O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0xe76b8(openat+248)
openat(any, "queue/optimal_io_size", O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0xe76b8(openat+248)
openat(any, "queue/physical_block_size", O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0xe76b8(openat+248)
openat(any, "queue/dax", O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0xe76b8(openat+248)
openat(any, "diskseq", O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0xe76b8(openat+248)
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0xe90f4(__open_nocancel+84)
openat(AT_FDCWD, any, O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC, any) @ libc.so.6+0xe90f4(__open_nocancel+84)
openat(AT_FDCWD, non-NULL, O_RDONLY, any) @ libc.so.6+0xe90f4(__open_nocancel+84)
openat(AT_FDCWD, "/sys/kernel/mm/hugepages", O_RDONLY|O_DIRECTORY, any) @ libc.so.6+0xe90f4(__open_nocancel+84)
close(any) @ libc.so.6+0xe2e6c(close+44)
close(any) @ libc.so.6+0xe2ea0(close+96)
close(any) @ libc.so.6+0xe8cf4(__close_nocancel+20)
pipe2(any, 0) @ libc.so.6+0xe77b4(pipe+20)
getdents64(any, any, any) @ libc.so.6+0xc1d40(getdents64+32)
lseek(any, any, any) @ libc.so.6+0xe71d8(lseek+24)
read(any, any, any) @ libc.so.6+0xe7f8c(__read+44)
read(any, any, any) @ libc.so.6+0xe7fd4(__read+116)
read(any, any, any) @ libc.so.6+0xe92d4(__read_nocancel+20)
write(any, any, any) @ libc.so.6+0xe8c2c(write+44)
write(any, any, any) @ libc.so.6+0xe8c74(write+116)
write(any, any, 0-LONG_MAX) @ libc.so.6+0xe9434(__write_nocancel+20)
writev(any, any, any) @ ld-linux-aarch64.so.1+0xb394(_dl_debug_vdprintf*+372)
writev(STDERR_FILENO, any, any) @ libc.so.6+0x7be2c(__libc_message_impl*+332)
pread64(STDIN_FILENO-0xfffffffffffffffe, any, 511, any) @ libc.so.6+0xe9274(__pread64_nocancel+20)
readlinkat(AT_FDCWD, any, any, 4095) @ libc.so.6+0xe8064(readlink+36)
newfstatat(any, any, any, 0) @ libc.so.6+0xe3d18(fstatat64+24)
newfstatat(any, any, any, AT_SYMLINK_NOFOLLOW) @ libc.so.6+0xe3d18(fstatat64+24)
fstat(any, any) @ libc.so.6+0xe3cb4(fstat+20)
exit(0) @ libc.so.6+0x22304(__libc_start_call_main*+164)
exit_group(any) @ ld-linux-aarch64.so.1+0x1c820(_exit*+32)
exit_group(any) @ libc.so.6+0xc2984(_Exit+36)
futex(any, any u32, 1, 0, any, any)
futex(any, any u32, INT_MAX, 0, any, any)
futex(any, any, 0x2-0xffffffff, 0, 0, -1 as u32)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any u32, 0, any, any)
futex(any, FUTEX_WAIT_BITSET|FUTEX_CLOCK_REALTIME, 0, 0, 0, -1 as u32)
futex(any, FUTEX_WAIT_BITSET|FUTEX_PRIVATE_FLAG|FUTEX_CLOCK_REALTIME, 0, 0, 0, -1 as u32)
futex(ld-linux-aarch64.so.1+0x40a88(_rtld_global+2696), FUTEX_WAIT, any u32, 0, any, any)
futex(ld-linux-aarch64.so.1+0x40a88(_rtld_global+2696), FUTEX_LOCK_PI, 0, 0, 128, 6)
futex(ld-linux-aarch64.so.1+0x40a88(_rtld_global+2696), FUTEX_UNLOCK_PI, 0, 0, any, any)
futex(ld-linux-aarch64.so.1+0x40a88(_rtld_global+2696), FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, 0, 134)
futex(ld-linux-aarch64.so.1+0x40a88(_rtld_global+2696), FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any, ld-linux-aarch64.so.1+0x40a98(_rtld_global+2712))
set_robust_list(any, sizeof(struct robust_list_head)) @ libc.so.6+0xc2914(_Fork+84)
clock_gettime(CLOCK_MONOTONIC, any) @ libc.so.6+0xc1080(__clock_gettime+64)
clock_gettime(CLOCK_MONOTONIC_RAW, any) @ libc.so.6+0xc1080(__clock_gettime+64)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ libc.so.6+0xc11c4(clock_nanosleep+68)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ libc.so.6+0xc120c(clock_nanosleep+140)
sched_setscheduler(any u32, any u32, any) @ libc.so.6+0xdc288(sched_setscheduler+8)
sched_getscheduler(any u32) @ libc.so.6+0xdc0c8(__sched_getscheduler+8)
sched_getparam(any u32, any) @ libc.so.6+0xdc088(sched_getparam+8)
sched_getaffinity(0, 0x1000, any) @ libc.so.6+0xecbdc(__get_nprocs_sched*+60)
sched_get_priority_max(1) @ libc.so.6+0xdc108(__sched_get_priority_max+8)
sched_get_priority_min(1) @ libc.so.6+0xdc148(sched_get_priority_min+8)
restart_syscall()
tgkill(any, any, SIGSETXID) @ libc.so.6+0x845e8(__nptl_setxid*+296)
tgkill(any, any, SIGSETXID) @ libc.so.6+0x84654(__nptl_setxid*+404)
tgkill(any, any, SIGABRT) @ libc.so.6+0x895cc(__pthread_kill_implementation*+268)
tgkill(any, any, SIGFPE) @ libc.so.6+0x895cc(__pthread_kill_implementation*+268)
tgkill(any, any, SIGABRT) @ libc.so.6+0x895fc(__pthread_kill_implementation*+316)
tgkill(any, any, SIGFPE) @ libc.so.6+0x895fc(__pthread_kill_implementation*+316)
rt_sigaction(SIGABRT, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x37554(__libc_sigaction+148)
rt_sigaction(SIGABRT, 0, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x375f8(__libc_sigaction+312)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x219f8(abort+168)
rt_sigprocmask(SIG_BLOCK, libc.so.6+0x172140(sigall_set*), any, sizeof(kernel_sigset_t)) @ libc.so.6+0x89528(__pthread_kill_implementation*+104)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x89574(__pthread_kill_implementation*+180)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x8f58c(pthread_sigmask+76)
setgid(any u32) @ libc.so.6+0x84738(__nptl_setxid*+632)
setgid(any u32) @ libc.so.6+0xdc318(setgid+56)
setuid(any u32) @ libc.so.6+0x84738(__nptl_setxid*+632)
setuid(any u32) @ libc.so.6+0xdc6d8(setuid+56)
prctl(PR_SET_VMA, 0, NULL-0xfffffffffffffffe, any, " glibc: assert") @ libc.so.6+0xf428c(__set_vma_name*+172)
prctl(PR_SET_VMA, 0, NULL-0xfffffffffffffffe, any, " glibc: fatal") @ libc.so.6+0xf428c(__set_vma_name*+172)
prctl(PR_SET_VMA, 0, NULL-0xfffffffffffffffe, any, " glibc: malloc") @ libc.so.6+0xf428c(__set_vma_name*+172)
prctl(PR_SET_VMA, 0, any, any, " glibc: malloc arena") @ libc.so.6+0xf428c(__set_vma_name*+172)
gettimeofday(non-NULL, any) @ [vdso]+0x658(__kernel_gettimeofday+256)
getpid() @ ld-linux-aarch64.so.1+0x1c888(__GI___getpid*+8)
getpid() @ libc.so.6+0xc8a88(getpid+8)
getuid() @ libc.so.6+0xc8bc8(getuid+8)
getgid() @ libc.so.6+0xc7b48(getgid+8)
gettid() @ libc.so.6+0x895e0(__pthread_kill_implementation*+288)
brk(any) @ libc.so.6+0xea494(brk+20)
munmap(any, any) @ libc.so.6+0xef408(munmap+8)
mremap(any, any, any, MREMAP_MAYMOVE, any) @ libc.so.6+0xf3d28(mremap+72)
clone(SIGCHLD|CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID, 0, 0, 0, any) @ libc.so.6+0xc28ec(_Fork+44)
mmap(0, any, any, any, any, 0) @ libc.so.6+0xee944(mmap+36)
mmap(any, any, PROT_NONE, any, -1, 0) @ libc.so.6+0xee944(mmap+36)
fadvise64(any, 0, 0, 1) @ libc.so.6+0xe7998(posix_fadvise+24)
mprotect(any, any, any u32) @ libc.so.6+0xef288(mprotect+8)
madvise(any, any, MADV_DONTNEED) @ libc.so.6+0xee608(madvise+8)
madvise(any, any, MADV_HUGEPAGE) @ libc.so.6+0xee608(madvise+8)
getrandom(libc.so.6+0x1c6748(tcache_key*), 8, GRND_NONBLOCK) @ libc.so.6+0x95a34(ptmalloc_init.part.0*+76)
faccessat2(any, "partition", F_OK, 0) @ libc.so.6+0xe3390(faccessat+80)
faccessat2(any, "alignment_offset", F_OK, 0) @ libc.so.6+0xe3390(faccessat+80)
faccessat2(any, "queue/minimum_io_size", F_OK, 0) @ libc.so.6+0xe3390(faccessat+80)
faccessat2(any, "queue/optimal_io_size", F_OK, 0) @ libc.so.6+0xe3390(faccessat+80)
faccessat2(any, "queue/physical_block_size", F_OK, 0) @ libc.so.6+0xe3390(faccessat+80)
faccessat2(any, "queue/dax", F_OK, 0) @ libc.so.6+0xe3390(faccessat+80)
faccessat2(any, "diskseq", F_OK, 0) @ libc.so.6+0xe3390(faccessat+80)
