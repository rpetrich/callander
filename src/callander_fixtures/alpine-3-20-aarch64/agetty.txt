callander: permitted syscalls: getcwd(any, 0x1000-0x1001) @ ld-musl-aarch64.so.1+0x68adc(getcwd+36)
dup(any) @ ld-musl-aarch64.so.1+0x68624(dup+16)
fcntl(STDIN_FILENO-STDOUT_FILENO, F_SETFL, 0-O_CREAT|O_EXCL|O_NOCTTY|O_TRUNC|O_APPEND|O_DSYNC|O_ASYNC|O_DIRECTORY|O_LARGEFILE|O_DIRECT|O_NOFOLLOW|O_NOATIME|O_CLOEXEC|__O_SYNC|O_PATH|__O_TMPFILE) @ ld-musl-aarch64.so.1+0x21028(fcntl+140)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x21028(fcntl+140)
fcntl(any, F_SETFD, any u32) @ ld-musl-aarch64.so.1+0x21028(fcntl+140)
fcntl(any, F_GETFL, any) @ ld-musl-aarch64.so.1+0x21028(fcntl+140)
fcntl(any, F_DUPFD_CLOEXEC, 3) @ ld-musl-aarch64.so.1+0x21090(fcntl+244)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x210b0(fcntl+276)
fcntl(any, F_DUPFD_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x210c8(fcntl+300)
fcntl(any, F_DUPFD, 3) @ ld-musl-aarch64.so.1+0x210fc(fcntl+352)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x21194(open+136)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x461c4(socket+132)
fcntl(any, F_SETFL, O_NONBLOCK) @ ld-musl-aarch64.so.1+0x461dc(socket+156)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x52a60(fchmod+60)
fcntl(STDIN_FILENO-0x7fffffff, F_GETFD, any) @ ld-musl-aarch64.so.1+0x52cac(fstatat+88)
fcntl(AT_FDCWD, F_GETFD, any) @ ld-musl-aarch64.so.1+0x52cac(fstatat+88)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x531ec(fdopen+120)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x53404(__fopen_rb_ca*+96)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x54b00(fopen+116)
fcntl(any, F_GETFD, any u32) @ ld-musl-aarch64.so.1+0x689ac(fchown+68)
inotify_init1(IN_NONBLOCK|IN_CLOEXEC) @ ld-musl-aarch64.so.1+0x24a60(inotify_init1+16)
inotify_add_watch(STDIN_FILENO-0x7fffffff, "/run/agetty.reload", IN_MODIFY|IN_ATTRIB) @ ld-musl-aarch64.so.1+0x24a90(inotify_add_watch+20)
ioctl(STDIN_FILENO, KDGKBMODE, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(STDIN_FILENO, KDGKBLED, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(STDIN_FILENO, TCGETS-TCSETSW, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(STDIN_FILENO, TCFLSH, 0) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(STDIN_FILENO, TCFLSH, 2) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(STDIN_FILENO, TIOCSPGRP, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(STDIN_FILENO, TIOCGWINSZ-TIOCSWINSZ, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(STDIN_FILENO, TIOCGLCKTRMIOS-TIOCSLCKTRMIOS, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, TIOCSCTTY, 1) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, TIOCNOTTY, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, TIOCGSID, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, SIOCGIFINDEX, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x5322c(fdopen+184)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x53910(__stdout_write*+56)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x68d18(isatty+24)
faccessat(AT_FDCWD, "/etc/issue", R_OK) @ ld-musl-aarch64.so.1+0x684f4(access+28)
faccessat(AT_FDCWD, "/run/numlock-on", F_OK) @ ld-musl-aarch64.so.1+0x684f4(access+28)
chdir(non-NULL) @ ld-musl-aarch64.so.1+0x68570(chdir+12)
chroot(non-NULL) @ ld-musl-aarch64.so.1+0x24640(chroot+12)
fchmod(any, 0600) @ ld-musl-aarch64.so.1+0x52a44(fchmod+32)
fchmod(any, 0620) @ ld-musl-aarch64.so.1+0x52a44(fchmod+32)
fchmodat(AT_FDCWD, any, 0600) @ ld-musl-aarch64.so.1+0x52a88(fchmod+100)
fchmodat(AT_FDCWD, any, 0620) @ ld-musl-aarch64.so.1+0x52a88(fchmod+100)
fchownat(AT_FDCWD, any, 0, any u32, 0) @ ld-musl-aarch64.so.1+0x689e0(fchown+120)
fchown(any, 0, any u32) @ ld-musl-aarch64.so.1+0x68990(fchown+40)
openat(AT_FDCWD, "/dev/null", O_RDWR|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x2055c(__init_libc*+424)
openat(AT_FDCWD, "/etc/hosts", O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x533e4(__fopen_rb_ca*+64)
openat(AT_FDCWD, "/etc/resolv.conf", O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x533e4(__fopen_rb_ca*+64)
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x54adc(fopen+80)
openat(any, any, O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x607bc
openat(AT_FDCWD, any, any, any) @ ld-musl-aarch64.so.1+0x607bc
openat(any, any, O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
openat(AT_FDCWD, any, O_RDWR|O_NOCTTY|O_NONBLOCK|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
openat(AT_FDCWD, non-NULL, O_RDONLY|O_DIRECTORY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
openat(AT_FDCWD, "/run/agetty.reload", O_RDONLY|O_NOFOLLOW-O_WRONLY|O_CREAT|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
openat(AT_FDCWD, "/etc/os-release", O_RDONLY|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
openat(AT_FDCWD, "/usr/lib/os-release", O_RDONLY|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
openat(AT_FDCWD, "/dev/console", O_WRONLY|O_NOCTTY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
openat(AT_FDCWD, any, O_RDONLY|O_NONBLOCK|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x64f04(__map_file*+36)
close(any) @ ld-musl-aarch64.so.1+0x1ff0c(opendir+72)
close(STDIN_FILENO-0xffffffffffffffe9) @ ld-musl-aarch64.so.1+0x210e0(fcntl+324)
close(any) @ ld-musl-aarch64.so.1+0x424c4(if_nametoindex+92)
close(any) @ ld-musl-aarch64.so.1+0x442e4(__rtnetlink_enumerate*+104)
close(any) @ ld-musl-aarch64.so.1+0x456ac(__res_msend_rc*+2544)
close(any) @ ld-musl-aarch64.so.1+0x53608(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x54b50(fopen+196)
close(any) @ ld-musl-aarch64.so.1+0x607bc
close(any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
close(any) @ ld-musl-aarch64.so.1+0x64f30(__map_file*+80)
close(any) @ ld-musl-aarch64.so.1+0x64f7c(__map_file*+156)
vhangup() @ ld-musl-aarch64.so.1+0x25478(vhangup+12)
getdents64(any, any, 2048) @ ld-musl-aarch64.so.1+0x1ff6c(readdir+80)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x68de8(lseek+12)
read(any, any, any) @ ld-musl-aarch64.so.1+0x53780(__stdio_read*+144)
read(any, any, non-NULL) @ ld-musl-aarch64.so.1+0x607bc
read(any, any, non-NULL) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
write(any, any, non-NULL) @ ld-musl-aarch64.so.1+0x607bc
write(any, any, non-NULL) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
readv(any, any, 2) @ ld-musl-aarch64.so.1+0x5373c(__stdio_read*+76)
writev(any, any, any) @ ld-musl-aarch64.so.1+0x53898(__stdio_write*+188)
pselect6(0x1-0x400, any, 0, 0, 0, any) @ ld-musl-aarch64.so.1+0x607bc
pselect6(0x1-0x400, any, 0, 0, 0, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
ppoll(any, 3, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x2050c(__init_libc*+344)
ppoll(any, any, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x607bc
ppoll(any, any, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
readlinkat(AT_FDCWD, any, any, non-NULL) @ ld-musl-aarch64.so.1+0x690cc(readlink+40)
newfstatat(STDIN_FILENO-0x7fffffff, "", any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x52cc4(fstatat+112)
newfstatat(AT_FDCWD, any, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x52cc4(fstatat+112)
newfstatat(AT_FDCWD, any, any, 0) @ ld-musl-aarch64.so.1+0x52cfc(fstatat+168)
newfstatat(0x80000000--1 as u32, "", any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x52d18(fstatat+196)
newfstatat(AT_FDCWD, any, any, AT_SYMLINK_NOFOLLOW) @ ld-musl-aarch64.so.1+0x52d18(fstatat+196)
newfstatat(AT_FDCWD, non-NULL, any, 0) @ ld-musl-aarch64.so.1+0x52d18(fstatat+196)
fstat(STDIN_FILENO-0x7fffffff, any) @ ld-musl-aarch64.so.1+0x52c90(fstatat+60)
fstat(AT_FDCWD, any) @ ld-musl-aarch64.so.1+0x52c90(fstatat+60)
utimensat(any, 0, 0, 0) @ ld-musl-aarch64.so.1+0x53138(utimensat+48)
exit(0) @ ld-musl-aarch64.so.1+0x6075c
exit(0xfffffffffffff001-0xffffffffffffffff) @ ld-musl-aarch64.so.1+0x6075c
exit(0) @ ld-musl-aarch64.so.1+0x62314(pthread_exit+416)
exit_group(any) @ ld-musl-aarch64.so.1+0x20c50(_Exit+12)
futex(any, FUTEX_WAIT, any, 0, 0, 0)
futex(any, FUTEX_WAIT, non-NULL, 0, any, any u32)
futex(any, FUTEX_WAKE, 0-INT_MAX, any, any u32, INT_MAX)
futex(any, FUTEX_WAKE, 1, any, any, any)
futex(any, FUTEX_REQUEUE, 0, 1, ld-musl-aarch64.so.1+0xc2ab4, any)
futex(any, FUTEX_LOCK_PI-FUTEX_UNLOCK_PI, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, 0, 0)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, any, any u32)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 0-INT_MAX, any, any u32, INT_MAX)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 1, any, any, any)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, ld-musl-aarch64.so.1+0xc2ab4, any)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG-FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAIT, non-NULL, 0, any u32, ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, any u32, ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2a88, FUTEX_WAKE, INT_MAX, ld-musl-aarch64.so.1+0xc2a88, any, any)
futex(ld-musl-aarch64.so.1+0xc2e78(__thread_list_lock*), FUTEX_WAIT, non-NULL, 0, any u32, ld-musl-aarch64.so.1+0xc2ed0(tl_lock_waiters*))
futex(ld-musl-aarch64.so.1+0xc2e78(__thread_list_lock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, any u32, ld-musl-aarch64.so.1+0xc2ed0(tl_lock_waiters*))
set_robust_list(0, sizeof(struct robust_list_head)) @ ld-musl-aarch64.so.1+0x62340(pthread_exit+460)
set_robust_list(any, sizeof(struct robust_list_head)) @ ld-musl-aarch64.so.1+0x63454(__pthread_mutex_trylock_owner*+92)
nanosleep(any, any) @ ld-musl-aarch64.so.1+0x607bc
nanosleep(any, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
setitimer(ITIMER_REAL, any, any) @ ld-musl-aarch64.so.1+0x520a8(setitimer+16)
clock_gettime(CLOCK_REALTIME-CLOCK_MONOTONIC, any) @ ld-musl-aarch64.so.1+0x666e4(clock_gettime+60)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
restart_syscall()
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x20cb8(abort+84)
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x52074(raise+44)
tkill(any, SIGSETXID) @ ld-musl-aarch64.so.1+0x612f4(cancel_handler*+132)
tkill(non-NULL, SIGSETXID) @ ld-musl-aarch64.so.1+0x6307c(pthread_kill+68)
rt_sigaction(SIGABRT, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x20ca4(abort+64)
rt_sigaction(SIGHUP-SIGQUIT, any, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x52154(__libc_sigaction*+140)
rt_sigaction(SIGPIPE, any, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x52154(__libc_sigaction*+140)
rt_sigaction(SIGSETXID, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x52154(__libc_sigaction*+140)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x20cd0(abort+108)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa0ff8(all_mask*), any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51eb0(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa0ff0(app_mask*), any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51ed0(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x51eec(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x52220(__libc_sigaction*+344)
rt_sigprocmask(SIG_BLOCK-SIG_UNBLOCK, any, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x641a8(pthread_sigmask+24)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x641a8(pthread_sigmask+24)
rt_sigreturn(any) @ ld-musl-aarch64.so.1+0x51e6c
setpriority(0, 0, any) @ ld-musl-aarch64.so.1+0x3d930(setpriority+24)
getpriority(0, 0) @ ld-musl-aarch64.so.1+0x3c67c(getpriority+20)
getsid(0) @ ld-musl-aarch64.so.1+0x68ce4(getsid+16)
uname(any) @ ld-musl-aarch64.so.1+0x3df98(uname+12)
getrlimit(0xff, any) @ ld-musl-aarch64.so.1+0x3c72c(getrlimit+88)
prctl(PR_GET_DUMPABLE, 0, 0, 0, 0) @ ld-musl-aarch64.so.1+0x24df0(prctl+48)
gettimeofday(any, 0) @ ld-musl-aarch64.so.1+0x66704(clock_gettime+92)
gettimeofday(non-NULL, any) @ [vdso]+0x658(__kernel_gettimeofday+256)
getpid() @ ld-musl-aarch64.so.1+0x68cc0(getpid+4)
getuid() @ ld-musl-aarch64.so.1+0x68cf8(getuid+4)
geteuid() @ ld-musl-aarch64.so.1+0x68b70(geteuid+4)
getgid() @ ld-musl-aarch64.so.1+0x68b7c(getgid+4)
getegid() @ ld-musl-aarch64.so.1+0x68b64(getegid+4)
socket(any, SOCK_DGRAM|SOCK_CLOEXEC, 17) @ ld-musl-aarch64.so.1+0x46168(socket+40)
socket(any, SOCK_STREAM|SOCK_NONBLOCK|SOCK_CLOEXEC-SOCK_DGRAM|SOCK_NONBLOCK|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x46168(socket+40)
socket(AF_UNIX, SOCK_STREAM|SOCK_CLOEXEC-SOCK_DGRAM|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x46168(socket+40)
socket(AF_NETLINK, SOCK_RAW, 0) @ ld-musl-aarch64.so.1+0x46168(socket+40)
socket(AF_NETLINK, SOCK_RAW|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x46168(socket+40)
socket(any, 0-SOCK_DGRAM|SOCK_NONBLOCK|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x461a0(socket+96)
socket(any, SOCK_DGRAM, 17) @ ld-musl-aarch64.so.1+0x461a0(socket+96)
bind(any, any, any u32) @ ld-musl-aarch64.so.1+0x3fbe8(bind+32)
connect(any, any, any u32) @ ld-musl-aarch64.so.1+0x607bc
connect(any, any, any u32) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
getsockname(any, any, any) @ ld-musl-aarch64.so.1+0x41fe0(getsockname+28)
getpeername(any, any, any) @ ld-musl-aarch64.so.1+0x41c10(getpeername+28)
sendto(any, any, any, 0, 0, 0) @ ld-musl-aarch64.so.1+0x607bc
sendto(any, any, any, MSG_NOSIGNAL, any, any u32) @ ld-musl-aarch64.so.1+0x607bc
sendto(any, any, any, 0, 0, 0) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
sendto(any, any, any, MSG_NOSIGNAL, any, any u32) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
recvfrom(any, any, any, 0, any, any) @ ld-musl-aarch64.so.1+0x607bc
recvfrom(any, any, 0x2000, MSG_DONTWAIT, 0, 0) @ ld-musl-aarch64.so.1+0x607bc
recvfrom(any, any, any, 0, any, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
recvfrom(any, any, 0x2000, MSG_DONTWAIT, 0, 0) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
setsockopt(any, SOL_SOCKET, SO_PASSCRED, any, 4) @ ld-musl-aarch64.so.1+0x460cc(setsockopt+32)
setsockopt(any, SOL_TCP, TCP_FASTOPEN_CONNECT, any, 4) @ ld-musl-aarch64.so.1+0x460cc(setsockopt+32)
setsockopt(any, SOL_IPV6, IPV6_V6ONLY, any, 4) @ ld-musl-aarch64.so.1+0x460cc(setsockopt+32)
sendmsg(any, any, MSG_NOSIGNAL) @ ld-musl-aarch64.so.1+0x607bc
sendmsg(any, any, MSG_NOSIGNAL|MSG_FASTOPEN) @ ld-musl-aarch64.so.1+0x607bc
sendmsg(any, any, MSG_NOSIGNAL) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
sendmsg(any, any, MSG_NOSIGNAL|MSG_FASTOPEN) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
recvmsg(any, any, 0) @ ld-musl-aarch64.so.1+0x607bc
recvmsg(any, any, MSG_DONTWAIT) @ ld-musl-aarch64.so.1+0x607bc
recvmsg(any, any, 0) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
recvmsg(any, any, MSG_DONTWAIT) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
brk(any) @ ld-musl-aarch64.so.1+0x29954(__malloc_alloc_meta*+336)
brk(0) @ ld-musl-aarch64.so.1+0x29a2c(__malloc_alloc_meta*+552)
brk(any) @ ld-musl-aarch64.so.1+0x29a4c(__malloc_alloc_meta*+584)
munmap(any, any) @ ld-musl-aarch64.so.1+0x3e718(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x60754
mremap(any, NULL-0xfffffffffffff000, NULL-0x7ffffffffffffffe, MREMAP_MAYMOVE, 0) @ ld-musl-aarch64.so.1+0x3e628(mremap+48)
mmap(0, NULL-0x7ffffffffffffffe, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mmap(0, NULL-0x7ffffffffffffffe, PROT_READ, MAP_SHARED, any, 0) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mmap(0, NULL-0x7ffffffffffffffe, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mmap(any, any, PROT_NONE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, any) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mprotect(any, any, PROT_READ|PROT_WRITE) @ ld-musl-aarch64.so.1+0x3e5e8(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x6b0bc(reloc_all*+268)
prlimit64(0, 0xff, 0, any) @ ld-musl-aarch64.so.1+0x3c700(getrlimit+44)
