callander: permitted syscalls: getcwd(any, 0x1000-0x1001) @ ld-musl-aarch64.so.1+0x68adc(getcwd+36)
dup(any) @ ld-musl-aarch64.so.1+0x68624(dup+16)
dup3(STDIN_FILENO, STDOUT_FILENO, 0) @ ld-musl-aarch64.so.1+0x68650(dup2+28)
dup3(STDERR_FILENO--1 as u32, STDOUT_FILENO, 0) @ ld-musl-aarch64.so.1+0x68650(dup2+28)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x21028(fcntl+140)
fcntl(any, F_SETFD, any u32) @ ld-musl-aarch64.so.1+0x21028(fcntl+140)
fcntl(any, F_GETFL, any) @ ld-musl-aarch64.so.1+0x21028(fcntl+140)
fcntl(any, F_DUPFD_CLOEXEC, 3) @ ld-musl-aarch64.so.1+0x21090(fcntl+244)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x210b0(fcntl+276)
fcntl(any, F_DUPFD_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x210c8(fcntl+300)
fcntl(any, F_DUPFD, 3) @ ld-musl-aarch64.so.1+0x210fc(fcntl+352)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x21194(open+136)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x461c4(socket+132)
fcntl(any u32, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x462cc(socketpair+208)
fcntl(any u32, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x462d4(socketpair+216)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x52a60(fchmod+60)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x52cac(fstatat+88)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x531ec(fdopen+120)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x54b00(fopen+116)
fcntl(STDOUT_FILENO, F_GETFD, any) @ ld-musl-aarch64.so.1+0x68684(dup2+80)
inotify_init1(IN_NONBLOCK|IN_CLOEXEC) @ ld-musl-aarch64.so.1+0x24a60(inotify_init1+16)
inotify_add_watch(any, any, IN_CLOSE_WRITE) @ ld-musl-aarch64.so.1+0x24a90(inotify_add_watch+20)
inotify_add_watch(any, any, IN_CREATE|IN_ISDIR) @ ld-musl-aarch64.so.1+0x24a90(inotify_add_watch+20)
inotify_rm_watch(any, any) @ ld-musl-aarch64.so.1+0x24ab4(inotify_rm_watch+20)
ioctl(any, any, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x5322c(fdopen+184)
ioctl(any u32, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x53910(__stdout_write*+56)
ioctl(STDOUT_FILENO, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x68d18(isatty+24)
mkdirat(AT_FDCWD, non-NULL, any u32) @ ld-musl-aarch64.so.1+0x52e5c(mkdir+24)
unlinkat(AT_FDCWD, non-NULL, 0) @ ld-musl-aarch64.so.1+0x695d0(unlink+24)
linkat(AT_FDCWD, non-NULL, AT_FDCWD, non-NULL, 0) @ ld-musl-aarch64.so.1+0x68da4(link+32)
renameat(AT_FDCWD, non-NULL, AT_FDCWD, non-NULL) @ ld-musl-aarch64.so.1+0x57228(rename+28)
umount2(libmount.so.1+0x38a7e, 0) @ ld-musl-aarch64.so.1+0x24d10(umount+16)
umount2(non-NULL, MNT_DETACH) @ ld-musl-aarch64.so.1+0x24d30(umount2+16)
mount(any, any, 0, any, 0) @ ld-musl-aarch64.so.1+0x24cf0(mount+12)
mount(non-NULL, non-NULL, any, any, any) @ ld-musl-aarch64.so.1+0x24cf0(mount+12)
faccessat(AT_FDCWD, any, F_OK) @ ld-musl-aarch64.so.1+0x684f4(access+28)
faccessat(AT_FDCWD, non-NULL, W_OK) @ ld-musl-aarch64.so.1+0x684f4(access+28)
faccessat(any, any, R_OK) @ ld-musl-aarch64.so.1+0x6878c(faccessat+52)
faccessat(any, libblkid.so.1+0x24bfe, F_OK) @ ld-musl-aarch64.so.1+0x6878c(faccessat+52)
faccessat(any, libblkid.so.1+0x275f6, F_OK) @ ld-musl-aarch64.so.1+0x6878c(faccessat+52)
faccessat(any, libblkid.so.1+0x27607, F_OK) @ ld-musl-aarch64.so.1+0x6878c(faccessat+52)
faccessat(any, libblkid.so.1+0x2761d, F_OK) @ ld-musl-aarch64.so.1+0x6878c(faccessat+52)
faccessat(any, libblkid.so.1+0x27633, F_OK) @ ld-musl-aarch64.so.1+0x6878c(faccessat+52)
faccessat(any, libblkid.so.1+0x2764d, F_OK) @ ld-musl-aarch64.so.1+0x6878c(faccessat+52)
faccessat(any, libblkid.so.1+0x27657, F_OK) @ ld-musl-aarch64.so.1+0x6878c(faccessat+52)
fchmod(any, 0644) @ ld-musl-aarch64.so.1+0x52a44(fchmod+32)
fchmodat(AT_FDCWD, non-NULL, any u32) @ ld-musl-aarch64.so.1+0x52a14(chmod+24)
fchmodat(AT_FDCWD, any, 0644) @ ld-musl-aarch64.so.1+0x52a88(fchmod+100)
fchownat(AT_FDCWD, non-NULL, any u32, any u32, AT_SYMLINK_NOFOLLOW) @ ld-musl-aarch64.so.1+0x68d74(lchown+36)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9edb8, O_RDWR|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x2055c(__init_libc*+424)
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x54adc(fopen+80)
openat(AT_FDCWD, non-NULL, O_WRONLY|O_CREAT|O_TRUNC|O_CLOEXEC, 0666) @ ld-musl-aarch64.so.1+0x54adc(fopen+80)
openat(any, any, any, any) @ ld-musl-aarch64.so.1+0x607bc
openat(any, any, any, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
openat(AT_FDCWD, any, O_RDONLY|O_NONBLOCK|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x64f04(__map_file*+36)
close(any) @ ld-musl-aarch64.so.1+0x1ff0c(opendir+72)
close(STDIN_FILENO-0xffffffffffffffe9) @ ld-musl-aarch64.so.1+0x210e0(fcntl+324)
close(0xffffffffffffffeb--1) @ ld-musl-aarch64.so.1+0x210e0(fcntl+324)
close(any) @ ld-musl-aarch64.so.1+0x53608(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x54b50(fopen+196)
close(any) @ ld-musl-aarch64.so.1+0x607bc
close(any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
close(any) @ ld-musl-aarch64.so.1+0x64f30(__map_file*+80)
close(any) @ ld-musl-aarch64.so.1+0x64f7c(__map_file*+156)
pipe2(any, 0) @ ld-musl-aarch64.so.1+0x68ec4(pipe+16)
getdents64(any u32, any, 2048) @ ld-musl-aarch64.so.1+0x1ff6c(readdir+80)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x68de8(lseek+12)
read(any u32, any, any) @ ld-musl-aarch64.so.1+0x53780(__stdio_read*+144)
read(any, any, non-NULL) @ ld-musl-aarch64.so.1+0x607bc
read(any, any, non-NULL) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
write(any, any, non-NULL) @ ld-musl-aarch64.so.1+0x607bc
write(any, any, non-NULL) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
readv(any u32, any, 2) @ ld-musl-aarch64.so.1+0x5373c(__stdio_read*+76)
writev(any u32, any, any) @ ld-musl-aarch64.so.1+0x53898(__stdio_write*+188)
ppoll(any, 3, any, 0, 8) @ ld-musl-aarch64.so.1+0x2050c(__init_libc*+344)
readlinkat(AT_FDCWD, any, any, non-NULL) @ ld-musl-aarch64.so.1+0x690cc(readlink+40)
newfstatat(any, any, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x52cc4(fstatat+112)
newfstatat(AT_FDCWD, any, any, 0) @ ld-musl-aarch64.so.1+0x52cfc(fstatat+168)
newfstatat(any, any, any, 0-AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x52d18(fstatat+196)
newfstatat(AT_FDCWD, non-NULL, any, AT_NO_AUTOMOUNT|AT_STATX_DONT_SYNC) @ ld-musl-aarch64.so.1+0x52d18(fstatat+196)
fstat(any, any) @ ld-musl-aarch64.so.1+0x52c90(fstatat+60)
exit(any) @ ld-musl-aarch64.so.1+0x6075c
exit(0) @ ld-musl-aarch64.so.1+0x62314(pthread_exit+416)
exit_group(any) @ ld-musl-aarch64.so.1+0x20c50(_Exit+12)
set_tid_address(ld-musl-aarch64.so.1+0xc2e78(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x48730(__post_Fork*+44)
unshare(CLONE_NEWNS) @ ld-musl-aarch64.so.1+0x2544c(unshare+16)
futex(any, FUTEX_WAIT, any, 0, any, any u32)
futex(any, any, 0-INT_MAX, any, any u32, INT_MAX)
futex(any, any, any, 0, 0, 0)
futex(any, any, 1, any, any, any)
futex(any, any, non-NULL, 0, any u32, 0)
futex(any, FUTEX_REQUEUE, 0, 1, ld-musl-aarch64.so.1+0xc2ab4, any)
futex(any, FUTEX_LOCK_PI-FUTEX_UNLOCK_PI, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any, any u32)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, ld-musl-aarch64.so.1+0xc2ab4, any)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG-FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(ld-musl-aarch64.so.1+0xc1e90(exit_sem*), any, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1e90(exit_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1eb0(caller_sem*), any, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1eb0(caller_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1ed0(target_sem*), any, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1ed0(target_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), any, non-NULL, 0, any u32, ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2a88, FUTEX_WAKE, INT_MAX, ld-musl-aarch64.so.1+0xc2a88, any, any)
futex(ld-musl-aarch64.so.1+0xc2e78(__thread_list_lock*), any, non-NULL, 0, any u32, ld-musl-aarch64.so.1+0xc2ed0(tl_lock_waiters*))
set_robust_list(0, 24) @ ld-musl-aarch64.so.1+0x62340(pthread_exit+460)
set_robust_list(any, 24) @ ld-musl-aarch64.so.1+0x63454(__pthread_mutex_trylock_owner*+92)
nanosleep(any, 0) @ ld-musl-aarch64.so.1+0x607bc
nanosleep(any, 0) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
clock_gettime(CLOCK_REALTIME, any) @ ld-musl-aarch64.so.1+0x666e4(clock_gettime+60)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
restart_syscall()
kill(non-NULL, SIGKILL) @ ld-musl-aarch64.so.1+0x51f28(kill+20)
kill(any, SIGKILL) @ ld-musl-aarch64.so.1+0x69324(do_setxid*+92)
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x20cb8(abort+84)
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x52074(raise+44)
tkill(any u32, SIGSETXID) @ ld-musl-aarch64.so.1+0x612f4(cancel_handler*+132)
tkill(non-NULL, SIGSETXID) @ ld-musl-aarch64.so.1+0x6307c(pthread_kill+68)
tkill(any, SIGSYNCCALL) @ ld-musl-aarch64.so.1+0x64c24(__synccall*+396)
rt_sigaction(SIGABRT, any, 0, 8) @ ld-musl-aarch64.so.1+0x20ca4(abort+64)
rt_sigaction(SIGSETXID-SIGSYNCCALL, any, 0, 8) @ ld-musl-aarch64.so.1+0x52154(__libc_sigaction*+140)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x20cd0(abort+108)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa0ff8(all_mask*), any, 8) @ ld-musl-aarch64.so.1+0x51eb0(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa0ff0(app_mask*), any, 8) @ ld-musl-aarch64.so.1+0x51ed0(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x51eec(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x52220(__libc_sigaction*+344)
rt_sigprocmask(SIG_BLOCK, any, any, 8) @ ld-musl-aarch64.so.1+0x641a8(pthread_sigmask+24)
rt_sigreturn(any) @ ld-musl-aarch64.so.1+0x51e6c
uname(any) @ ld-musl-aarch64.so.1+0x3df98(uname+12)
prctl(PR_GET_DUMPABLE, 0, 0, 0, 0) @ ld-musl-aarch64.so.1+0x24df0(prctl+48)
gettimeofday(any, 0) @ ld-musl-aarch64.so.1+0x66704(clock_gettime+92)
gettimeofday(non-NULL, any) @ [vdso]+0x658(__kernel_gettimeofday+256)
getpid() @ ld-musl-aarch64.so.1+0x68cc0(getpid+4)
getpid() @ ld-musl-aarch64.so.1+0x69318(do_setxid*+80)
getuid() @ ld-musl-aarch64.so.1+0x68cf8(getuid+4)
geteuid() @ ld-musl-aarch64.so.1+0x68b70(geteuid+4)
getgid() @ ld-musl-aarch64.so.1+0x68b7c(getgid+4)
getegid() @ ld-musl-aarch64.so.1+0x68b64(getegid+4)
gettid() @ ld-musl-aarch64.so.1+0x64b68(__synccall*+208)
socket(AF_UNIX, SOCK_STREAM|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x46168(socket+40)
socket(AF_NETLINK, SOCK_RAW, 0) @ ld-musl-aarch64.so.1+0x46168(socket+40)
socket(AF_UNIX, SOCK_STREAM, 0) @ ld-musl-aarch64.so.1+0x461a0(socket+96)
socketpair(AF_UNIX, SOCK_STREAM|SOCK_CLOEXEC, 0, any) @ ld-musl-aarch64.so.1+0x46238(socketpair+60)
socketpair(AF_UNIX, SOCK_STREAM, 0, any) @ ld-musl-aarch64.so.1+0x462a8(socketpair+172)
connect(any, ld-musl-aarch64.so.1+0xa0fd8(addr*), 24) @ ld-musl-aarch64.so.1+0x607bc
connect(any, ld-musl-aarch64.so.1+0xa0fd8(addr*), 24) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
sendmsg(any, any, MSG_NOSIGNAL) @ ld-musl-aarch64.so.1+0x607bc
sendmsg(any, any, MSG_NOSIGNAL) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
brk(any) @ ld-musl-aarch64.so.1+0x29954(__malloc_alloc_meta*+336)
brk(0) @ ld-musl-aarch64.so.1+0x29a2c(__malloc_alloc_meta*+552)
brk(any) @ ld-musl-aarch64.so.1+0x29a4c(__malloc_alloc_meta*+584)
munmap(any, any) @ ld-musl-aarch64.so.1+0x3e718(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x60754
mremap(any, NULL-0xfffffffffffff000, NULL-0xfffffffffffff000, MREMAP_MAYMOVE, 0) @ ld-musl-aarch64.so.1+0x3e628(mremap+48)
clone(SIGCHLD, 0, any, any, any) @ ld-musl-aarch64.so.1+0x487c0(_Fork+48)
mmap(0, any, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mmap(0, any, PROT_READ, MAP_SHARED, any, 0) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mmap(any, any, PROT_NONE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, any) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
fadvise64(any, 0, 0, 1) @ ld-musl-aarch64.so.1+0x2122c(posix_fadvise+12)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x3e5e8(mprotect+56)
mprotect(any, any, PROT_READ|PROT_WRITE) @ ld-musl-aarch64.so.1+0x3e5e8(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x6b0bc(reloc_all*+268)
wait4(non-NULL, any, 0, 0) @ ld-musl-aarch64.so.1+0x607bc
wait4(non-NULL, any, 0, 0) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
setns(any, CLONE_NEWNS) @ ld-musl-aarch64.so.1+0x25150(setns+20)
statx(AT_FDCWD, non-NULL, AT_NO_AUTOMOUNT|AT_STATX_DONT_SYNC, STATX_TYPE|STATX_MODE|STATX_INO, any) @ ld-musl-aarch64.so.1+0x25224(statx+28)
open_tree(any u32, any, 0x1-0x80001) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
open_tree(AT_FDCWD, non-NULL, 0x88001) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
move_mount(any u32, libmount.so.1+0x3550d, AT_FDCWD, any, 4) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
move_mount(any u32, libmount.so.1+0x3550d, -1 as u32, non-NULL, 4) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
fsopen(any, 1) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
fsconfig(any u32, 0, any, 0, 0) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
fsconfig(any u32, 1, any, non-NULL, 0) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
fsconfig(any u32, 0x6-0x7, 0, 0, 0) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
fsmount(any u32, 1, 0) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
fspick(any u32, libmount.so.1+0x3550d, 12) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
mount_setattr(any u32, libmount.so.1+0x3550d, 0x1000, any, 32) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
mount_setattr(any u32, libmount.so.1+0x3550d, 0x9000, any, 32) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
mount_setattr(-1 as u32, 0, 0, 0, 0) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
