callander: permitted syscalls: getxattr(non-NULL, libcap.so.2+0x6dee, any, 24) @ ld-musl-aarch64.so.1+0x254e0(getxattr+4)
epoll_create1(EPOLL_CLOEXEC) @ ld-musl-aarch64.so.1+0x24838(epoll_create1+16)
epoll_ctl(any, 1, any, any) @ ld-musl-aarch64.so.1+0x2488c(epoll_ctl+24)
epoll_ctl(any, 2, any, 0) @ ld-musl-aarch64.so.1+0x2488c(epoll_ctl+24)
epoll_pwait(any, any, 10, -1) @ ld-musl-aarch64.so.1+0x607bc
epoll_pwait(any, any, 10, -1) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
dup(any) @ ld-musl-aarch64.so.1+0x68624(dup+16)
dup3(any, STDIN_FILENO-STDERR_FILENO, 0) @ ld-musl-aarch64.so.1+0x68650(dup2+28)
dup3(any, STDERR_FILENO, O_CLOEXEC) @ ld-musl-aarch64.so.1+0x686b8(dup3+28)
fcntl(any, F_GETFD, 0) @ ld-musl-aarch64.so.1+0x21028(fcntl+140)
fcntl(any, F_SETFD, any u32) @ ld-musl-aarch64.so.1+0x21028(fcntl+140)
fcntl(any, F_GETFL, any) @ ld-musl-aarch64.so.1+0x21028(fcntl+140)
fcntl(any, F_SETFL, any u32) @ ld-musl-aarch64.so.1+0x21028(fcntl+140)
fcntl(STDIN_FILENO-STDERR_FILENO, F_DUPFD_CLOEXEC, 2) @ ld-musl-aarch64.so.1+0x21090(fcntl+244)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x210b0(fcntl+276)
fcntl(STDIN_FILENO-STDERR_FILENO, F_DUPFD_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x210c8(fcntl+300)
fcntl(STDIN_FILENO-STDERR_FILENO, F_DUPFD, 2) @ ld-musl-aarch64.so.1+0x210fc(fcntl+352)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x21194(open+136)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x3fbbc(accept4+232)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x461c4(socket+132)
fcntl(any, F_SETFL, 2048) @ ld-musl-aarch64.so.1+0x461dc(socket+156)
fcntl(any u32, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x462cc(socketpair+208)
fcntl(any u32, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x462d4(socketpair+216)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x52cac(fstatat+88)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x531ec(fdopen+120)
fcntl(any, F_GETFL, any) @ ld-musl-aarch64.so.1+0x532d4(fdopen+352)
fcntl(any, F_SETFL, any) @ ld-musl-aarch64.so.1+0x532ec(fdopen+376)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x53404(__fopen_rb_ca*+96)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x54b00(fopen+116)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x68684(dup2+80)
fcntl(any, F_GETFD, any u32) @ ld-musl-aarch64.so.1+0x689ac(fchown+68)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x68f88(pipe2+180)
fcntl(any u32, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x68f90(pipe2+188)
ioctl(any, LOOP_SET_FD, any u32) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, LOOP_SET_STATUS64-LOOP_GET_STATUS64, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, LOOP_CTL_GET_FREE, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, TCGETS, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, TCSETSF, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, TIOCGWINSZ-TIOCSWINSZ, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, SIOCGIFNAME, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, SIOCSIFHWADDR, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, SIOCGIFHWADDR, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, SIOCGIFINDEX, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, SIOCBRADDIF, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, TIOCSPTLCK, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, SECCOMP_IOCTL_NOTIF_ID_VALID, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, FS_IOC_SETFLAGS, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, BTRFS_IOC_SUBVOL_CREATE-BTRFS_IOC_SNAP_DESTROY, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, BTRFS_IOC_SNAP_CREATE_V2, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, TIOCGPTN, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, BLKGETSIZE64, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, SECCOMP_IOCTL_NOTIF_ID_VALID_WRONG_DIR, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, FS_IOC_GETFLAGS, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, BTRFS_IOC_SPACE_INFO, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, SECCOMP_IOCTL_NOTIF_SEND, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, SECCOMP_IOCTL_NOTIF_RECV, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, BTRFS_IOC_TREE_SEARCH-BTRFS_IOC_INO_LOOKUP, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x5322c(fdopen+184)
ioctl(any u32, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x53910(__stdout_write*+56)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x68d18(isatty+24)
mkdirat(AT_FDCWD, any, 0700) @ ld-musl-aarch64.so.1+0x52e5c(mkdir+24)
mkdirat(AT_FDCWD, any, 0755) @ ld-musl-aarch64.so.1+0x52e5c(mkdir+24)
unlinkat(AT_FDCWD, any, AT_REMOVEDIR) @ ld-musl-aarch64.so.1+0x691c4(rmdir+24)
unlinkat(AT_FDCWD, any, 0) @ ld-musl-aarch64.so.1+0x695d0(unlink+24)
renameat(AT_FDCWD, any, AT_FDCWD, any) @ ld-musl-aarch64.so.1+0x57228(rename+28)
umount2(non-NULL, 0) @ ld-musl-aarch64.so.1+0x24d10(umount+16)
umount2(any, MNT_DETACH) @ ld-musl-aarch64.so.1+0x24d30(umount2+16)
mount(any, any, any, any, any) @ ld-musl-aarch64.so.1+0x24cf0(mount+12)
statfs(any, any) @ ld-musl-aarch64.so.1+0x52f34(statfs+36)
statfs(non-NULL, any) @ ld-musl-aarch64.so.1+0x52fb0(statvfs+52)
faccessat(AT_FDCWD, any, F_OK-X_OK) @ ld-musl-aarch64.so.1+0x684f4(access+28)
chroot(any) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
fchmodat(AT_FDCWD, any, 0777) @ ld-musl-aarch64.so.1+0x52a14(chmod+24)
fchownat(AT_FDCWD, any, any u32, any u32, 0) @ ld-musl-aarch64.so.1+0x689e0(fchown+120)
fchown(any, any u32, any u32) @ ld-musl-aarch64.so.1+0x68990(fchown+40)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9edb8, O_RDWR|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x2055c(__init_libc*+424)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9f1d0, O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x533e4(__fopen_rb_ca*+64)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9f1e0, O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x533e4(__fopen_rb_ca*+64)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9f268, O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x533e4(__fopen_rb_ca*+64)
openat(AT_FDCWD, any, O_RDONLY, any) @ ld-musl-aarch64.so.1+0x54adc(fopen+80)
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x54adc(fopen+80)
openat(any, any, O_RDONLY-63|O_CREAT|O_EXCL|O_NOCTTY|O_TRUNC|O_APPEND|O_NONBLOCK|O_DSYNC|O_ASYNC|O_DIRECTORY|O_LARGEFILE|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x607bc
openat(0xfffffffffffffff7, any, O_RDONLY|O_DIRECTORY|O_LARGEFILE|O_NOFOLLOW|O_CLOEXEC|O_PATH, any) @ ld-musl-aarch64.so.1+0x607bc
openat(any, any, O_RDONLY-63|O_CREAT|O_EXCL|O_NOCTTY|O_TRUNC|O_APPEND|O_NONBLOCK|O_DSYNC|O_ASYNC|O_DIRECTORY|O_LARGEFILE|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
openat(0xfffffffffffffff7, any, O_RDONLY|O_DIRECTORY|O_LARGEFILE|O_NOFOLLOW|O_CLOEXEC|O_PATH, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
openat(AT_FDCWD, any, O_RDONLY|O_NONBLOCK|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x64f04(__map_file*+36)
close(any) @ ld-musl-aarch64.so.1+0x1ff0c(opendir+72)
close(STDIN_FILENO-0xffffffffffffffe9) @ ld-musl-aarch64.so.1+0x210e0(fcntl+324)
close(0xffffffffffffffeb--1) @ ld-musl-aarch64.so.1+0x210e0(fcntl+324)
close(any) @ ld-musl-aarch64.so.1+0x4214c(if_indextoname+84)
close(any) @ ld-musl-aarch64.so.1+0x424c4(if_nametoindex+92)
close(STDIN_FILENO-0xfffffffffffffffe) @ ld-musl-aarch64.so.1+0x44be4(cleanup*+36)
close(any u32) @ ld-musl-aarch64.so.1+0x456ac(__res_msend_rc*+2544)
close(any) @ ld-musl-aarch64.so.1+0x53608(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x54b50(fopen+196)
close(any) @ ld-musl-aarch64.so.1+0x607bc
close(any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
close(any) @ ld-musl-aarch64.so.1+0x64f30(__map_file*+80)
close(any) @ ld-musl-aarch64.so.1+0x64f7c(__map_file*+156)
pipe2(any, 0) @ ld-musl-aarch64.so.1+0x68ec4(pipe+16)
pipe2(any, O_CLOEXEC) @ ld-musl-aarch64.so.1+0x68ef4(pipe2+32)
getdents64(any u32, any, 2048) @ ld-musl-aarch64.so.1+0x1ff6c(readdir+80)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x68de8(lseek+12)
read(any u32, any, any) @ ld-musl-aarch64.so.1+0x53780(__stdio_read*+144)
read(any, any, any) @ ld-musl-aarch64.so.1+0x607bc
read(any, any, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
write(any, any, any) @ ld-musl-aarch64.so.1+0x607bc
write(any, any, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
readv(any u32, any, 2) @ ld-musl-aarch64.so.1+0x5373c(__stdio_read*+76)
writev(any u32, any, any) @ ld-musl-aarch64.so.1+0x53898(__stdio_write*+188)
ppoll(any, 3, any, 0, 8) @ ld-musl-aarch64.so.1+0x2050c(__init_libc*+344)
ppoll(any, any u32, any, 0, 8) @ ld-musl-aarch64.so.1+0x607bc
ppoll(any, any u32, any, 0, 8) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
signalfd4(-1, any, 8, SFD_CLOEXEC) @ ld-musl-aarch64.so.1+0x251dc(signalfd+24)
readlinkat(AT_FDCWD, any, any, 0x1000) @ ld-musl-aarch64.so.1+0x690cc(readlink+40)
newfstatat(any, any, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x52cc4(fstatat+112)
newfstatat(AT_FDCWD, any, any, 0) @ ld-musl-aarch64.so.1+0x52cfc(fstatat+168)
newfstatat(any, ld-musl-aarch64.so.1+0x9f398, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x52d18(fstatat+196)
newfstatat(AT_FDCWD, any, any, 0) @ ld-musl-aarch64.so.1+0x52d18(fstatat+196)
newfstatat(AT_FDCWD, any, any, AT_SYMLINK_NOFOLLOW) @ ld-musl-aarch64.so.1+0x52d18(fstatat+196)
fstat(any, any) @ ld-musl-aarch64.so.1+0x52c90(fstatat+60)
fsync(any) @ ld-musl-aarch64.so.1+0x607bc
fsync(any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
capget(any, any) @ ld-musl-aarch64.so.1+0x24624(capget+12)
capset(any, any) @ ld-musl-aarch64.so.1+0x24608(capset+12)
capset(any, any) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
exit(any) @ ld-musl-aarch64.so.1+0x6075c
exit(any) @ ld-musl-aarch64.so.1+0x60794
exit(0) @ ld-musl-aarch64.so.1+0x62314(pthread_exit+416)
exit_group(any) @ ld-musl-aarch64.so.1+0x20c50(_Exit+12)
set_tid_address(ld-musl-aarch64.so.1+0xc2e78(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x48730(__post_Fork*+44)
unshare(CLONE_NEWNS) @ ld-musl-aarch64.so.1+0x2544c(unshare+16)
unshare(CLONE_NEWUSER) @ ld-musl-aarch64.so.1+0x2544c(unshare+16)
futex(any, FUTEX_WAIT, any, 0, any, any u32)
futex(any, any, 0-INT_MAX, any, any u32, INT_MAX)
futex(any, any, any, 0, any u32, 0)
futex(any, any, any, any, 0, 0)
futex(any, any, 1, any, any, any)
futex(any, FUTEX_WAKE, INT_MAX, any, any, any)
futex(any, FUTEX_REQUEUE, 0, 1, any, any)
futex(any, FUTEX_LOCK_PI-FUTEX_UNLOCK_PI, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any, any u32)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, any, any)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG-FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(ld-musl-aarch64.so.1+0xc1e90(exit_sem*), any, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1e90(exit_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1eb0(caller_sem*), any, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1eb0(caller_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1ed0(target_sem*), any, INT_MAX, 0, ld-musl-aarch64.so.1+0xc1ed0(target_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), any, non-NULL, 0, any u32, ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2e78(__thread_list_lock*), any, non-NULL, 0, any u32, ld-musl-aarch64.so.1+0xc2ed0(tl_lock_waiters*))
set_robust_list(0, 24) @ ld-musl-aarch64.so.1+0x62340(pthread_exit+460)
set_robust_list(any, 24) @ ld-musl-aarch64.so.1+0x63454(__pthread_mutex_trylock_owner*+92)
nanosleep(any, any) @ ld-musl-aarch64.so.1+0x607bc
nanosleep(any, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
setitimer(ITIMER_REAL, any, any) @ ld-musl-aarch64.so.1+0x520a8(setitimer+16)
clock_gettime(any, any) @ ld-musl-aarch64.so.1+0x666e4(clock_gettime+60)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(CLOCK_MONOTONIC, any) @ ld-musl-aarch64.so.1+0x66610(clock_getres+16)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
sched_getaffinity(0, 128, any) @ ld-musl-aarch64.so.1+0x1c390(sysconf+432)
sched_yield() @ ld-musl-aarch64.so.1+0x51214(sched_yield+12)
restart_syscall()
kill(any, SIGKILL) @ ld-musl-aarch64.so.1+0x250dc(do_setgroups*+92)
kill(any, any) @ ld-musl-aarch64.so.1+0x51f28(kill+20)
kill(any, SIGKILL) @ ld-musl-aarch64.so.1+0x69324(do_setxid*+92)
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x20cb8(abort+84)
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x52074(raise+44)
tkill(any u32, SIGSETXID) @ ld-musl-aarch64.so.1+0x612f4(cancel_handler*+132)
tkill(non-NULL, SIGSETXID) @ ld-musl-aarch64.so.1+0x6307c(pthread_kill+68)
tkill(any, SIGSYNCCALL) @ ld-musl-aarch64.so.1+0x64c24(__synccall*+396)
rt_sigaction(SIGABRT, any, 0, 8) @ ld-musl-aarch64.so.1+0x20ca4(abort+64)
rt_sigaction(any, any, any, 8) @ ld-musl-aarch64.so.1+0x52154(__libc_sigaction*+140)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x20cd0(abort+108)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa0ff8(all_mask*), any, 8) @ ld-musl-aarch64.so.1+0x51eb0(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa0ff0(app_mask*), any, 8) @ ld-musl-aarch64.so.1+0x51ed0(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x51eec(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x52220(__libc_sigaction*+344)
rt_sigprocmask(SIG_BLOCK-SIG_SETMASK, any, any, 8) @ ld-musl-aarch64.so.1+0x641a8(pthread_sigmask+24)
rt_sigreturn(any) @ ld-musl-aarch64.so.1+0x51e6c
setgid(any) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
setgid(any) @ ld-musl-aarch64.so.1+0x692e8(do_setxid*+32)
setuid(any) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
setuid(any) @ ld-musl-aarch64.so.1+0x692e8(do_setxid*+32)
setgroups(any, any) @ ld-musl-aarch64.so.1+0x250a0(do_setgroups*+32)
setgroups(any, any) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
setgroups(any, any) @ ld-musl-aarch64.so.1+0x692e8(do_setxid*+32)
getrlimit(RLIMIT_NOFILE, any) @ ld-musl-aarch64.so.1+0x3c72c(getrlimit+88)
umask(any u32) @ ld-musl-aarch64.so.1+0x530f8(umask+16)
prctl(PR_CAPBSET_READ, any, any, any, any) @ ld-musl-aarch64.so.1+0x24df0(prctl+48)
prctl(PR_SET_MM, 14, any, 104, 0) @ ld-musl-aarch64.so.1+0x24df0(prctl+48)
prctl(any, any, any, any, any) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
gettimeofday(any, 0) @ ld-musl-aarch64.so.1+0x66704(clock_gettime+92)
gettimeofday(non-NULL, any) @ [vdso]+0x658(__kernel_gettimeofday+256)
getpid() @ ld-musl-aarch64.so.1+0x250d0(do_setgroups*+80)
getpid() @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
getpid() @ ld-musl-aarch64.so.1+0x68cc0(getpid+4)
getpid() @ ld-musl-aarch64.so.1+0x69318(do_setxid*+80)
getuid() @ ld-musl-aarch64.so.1+0x68cf8(getuid+4)
geteuid() @ ld-musl-aarch64.so.1+0x68b70(geteuid+4)
getegid() @ ld-musl-aarch64.so.1+0x68b64(getegid+4)
gettid() @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
gettid() @ ld-musl-aarch64.so.1+0x64b68(__synccall*+208)
sysinfo(any) @ ld-musl-aarch64.so.1+0x253ac(sysinfo+12)
socket(any, SOCK_STREAM, 0) @ ld-musl-aarch64.so.1+0x46168(socket+40)
socket(any, SOCK_STREAM|SOCK_CLOEXEC-SOCK_RAW|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x46168(socket+40)
socket(any, SOCK_DGRAM|SOCK_CLOEXEC, 17) @ ld-musl-aarch64.so.1+0x46168(socket+40)
socket(any, SOCK_STREAM|SOCK_NONBLOCK|SOCK_CLOEXEC-SOCK_DGRAM|SOCK_NONBLOCK|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x46168(socket+40)
socket(AF_UNIX, SOCK_SEQPACKET|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x46168(socket+40)
socket(any, 0-SOCK_DGRAM|SOCK_NONBLOCK|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x461a0(socket+96)
socket(any, SOCK_DGRAM, 17) @ ld-musl-aarch64.so.1+0x461a0(socket+96)
socketpair(AF_UNIX, SOCK_STREAM, 0, any) @ ld-musl-aarch64.so.1+0x46238(socketpair+60)
socketpair(AF_UNIX, SOCK_STREAM|SOCK_CLOEXEC, 0, any) @ ld-musl-aarch64.so.1+0x46238(socketpair+60)
socketpair(AF_UNIX, SOCK_STREAM, 0, any) @ ld-musl-aarch64.so.1+0x462a8(socketpair+172)
bind(any, any, any u32) @ ld-musl-aarch64.so.1+0x3fbe8(bind+32)
listen(any, 30) @ ld-musl-aarch64.so.1+0x42c80(listen+36)
listen(any, 128) @ ld-musl-aarch64.so.1+0x42c80(listen+36)
accept(any, any, any) @ ld-musl-aarch64.so.1+0x607bc
accept(any, any, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
connect(any, any, any u32) @ ld-musl-aarch64.so.1+0x607bc
connect(any, any, any u32) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
getsockname(any, any, any) @ ld-musl-aarch64.so.1+0x41fe0(getsockname+28)
sendto(any, any, any, 0, 0, 0) @ ld-musl-aarch64.so.1+0x607bc
sendto(any, any, any, MSG_NOSIGNAL, any, any u32) @ ld-musl-aarch64.so.1+0x607bc
sendto(any, any, any, 0, 0, 0) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
sendto(any, any, any, MSG_NOSIGNAL, any, any u32) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
recvfrom(any, any, 0x2000, MSG_DONTWAIT, 0, 0) @ ld-musl-aarch64.so.1+0x607bc
recvfrom(any, any, 0x2000, MSG_DONTWAIT, 0, 0) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
setsockopt(any, SOL_SOCKET, SO_REUSEADDR, any, 4) @ ld-musl-aarch64.so.1+0x460cc(setsockopt+32)
setsockopt(any, SOL_SOCKET, SO_SNDBUF-SO_RCVBUF, any, 4) @ ld-musl-aarch64.so.1+0x460cc(setsockopt+32)
setsockopt(any, SOL_SOCKET, 0x14-0x15, any, 16) @ ld-musl-aarch64.so.1+0x460cc(setsockopt+32)
setsockopt(any, SOL_TCP, SO_DEBUG, any, 4) @ ld-musl-aarch64.so.1+0x460cc(setsockopt+32)
setsockopt(any, SOL_TCP, TCP_FASTOPEN_CONNECT, any, 4) @ ld-musl-aarch64.so.1+0x460cc(setsockopt+32)
setsockopt(any, SOL_IPV6, 0x1a, any, 4) @ ld-musl-aarch64.so.1+0x460cc(setsockopt+32)
setsockopt(any, SOL_NETLINK, TCP_QUICKACK, any, 4) @ ld-musl-aarch64.so.1+0x460cc(setsockopt+32)
getsockopt(any, SOL_SOCKET, 0x11, any, any) @ ld-musl-aarch64.so.1+0x4200c(getsockopt+28)
getsockopt(any, SOL_SOCKET, 0x1f, any, any) @ ld-musl-aarch64.so.1+0x4200c(getsockopt+28)
getsockopt(any, SOL_SOCKET, 0x3b, non-NULL, any) @ ld-musl-aarch64.so.1+0x4200c(getsockopt+28)
sendmsg(any, any, MSG_NOSIGNAL) @ ld-musl-aarch64.so.1+0x607bc
sendmsg(any, any, MSG_NOSIGNAL|MSG_FASTOPEN) @ ld-musl-aarch64.so.1+0x607bc
sendmsg(any, any, MSG_NOSIGNAL) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
sendmsg(any, any, MSG_NOSIGNAL|MSG_FASTOPEN) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
recvmsg(any, any, 0) @ ld-musl-aarch64.so.1+0x607bc
recvmsg(any, any, MSG_TRUNC) @ ld-musl-aarch64.so.1+0x607bc
recvmsg(any, any, MSG_CMSG_CLOEXEC) @ ld-musl-aarch64.so.1+0x607bc
recvmsg(any, any, 0) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
recvmsg(any, any, MSG_TRUNC) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
recvmsg(any, any, MSG_CMSG_CLOEXEC) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
brk(any) @ ld-musl-aarch64.so.1+0x29954(__malloc_alloc_meta*+336)
brk(0) @ ld-musl-aarch64.so.1+0x29a2c(__malloc_alloc_meta*+552)
brk(any) @ ld-musl-aarch64.so.1+0x29a4c(__malloc_alloc_meta*+584)
brk(0) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
munmap(any, any) @ ld-musl-aarch64.so.1+0x3e718(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x60754
mremap(any, NULL-0xfffffffffffff000, NULL-0xfffffffffffff000, MREMAP_MAYMOVE, 0) @ ld-musl-aarch64.so.1+0x3e628(mremap+48)
clone(SIGCHLD, 0, 0, any, any) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
clone(SIGCHLD|CLONE_NEWUSER, 0, 0, any, any) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
clone(SIGCHLD, 0, any, any, any) @ ld-musl-aarch64.so.1+0x487c0(_Fork+48)
clone(SIGCHLD|CLONE_NEWUSER, any, 0, 0, 0) @ ld-musl-aarch64.so.1+0x6077c
mmap(0, any, PROT_NONE-PROT_READ, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mmap(0, any, PROT_READ, MAP_SHARED, any, 0) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_POPULATE, any, 0) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mmap(NULL-0xfffffffffffffffe, any, PROT_READ, MAP_PRIVATE|MAP_FIXED, any, any) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mmap(any, any, PROT_NONE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, any) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mprotect(any, any, PROT_READ|PROT_WRITE) @ ld-musl-aarch64.so.1+0x3e5e8(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x6b0bc(reloc_all*+268)
accept4(any, any, any, SOCK_CLOEXEC) @ ld-musl-aarch64.so.1+0x607bc
accept4(any, any, any, SOCK_CLOEXEC) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
wait4(any, any, 0, 0) @ ld-musl-aarch64.so.1+0x607bc
wait4(any, any, 0, 0) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
prlimit64(0, RLIMIT_NOFILE, 0, any) @ ld-musl-aarch64.so.1+0x3c700(getrlimit+44)
seccomp(SECCOMP_SET_MODE_STRICT, 0x1-0x2, 0) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
seccomp(SECCOMP_SET_MODE_FILTER, 4, 0) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
seccomp(SECCOMP_SET_MODE_FILTER, 8, 0) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
seccomp(SECCOMP_SET_MODE_FILTER, 16, 0) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
seccomp(SECCOMP_GET_ACTION_AVAIL, 0, any) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
seccomp(0x3, 0, any) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
getrandom(any, 4, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x607bc
getrandom(any, 8, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x607bc
getrandom(any, 10, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x607bc
getrandom(any, 12, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x607bc
getrandom(any, 16, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x607bc
getrandom(any, 24, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x607bc
getrandom(any, 4, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
getrandom(any, 8, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
getrandom(any, 10, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
getrandom(any, 12, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
getrandom(any, 16, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
getrandom(any, 24, GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
memfd_create(liblxc.so.1+0xe4a34, MFD_CLOEXEC) @ ld-musl-aarch64.so.1+0x24c70(memfd_create+16)
bpf(BPF_PROG_LOAD, any, 120) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
bpf(0x8, any, 120) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
bpf(0x9, any, 120) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
pidfd_send_signal(any u32, any u32, 0, 0) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
open_tree(any u32, liblxc.so.1+0xe254a, 0x81001) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
open_tree(any u32, liblxc.so.1+0xe254a, 0x89001) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
open_tree(0xfffffff7, 0, 0) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
move_mount(any u32, liblxc.so.1+0xe254a, any u32, liblxc.so.1+0xe254a, 68) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
move_mount(0xfffffff7, 0, 0xfffffff7, 0, 0) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
fsopen(0, 0) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
fsconfig(0xfffffff7, 0xffffffea, 0, 0, 0) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
fsmount(0xfffffff7, 0, 0) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
clone3(any, 64) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
close_range(3, -1 as u32, 2) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
openat2(any u32, any, any, 24) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
openat2(0xfffffff7, liblxc.so.1+0xe254a, 0, 0) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
mount_setattr(any u32, liblxc.so.1+0xe254a, 0x1000, any, 32) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
mount_setattr(any u32, liblxc.so.1+0xe254a, 0x9000, any, 32) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
mount_setattr(0xfffffff7, 0, 0, 0, 0) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
