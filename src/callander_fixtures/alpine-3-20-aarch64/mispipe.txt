callander: permitted syscalls: dup(any) @ ld-musl-aarch64.so.1+0x49170(child*+444)
dup3(any, any, 0) @ ld-musl-aarch64.so.1+0x491cc(child*+536)
dup3(any, any, 0) @ ld-musl-aarch64.so.1+0x492c0(child*+780)
dup3(any, STDIN_FILENO-STDOUT_FILENO, 0) @ ld-musl-aarch64.so.1+0x68650(dup2+28)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x49250(child*+668)
fcntl(any, F_SETFD, NULL-0xfffffffffffffffe) @ ld-musl-aarch64.so.1+0x4926c(child*+696)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x49318(child*+868)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x68684(dup2+80)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x68f88(pipe2+180)
fcntl(any u32, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x68f90(pipe2+188)
ioctl(any u32, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x53910(__stdout_write*+56)
chdir(any) @ ld-musl-aarch64.so.1+0x492e4(child*+816)
fchdir(any u32) @ ld-musl-aarch64.so.1+0x49224(child*+624)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9edb8, O_RDWR|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x2055c(__init_libc*+424)
openat(AT_FDCWD, any, any, any) @ ld-musl-aarch64.so.1+0x49294(child*+736)
close(any) @ ld-musl-aarch64.so.1+0x49184(child*+464)
close(any u32) @ ld-musl-aarch64.so.1+0x491e4(child*+560)
close(any) @ ld-musl-aarch64.so.1+0x492d4(child*+800)
close(any) @ ld-musl-aarch64.so.1+0x53608(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x607bc
close(any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
pipe2(any, 0) @ ld-musl-aarch64.so.1+0x68ec4(pipe+16)
pipe2(any, O_CLOEXEC) @ ld-musl-aarch64.so.1+0x68ef4(pipe2+32)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x68de8(lseek+12)
read(any u32, any, any) @ ld-musl-aarch64.so.1+0x53780(__stdio_read*+144)
read(any, any, 4) @ ld-musl-aarch64.so.1+0x607bc
read(any, any, 4) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
write(any, any, 4) @ ld-musl-aarch64.so.1+0x4914c(child*+408)
readv(any u32, any, 2) @ ld-musl-aarch64.so.1+0x5373c(__stdio_read*+76)
writev(any u32, any, any) @ ld-musl-aarch64.so.1+0x53898(__stdio_write*+188)
ppoll(any, 3, any, 0, 8) @ ld-musl-aarch64.so.1+0x2050c(__init_libc*+344)
exit(any) @ ld-musl-aarch64.so.1+0x6075c
exit(any) @ ld-musl-aarch64.so.1+0x60794
exit(0) @ ld-musl-aarch64.so.1+0x62314(pthread_exit+416)
exit_group(any) @ ld-musl-aarch64.so.1+0x20c50(_Exit+12)
set_tid_address(ld-musl-aarch64.so.1+0xc2e78(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x48730(__post_Fork*+44)
futex(any, FUTEX_WAIT, any, 0, any, any u32)
futex(any, any, any, 0, 0, 0)
futex(any, any, 1, any, any, any)
futex(any, any, non-NULL, 0, any u32, 0)
futex(any, FUTEX_REQUEUE, 0, 1, ld-musl-aarch64.so.1+0xc2ab4, any)
futex(any, FUTEX_LOCK_PI-FUTEX_UNLOCK_PI, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any, any u32)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, ld-musl-aarch64.so.1+0xc2ab4, any)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG-FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(ld-musl-aarch64.so.1+0xc1fd0(maplock*), any, 0-INT_MAX, ld-musl-aarch64.so.1+0xc1fd0(maplock*), any u32, INT_MAX)
futex(ld-musl-aarch64.so.1+0xc25e0(lock*), any, 0-INT_MAX, ld-musl-aarch64.so.1+0xc25e0(lock*), any u32, INT_MAX)
futex(ld-musl-aarch64.so.1+0xc2628(key_lock*), any, 0-INT_MAX, ld-musl-aarch64.so.1+0xc2628(key_lock*), any u32, INT_MAX)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), any, non-NULL, 0, any u32, ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2a88, FUTEX_WAKE, INT_MAX, ld-musl-aarch64.so.1+0xc2a88, any, any)
futex(ld-musl-aarch64.so.1+0xc2b20(lock*), any, 0-INT_MAX, ld-musl-aarch64.so.1+0xc2b20(lock*), any u32, INT_MAX)
futex(ld-musl-aarch64.so.1+0xc2e78(__thread_list_lock*), any, non-NULL, 0, any u32, ld-musl-aarch64.so.1+0xc2ed0(tl_lock_waiters*))
set_robust_list(0, 24) @ ld-musl-aarch64.so.1+0x62340(pthread_exit+460)
set_robust_list(any, 24) @ ld-musl-aarch64.so.1+0x63454(__pthread_mutex_trylock_owner*+92)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
restart_syscall()
tkill(any u32, SIGSETXID) @ ld-musl-aarch64.so.1+0x612f4(cancel_handler*+132)
tkill(non-NULL, SIGSETXID) @ ld-musl-aarch64.so.1+0x6307c(pthread_kill+68)
rt_sigaction(any, any, any, 8) @ ld-musl-aarch64.so.1+0x52154(__libc_sigaction*+140)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa0ff8(all_mask*), any, 8) @ ld-musl-aarch64.so.1+0x51eb0(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa0ff0(app_mask*), any, 8) @ ld-musl-aarch64.so.1+0x51ed0(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x51eec(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x52220(__libc_sigaction*+344)
rt_sigprocmask(SIG_BLOCK, any, any, 8) @ ld-musl-aarch64.so.1+0x641a8(pthread_sigmask+24)
rt_sigreturn(any) @ ld-musl-aarch64.so.1+0x51e6c
setgid(any) @ ld-musl-aarch64.so.1+0x49104(child*+336)
setgid(any) @ ld-musl-aarch64.so.1+0x692e8(do_setxid*+32)
setuid(any) @ ld-musl-aarch64.so.1+0x4911c(child*+360)
setuid(any) @ ld-musl-aarch64.so.1+0x692e8(do_setxid*+32)
setpgid(0, any u32) @ ld-musl-aarch64.so.1+0x490e4(child*+304)
setsid() @ ld-musl-aarch64.so.1+0x490c4(child*+272)
gettimeofday(non-NULL, any) @ [vdso]+0x658(__kernel_gettimeofday+256)
getuid() @ ld-musl-aarch64.so.1+0x49114(child*+352)
getgid() @ ld-musl-aarch64.so.1+0x490fc(child*+328)
brk(any) @ ld-musl-aarch64.so.1+0x29954(__malloc_alloc_meta*+336)
brk(0) @ ld-musl-aarch64.so.1+0x29a2c(__malloc_alloc_meta*+552)
brk(any) @ ld-musl-aarch64.so.1+0x29a4c(__malloc_alloc_meta*+584)
munmap(any, non-NULL) @ ld-musl-aarch64.so.1+0x3e718(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x60754
clone(SIGCHLD, 0, any, any, any) @ ld-musl-aarch64.so.1+0x487c0(_Fork+48)
clone(SIGCHLD|CLONE_VM|CLONE_VFORK, any, any, any, any) @ ld-musl-aarch64.so.1+0x6077c
mmap(0, any, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mmap(any, any, PROT_NONE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, any) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mprotect(any, any, PROT_READ|PROT_WRITE) @ ld-musl-aarch64.so.1+0x3e5e8(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x6b0bc(reloc_all*+268)
wait4(any, any, 0, 0) @ ld-musl-aarch64.so.1+0x607bc
wait4(0x1-0xfffffffffffffffe, 0, WUNTRACED, 0) @ ld-musl-aarch64.so.1+0x607bc
wait4(any, any, 0, 0) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
wait4(0x1-0xfffffffffffffffe, 0, WUNTRACED, 0) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
