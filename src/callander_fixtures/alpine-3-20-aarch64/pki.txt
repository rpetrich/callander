callander: permitted syscalls: dup(any) @ ld-musl-aarch64.so.1+0x68624(dup+16)
fcntl(any, F_GETFL, any) @ ld-musl-aarch64.so.1+0x21028(fcntl+140)
fcntl(any, F_SETFL, NULL-0xfffffffe) @ ld-musl-aarch64.so.1+0x21028(fcntl+140)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x21194(open+136)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x461c4(socket+132)
fcntl(any, F_SETFL, 2048) @ ld-musl-aarch64.so.1+0x461dc(socket+156)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x52cac(fstatat+88)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x531ec(fdopen+120)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x53404(__fopen_rb_ca*+96)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x54b00(fopen+116)
ioctl(any, TCGETS, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, TCSETSF, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, SIOCGIFINDEX, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x5322c(fdopen+184)
ioctl(any u32, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x53910(__stdout_write*+56)
ioctl(any, TCSBRK, 1) @ ld-musl-aarch64.so.1+0x607bc
ioctl(any, TCSBRK, 1) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
unlinkat(AT_FDCWD, any, 0) @ ld-musl-aarch64.so.1+0x695d0(unlink+24)
chroot(any) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
fchownat(AT_FDCWD, any, any u32, any u32, 0) @ ld-musl-aarch64.so.1+0x685a4(chown+36)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9edb8, O_RDWR|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x2055c(__init_libc*+424)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9f1d0, O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x533e4(__fopen_rb_ca*+64)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9f268, O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x533e4(__fopen_rb_ca*+64)
openat(AT_FDCWD, any, O_RDONLY, any) @ ld-musl-aarch64.so.1+0x54adc(fopen+80)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9edb8, O_RDONLY|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x54adc(fopen+80)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9f2e0, O_RDONLY|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x54adc(fopen+80)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9f2f0, O_RDONLY|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x54adc(fopen+80)
openat(AT_FDCWD, any, any u32, any) @ ld-musl-aarch64.so.1+0x607bc
openat(AT_FDCWD, any, any u32, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
openat(AT_FDCWD, any, O_RDONLY|O_NONBLOCK|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x64f04(__map_file*+36)
close(any) @ ld-musl-aarch64.so.1+0x1ff0c(opendir+72)
close(any) @ ld-musl-aarch64.so.1+0x424c4(if_nametoindex+92)
close(STDIN_FILENO-0xfffffffffffffffe) @ ld-musl-aarch64.so.1+0x44be4(cleanup*+36)
close(any u32) @ ld-musl-aarch64.so.1+0x456ac(__res_msend_rc*+2544)
close(any) @ ld-musl-aarch64.so.1+0x53608(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x54b50(fopen+196)
close(any) @ ld-musl-aarch64.so.1+0x607bc
close(any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
close(any) @ ld-musl-aarch64.so.1+0x64f30(__map_file*+80)
close(any) @ ld-musl-aarch64.so.1+0x64f7c(__map_file*+156)
pipe2(any, 0) @ ld-musl-aarch64.so.1+0x68ec4(pipe+16)
getdents64(any u32, any, 2048) @ ld-musl-aarch64.so.1+0x1ff6c(readdir+80)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x68de8(lseek+12)
read(any u32, any, any) @ ld-musl-aarch64.so.1+0x53780(__stdio_read*+144)
read(any, any, any) @ ld-musl-aarch64.so.1+0x607bc
read(any, any, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
write(STDIN_FILENO-0xfffffffffffffffe, any, 1) @ ld-musl-aarch64.so.1+0x607bc
write(STDIN_FILENO-0xfffffffffffffffe, any, 1) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
readv(any u32, any, 2) @ ld-musl-aarch64.so.1+0x5373c(__stdio_read*+76)
writev(any u32, any, any) @ ld-musl-aarch64.so.1+0x53898(__stdio_write*+188)
pread64(any, any, any, any) @ ld-musl-aarch64.so.1+0x607bc
pread64(any, any, any, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
ppoll(any, 3, any, 0, 8) @ ld-musl-aarch64.so.1+0x2050c(__init_libc*+344)
ppoll(any, any u32, any, 0, 8) @ ld-musl-aarch64.so.1+0x607bc
ppoll(any, any, 0, 0, 8) @ ld-musl-aarch64.so.1+0x607bc
ppoll(any, 0x29-0x41, any u16, any u16, any u16) @ ld-musl-aarch64.so.1+0x607bc
ppoll(any, any u32, any, 0, 8) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
ppoll(any, any, 0, 0, 8) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
ppoll(any, 41, any u8, any u8, any u8) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
ppoll(any, 0x2a-0x41, any u16, any u16, any u16) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
readlinkat(AT_FDCWD, ld-musl-aarch64.so.1+0x9f900, any, 512) @ ld-musl-aarch64.so.1+0x690cc(readlink+40)
newfstatat(any, any, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x52cc4(fstatat+112)
newfstatat(AT_FDCWD, any, any, 0) @ ld-musl-aarch64.so.1+0x52cfc(fstatat+168)
newfstatat(any, ld-musl-aarch64.so.1+0x9f398, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x52d18(fstatat+196)
newfstatat(AT_FDCWD, any, any, 0) @ ld-musl-aarch64.so.1+0x52d18(fstatat+196)
newfstatat(AT_FDCWD, any, any, AT_SYMLINK_NOFOLLOW) @ ld-musl-aarch64.so.1+0x52d18(fstatat+196)
fstat(any, any) @ ld-musl-aarch64.so.1+0x52c90(fstatat+60)
capget(any, any) @ ld-musl-aarch64.so.1+0x24624(capget+12)
capset(any, any) @ ld-musl-aarch64.so.1+0x24608(capset+12)
capset(any, any) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
exit(any) @ ld-musl-aarch64.so.1+0x6075c
exit(any) @ ld-musl-aarch64.so.1+0x60794
exit(0) @ ld-musl-aarch64.so.1+0x62314(pthread_exit+416)
exit(0) @ ld-musl-aarch64.so.1+0x623b8(start*+104)
exit_group(any) @ ld-musl-aarch64.so.1+0x20c50(_Exit+12)
set_tid_address(any) @ ld-musl-aarch64.so.1+0x623ac(start*+92)
futex(any, FUTEX_WAIT, any, 0, any, any u32)
futex(any, any, 0-INT_MAX, any, any u32, INT_MAX)
futex(any, any, any, 0, any u32, 0)
futex(any, any, any, any, 0, 0)
futex(any, any, 1, any, any, any)
futex(any, FUTEX_WAKE, INT_MAX, any, any, any)
futex(any, FUTEX_REQUEUE, 0, 1, any, any)
futex(any, FUTEX_LOCK_PI-FUTEX_UNLOCK_PI, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any, any u32)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, any, any)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG-FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(ld-musl-aarch64.so.1+0xc06b0(barrier_sem*), any, 0x1-0x7fffffff, 0, ld-musl-aarch64.so.1+0xc06b0(barrier_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1e90(exit_sem*), any, 0x1-0x7fffffff, 0, ld-musl-aarch64.so.1+0xc1e90(exit_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1eb0(caller_sem*), any, 0x1-0x7fffffff, 0, ld-musl-aarch64.so.1+0xc1eb0(caller_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1ed0(target_sem*), any, 0x1-0x7fffffff, 0, ld-musl-aarch64.so.1+0xc1ed0(target_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), any, non-NULL, 0, any u32, ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2e78(__thread_list_lock*), any, non-NULL, 0, any u32, ld-musl-aarch64.so.1+0xc2ed0(tl_lock_waiters*))
set_robust_list(0, 24) @ ld-musl-aarch64.so.1+0x62340(pthread_exit+460)
set_robust_list(any, 24) @ ld-musl-aarch64.so.1+0x63454(__pthread_mutex_trylock_owner*+92)
clock_gettime(any, any) @ ld-musl-aarch64.so.1+0x666e4(clock_gettime+60)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
sched_setscheduler(any u32, any, any) @ ld-musl-aarch64.so.1+0x62660(pthread_create+576)
sched_yield() @ ld-musl-aarch64.so.1+0x51214(sched_yield+12)
restart_syscall()
kill(any, SIGKILL) @ ld-musl-aarch64.so.1+0x250dc(do_setgroups*+92)
kill(any, SIGKILL) @ ld-musl-aarch64.so.1+0x69324(do_setxid*+92)
tkill(any u32, SIGSYNCCALL) @ ld-musl-aarch64.so.1+0x24bd8(membarrier+228)
tkill(any u32, SIGSETXID) @ ld-musl-aarch64.so.1+0x612f4(cancel_handler*+132)
tkill(non-NULL, any) @ ld-musl-aarch64.so.1+0x6307c(pthread_kill+68)
tkill(any, SIGSYNCCALL) @ ld-musl-aarch64.so.1+0x64c24(__synccall*+396)
rt_sigaction(SIGSETXID-SIGSYNCCALL, any, 0, 8) @ ld-musl-aarch64.so.1+0x52154(__libc_sigaction*+140)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa0ff8(all_mask*), any, 8) @ ld-musl-aarch64.so.1+0x51eb0(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa0ff0(app_mask*), any, 8) @ ld-musl-aarch64.so.1+0x51ed0(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x51eec(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x52220(__libc_sigaction*+344)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x623d4(start*+132)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x62760(pthread_create+832)
rt_sigprocmask(SIG_BLOCK, any, any, 8) @ ld-musl-aarch64.so.1+0x641a8(pthread_sigmask+24)
rt_sigreturn(any) @ ld-musl-aarch64.so.1+0x51e6c
setgid(any) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
setgid(any) @ ld-musl-aarch64.so.1+0x692e8(do_setxid*+32)
setuid(any) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
setuid(any) @ ld-musl-aarch64.so.1+0x692e8(do_setxid*+32)
getgroups(any, any) @ ld-musl-aarch64.so.1+0x68b94(getgroups+16)
setgroups(any, any) @ ld-musl-aarch64.so.1+0x250a0(do_setgroups*+32)
setgroups(any, any) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
setgroups(any, any) @ ld-musl-aarch64.so.1+0x692e8(do_setxid*+32)
getrlimit(0x20, any) @ ld-musl-aarch64.so.1+0x3c72c(getrlimit+88)
umask(any u32) @ ld-musl-aarch64.so.1+0x530f8(umask+16)
prctl(PR_SET_KEEPCAPS, 1, 0, 0, 0) @ ld-musl-aarch64.so.1+0x24df0(prctl+48)
prctl(any, any, any, any, any) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
gettimeofday(any, 0) @ ld-musl-aarch64.so.1+0x66704(clock_gettime+92)
gettimeofday(non-NULL, any) @ [vdso]+0x658(__kernel_gettimeofday+256)
getpid() @ ld-musl-aarch64.so.1+0x250d0(do_setgroups*+80)
getpid() @ ld-musl-aarch64.so.1+0x68cc0(getpid+4)
getpid() @ ld-musl-aarch64.so.1+0x69318(do_setxid*+80)
getuid() @ ld-musl-aarch64.so.1+0x68cf8(getuid+4)
geteuid() @ ld-musl-aarch64.so.1+0x68b70(geteuid+4)
getegid() @ ld-musl-aarch64.so.1+0x68b64(getegid+4)
gettid() @ ld-musl-aarch64.so.1+0x64b68(__synccall*+208)
socket(any u16, SOCK_STREAM, 0) @ ld-musl-aarch64.so.1+0x46168(socket+40)
socket(any, SOCK_DGRAM|SOCK_CLOEXEC, 17) @ ld-musl-aarch64.so.1+0x46168(socket+40)
socket(any, SOCK_STREAM|SOCK_NONBLOCK|SOCK_CLOEXEC-SOCK_DGRAM|SOCK_NONBLOCK|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x46168(socket+40)
socket(AF_UNIX, SOCK_STREAM|SOCK_CLOEXEC-SOCK_DGRAM|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x46168(socket+40)
socket(any, 0-SOCK_DGRAM|SOCK_NONBLOCK|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x461a0(socket+96)
socket(any, SOCK_DGRAM, 17) @ ld-musl-aarch64.so.1+0x461a0(socket+96)
bind(any, any, any u32) @ ld-musl-aarch64.so.1+0x3fbe8(bind+32)
listen(any, any) @ ld-musl-aarch64.so.1+0x42c80(listen+36)
accept(any, 0, 0) @ ld-musl-aarch64.so.1+0x607bc
accept(any, 0, 0) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
connect(any, any, any u32) @ ld-musl-aarch64.so.1+0x607bc
connect(any, any, any u32) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
getsockname(any, any, any) @ ld-musl-aarch64.so.1+0x41fe0(getsockname+28)
sendto(any, any, any u32, any u16, any, any u32) @ ld-musl-aarch64.so.1+0x607bc
sendto(any, any, any, 0, 0, 0) @ ld-musl-aarch64.so.1+0x607bc
sendto(any, any, any, MSG_DONTWAIT, 0, 0) @ ld-musl-aarch64.so.1+0x607bc
sendto(any, any, any u32, any u16, any, any u32) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
sendto(any, any, any, 0, 0, 0) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
sendto(any, any, any, MSG_DONTWAIT, 0, 0) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
recvfrom(any, any, any, 0, 0, 0) @ ld-musl-aarch64.so.1+0x607bc
recvfrom(any, any, any, MSG_DONTWAIT, 0, 0) @ ld-musl-aarch64.so.1+0x607bc
recvfrom(any, any, any, 0, 0, 0) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
recvfrom(any, any, any, MSG_DONTWAIT, 0, 0) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
setsockopt(any, SOL_SOCKET, SO_REUSEADDR, any, 4) @ ld-musl-aarch64.so.1+0x460cc(setsockopt+32)
setsockopt(any, IPPROTO_TCP, TCP_FASTOPEN_CONNECT, any, 4) @ ld-musl-aarch64.so.1+0x460cc(setsockopt+32)
setsockopt(any, SOL_IPV6, 0x1a, any, 4) @ ld-musl-aarch64.so.1+0x460cc(setsockopt+32)
sendmsg(any, any, any u32) @ ld-musl-aarch64.so.1+0x607bc
sendmsg(any, any, any u32) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
recvmsg(any, any, any u16) @ ld-musl-aarch64.so.1+0x607bc
recvmsg(any, any, any u16) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
brk(any) @ ld-musl-aarch64.so.1+0x29954(__malloc_alloc_meta*+336)
brk(0) @ ld-musl-aarch64.so.1+0x29a2c(__malloc_alloc_meta*+552)
brk(any) @ ld-musl-aarch64.so.1+0x29a4c(__malloc_alloc_meta*+584)
munmap(NULL-0xfffffffffffffffe, any) @ ld-musl-aarch64.so.1+0x3e718(munmap+36)
munmap(non-NULL, any) @ ld-musl-aarch64.so.1+0x3e718(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x60754
mremap(any, NULL-0xfffffffffffff000, NULL-0xfffffffffffff000, MREMAP_MAYMOVE, 0) @ ld-musl-aarch64.so.1+0x3e628(mremap+48)
clone(CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID|CLONE_DETACHED, any, any, any, ld-musl-aarch64.so.1+0xc2e78(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x6077c
mmap(0, any, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mmap(any, any, any, MAP_SHARED-MAP_PRIVATE, any, any) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mmap(any, any, any, MAP_PRIVATE|MAP_FIXED, any, any) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mmap(any, any, any, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, any) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mprotect(NULL-0xfffffffffffffffe, any, PROT_READ|PROT_WRITE|PROT_EXEC) @ ld-musl-aarch64.so.1+0x3e5e8(mprotect+56)
mprotect(any, any, PROT_READ|PROT_WRITE) @ ld-musl-aarch64.so.1+0x3e5e8(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x6b0bc(reloc_all*+268)
prlimit64(0, 0x20, 0, any) @ ld-musl-aarch64.so.1+0x3c700(getrlimit+44)
membarrier(MEMBARRIER_CMD_PRIVATE_EXPEDITED, 0) @ ld-musl-aarch64.so.1+0x24b10(membarrier+28)
membarrier(MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED, 0) @ ld-musl-aarch64.so.1+0x24c58(__membarrier_init*+12)
