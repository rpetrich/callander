callander: permitted syscalls: dup3(STDIN_FILENO, STDOUT_FILENO, 0) @ ld-musl-aarch64.so.1+0x68650(dup2+28)
dup3(STDERR_FILENO--1 as u32, STDOUT_FILENO, 0) @ ld-musl-aarch64.so.1+0x68650(dup2+28)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x21028(fcntl+140)
fcntl(any, F_GETFL, any) @ ld-musl-aarch64.so.1+0x21028(fcntl+140)
fcntl(any, F_SETFL, NULL-0xfffffffffffeffff) @ ld-musl-aarch64.so.1+0x21028(fcntl+140)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x21194(open+136)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x52cac(fstatat+88)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x531ec(fdopen+120)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x54b00(fopen+116)
fcntl(STDOUT_FILENO, F_GETFD, any) @ ld-musl-aarch64.so.1+0x68684(dup2+80)
ioctl(any, BLKGETSIZE, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, BLKFLSBUF, 0) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, BLKSSZGET, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, BLKIOMIN-BLKPBSZGET, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, CDROMMULTISESSION, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, CDROM_DRIVE_STATUS, INT_MAX) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, CDROM_GET_CAPABILITY, 0) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, CDROM_LAST_WRITTEN, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, BLKBSZSET, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, BLKGETZONESZ, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, BLKBSZGET, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, BLKGETSIZE64, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, BLKGETDISKSEQ, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, IOC_OPAL_GET_STATUS, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, EVMS_GET_STRIPE_INFO, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, XFS_IOC_DIOINFO, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, FDGETPRM, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, FDGETFDCSTAT, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, GET_ARRAY_INFO, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, XFS_IOC_FSGEOMETRY_V1, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, XFS_IOC_FSGEOMETRY_V4, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, XFS_IOC_FSGEOMETRY, any) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, BLKREPORTZONE, non-NULL) @ ld-musl-aarch64.so.1+0x3c8d0(ioctl+48)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x5322c(fdopen+184)
ioctl(any u32, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x53910(__stdout_write*+56)
fallocate(any, 16, any, any) @ ld-musl-aarch64.so.1+0x24964(fallocate+20)
faccessat(AT_FDCWD, /sbin/xfs_repair+0x6642e, R_OK) @ ld-musl-aarch64.so.1+0x684f4(access+28)
faccessat(any, libblkid.so.1+0x24bfe, F_OK) @ ld-musl-aarch64.so.1+0x6878c(faccessat+52)
faccessat(any, libblkid.so.1+0x275f6, F_OK) @ ld-musl-aarch64.so.1+0x6878c(faccessat+52)
faccessat(any, libblkid.so.1+0x27607, F_OK) @ ld-musl-aarch64.so.1+0x6878c(faccessat+52)
faccessat(any, libblkid.so.1+0x2761d, F_OK) @ ld-musl-aarch64.so.1+0x6878c(faccessat+52)
faccessat(any, libblkid.so.1+0x27633, F_OK) @ ld-musl-aarch64.so.1+0x6878c(faccessat+52)
faccessat(any, libblkid.so.1+0x2764d, F_OK) @ ld-musl-aarch64.so.1+0x6878c(faccessat+52)
faccessat(any, libblkid.so.1+0x27657, F_OK) @ ld-musl-aarch64.so.1+0x6878c(faccessat+52)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9edb8, O_RDWR|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x2055c(__init_libc*+424)
openat(AT_FDCWD, any, O_RDONLY, any) @ ld-musl-aarch64.so.1+0x54adc(fopen+80)
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x54adc(fopen+80)
openat(any, any, any, any) @ ld-musl-aarch64.so.1+0x607bc
openat(any, any, any, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
openat(AT_FDCWD, any, O_RDONLY|O_NONBLOCK|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x64f04(__map_file*+36)
close(any) @ ld-musl-aarch64.so.1+0x1ff0c(opendir+72)
close(any) @ ld-musl-aarch64.so.1+0x53608(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x54b50(fopen+196)
close(any) @ ld-musl-aarch64.so.1+0x607bc
close(any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
close(any) @ ld-musl-aarch64.so.1+0x64f30(__map_file*+80)
close(any) @ ld-musl-aarch64.so.1+0x64f7c(__map_file*+156)
pipe2(any, 0) @ ld-musl-aarch64.so.1+0x68ec4(pipe+16)
getdents64(any u32, any, 2048) @ ld-musl-aarch64.so.1+0x1ff6c(readdir+80)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x68de8(lseek+12)
read(any u32, any, any) @ ld-musl-aarch64.so.1+0x53780(__stdio_read*+144)
read(any, any, any) @ ld-musl-aarch64.so.1+0x607bc
read(any, any, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
write(any, non-NULL, any) @ ld-musl-aarch64.so.1+0x607bc
write(any, non-NULL, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
readv(any u32, any, 2) @ ld-musl-aarch64.so.1+0x5373c(__stdio_read*+76)
writev(any u32, any, any) @ ld-musl-aarch64.so.1+0x53898(__stdio_write*+188)
pread64(any, any, any, any) @ ld-musl-aarch64.so.1+0x607bc
pread64(any, any, any, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
pwrite64(any, any, any, any) @ ld-musl-aarch64.so.1+0x607bc
pwrite64(any, any, any, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
ppoll(any, 3, any, 0, 8) @ ld-musl-aarch64.so.1+0x2050c(__init_libc*+344)
ppoll(0, 0, any, 0, 8) @ ld-musl-aarch64.so.1+0x607bc
ppoll(0, 0, any, 0, 8) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
readlinkat(AT_FDCWD, any, any, 4095) @ ld-musl-aarch64.so.1+0x690cc(readlink+40)
newfstatat(any, any, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x52cc4(fstatat+112)
newfstatat(AT_FDCWD, any, any, 0) @ ld-musl-aarch64.so.1+0x52cfc(fstatat+168)
newfstatat(any, any, any, 0-AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x52d18(fstatat+196)
fstat(any, any) @ ld-musl-aarch64.so.1+0x52c90(fstatat+60)
fsync(any) @ ld-musl-aarch64.so.1+0x607bc
fsync(any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
exit(any) @ ld-musl-aarch64.so.1+0x6075c
exit(any) @ ld-musl-aarch64.so.1+0x60794
exit(0) @ ld-musl-aarch64.so.1+0x62314(pthread_exit+416)
exit(0) @ ld-musl-aarch64.so.1+0x623b8(start*+104)
exit_group(any) @ ld-musl-aarch64.so.1+0x20c50(_Exit+12)
set_tid_address(ld-musl-aarch64.so.1+0xc2e78(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x48730(__post_Fork*+44)
set_tid_address(any) @ ld-musl-aarch64.so.1+0x623ac(start*+92)
futex(any, FUTEX_WAIT, any, 0, any, any u32)
futex(any, any, any, 0, any u32, 0)
futex(any, any, 1, any, any, any)
futex(any, any, INT_MAX, 0, any, any u32)
futex(any, FUTEX_WAKE, INT_MAX, any, any, any)
futex(any, FUTEX_REQUEUE, 0, 1, any, any)
futex(any, FUTEX_LOCK_PI-FUTEX_UNLOCK_PI, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any, any u32)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, any, any)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG-FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(ld-musl-aarch64.so.1+0xc1fd0(maplock*), any, 0-INT_MAX, ld-musl-aarch64.so.1+0xc1fd0(maplock*), any u32, INT_MAX)
futex(ld-musl-aarch64.so.1+0xc25e0(lock*), any, 0-INT_MAX, ld-musl-aarch64.so.1+0xc25e0(lock*), any u32, INT_MAX)
futex(ld-musl-aarch64.so.1+0xc2628(key_lock*), any, 0-INT_MAX, ld-musl-aarch64.so.1+0xc2628(key_lock*), any u32, INT_MAX)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), any, non-NULL, 0, any u32, ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2b20(lock*), any, 0-INT_MAX, ld-musl-aarch64.so.1+0xc2b20(lock*), any u32, INT_MAX)
futex(ld-musl-aarch64.so.1+0xc2e78(__thread_list_lock*), any, non-NULL, 0, any u32, ld-musl-aarch64.so.1+0xc2ed0(tl_lock_waiters*))
set_robust_list(0, 24) @ ld-musl-aarch64.so.1+0x62340(pthread_exit+460)
set_robust_list(any, 24) @ ld-musl-aarch64.so.1+0x63454(__pthread_mutex_trylock_owner*+92)
nanosleep(any, 0) @ ld-musl-aarch64.so.1+0x607bc
nanosleep(any, 0) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
timer_create(CLOCK_REALTIME, 0, any) @ ld-musl-aarch64.so.1+0x67f20(timer_create+140)
timer_settime(any, 0, any, 0) @ ld-musl-aarch64.so.1+0x681a8(timer_settime+20)
timer_delete(any) @ ld-musl-aarch64.so.1+0x680fc(timer_delete+8)
clock_gettime(CLOCK_REALTIME, any) @ ld-musl-aarch64.so.1+0x666e4(clock_gettime+60)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
sched_setscheduler(any u32, any, any) @ ld-musl-aarch64.so.1+0x62660(pthread_create+576)
sched_setaffinity(0, 128, any) @ ld-musl-aarch64.so.1+0x51008(sched_setaffinity+16)
sched_getaffinity(0, 128, any) @ ld-musl-aarch64.so.1+0x1c390(sysconf+432)
restart_syscall()
kill(any, SIGKILL) @ ld-musl-aarch64.so.1+0x51f28(kill+20)
kill(any, SIGKILL) @ ld-musl-aarch64.so.1+0x69324(do_setxid*+92)
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x20cb8(abort+84)
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x52074(raise+44)
tkill(any u32, SIGSETXID) @ ld-musl-aarch64.so.1+0x612f4(cancel_handler*+132)
tkill(non-NULL, SIGHUP) @ ld-musl-aarch64.so.1+0x6307c(pthread_kill+68)
tkill(non-NULL, SIGSETXID) @ ld-musl-aarch64.so.1+0x6307c(pthread_kill+68)
tkill(any, SIGSYNCCALL) @ ld-musl-aarch64.so.1+0x64c24(__synccall*+396)
tkill(any u32, SIGCANCEL) @ ld-musl-aarch64.so.1+0x68128(timer_delete+52)
rt_sigaction(SIGABRT, any, 0, 8) @ ld-musl-aarch64.so.1+0x20ca4(abort+64)
rt_sigaction(SIGSETXID-SIGSYNCCALL, any, 0, 8) @ ld-musl-aarch64.so.1+0x52154(__libc_sigaction*+140)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x20cd0(abort+108)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa0ff8(all_mask*), any, 8) @ ld-musl-aarch64.so.1+0x51eb0(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa0ff0(app_mask*), any, 8) @ ld-musl-aarch64.so.1+0x51ed0(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x51eec(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x52220(__libc_sigaction*+344)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x623d4(start*+132)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x62760(pthread_create+832)
rt_sigprocmask(SIG_BLOCK, any, any, 8) @ ld-musl-aarch64.so.1+0x641a8(pthread_sigmask+24)
rt_sigtimedwait(any, any, 0, 8) @ ld-musl-aarch64.so.1+0x607bc
rt_sigtimedwait(any, any, 0, 8) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
rt_sigreturn(any) @ ld-musl-aarch64.so.1+0x51e6c
getrlimit(RLIMIT_FSIZE, any) @ ld-musl-aarch64.so.1+0x3c72c(getrlimit+88)
getrlimit(RLIMIT_AS, any) @ ld-musl-aarch64.so.1+0x3c72c(getrlimit+88)
setrlimit(any u32, any) @ ld-musl-aarch64.so.1+0x3d958(do_setrlimit*+24)
getcpu(any, 0, 0) @ ld-musl-aarch64.so.1+0x51168(sched_getcpu+24)
gettimeofday(any, 0) @ ld-musl-aarch64.so.1+0x66704(clock_gettime+92)
gettimeofday(non-NULL, any) @ [vdso]+0x658(__kernel_gettimeofday+256)
getpid() @ ld-musl-aarch64.so.1+0x68cc0(getpid+4)
getpid() @ ld-musl-aarch64.so.1+0x69318(do_setxid*+80)
getuid() @ ld-musl-aarch64.so.1+0x68cf8(getuid+4)
getgid() @ ld-musl-aarch64.so.1+0x68b7c(getgid+4)
gettid() @ ld-musl-aarch64.so.1+0x64b68(__synccall*+208)
sysinfo(any) @ ld-musl-aarch64.so.1+0x253ac(sysinfo+12)
brk(any) @ ld-musl-aarch64.so.1+0x29954(__malloc_alloc_meta*+336)
brk(0) @ ld-musl-aarch64.so.1+0x29a2c(__malloc_alloc_meta*+552)
brk(any) @ ld-musl-aarch64.so.1+0x29a4c(__malloc_alloc_meta*+584)
munmap(any, any) @ ld-musl-aarch64.so.1+0x3e718(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x60754
mremap(any, NULL-0xfffffffffffff000, NULL-0xfffffffffffff000, MREMAP_MAYMOVE, 0) @ ld-musl-aarch64.so.1+0x3e628(mremap+48)
clone(SIGCHLD, 0, any, any, any) @ ld-musl-aarch64.so.1+0x487c0(_Fork+48)
clone(CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID|CLONE_DETACHED, any, any, any, ld-musl-aarch64.so.1+0xc2e78(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x6077c
mmap(0, any, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mmap(0, any, PROT_READ, MAP_SHARED, any, 0) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mmap(any, any, PROT_NONE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, any) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
fadvise64(any, 0, 0, 1) @ ld-musl-aarch64.so.1+0x2122c(posix_fadvise+12)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x3e5e8(mprotect+56)
mprotect(any, any, PROT_READ|PROT_WRITE) @ ld-musl-aarch64.so.1+0x3e5e8(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x6b0bc(reloc_all*+268)
prlimit64(0, RLIMIT_FSIZE, 0, any) @ ld-musl-aarch64.so.1+0x3c700(getrlimit+44)
prlimit64(0, RLIMIT_AS, 0, any) @ ld-musl-aarch64.so.1+0x3c700(getrlimit+44)
prlimit64(0, RLIMIT_FSIZE, any, 0) @ ld-musl-aarch64.so.1+0x3d98c(setrlimit+36)
prlimit64(0, RLIMIT_AS, any, 0) @ ld-musl-aarch64.so.1+0x3d98c(setrlimit+36)
membarrier(MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED, 0) @ ld-musl-aarch64.so.1+0x24c58(__membarrier_init*+12)
membarrier(MEMBARRIER_CMD_QUERY, 0) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
membarrier(MEMBARRIER_CMD_GLOBAL, 0) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
membarrier(MEMBARRIER_CMD_PRIVATE_EXPEDITED, 0) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
membarrier(MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED, 0) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
