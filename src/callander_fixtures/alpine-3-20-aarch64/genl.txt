callander: permitted syscalls: fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x21194(open+136)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x461c4(socket+132)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x52cac(fstatat+88)
ioctl(any u32, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x53910(__stdout_write*+56)
chroot(any) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9edb8, O_RDWR|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x2055c(__init_libc*+424)
openat(AT_FDCWD, any, O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x607bc
openat(AT_FDCWD, any, O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
close(any) @ ld-musl-aarch64.so.1+0x53608(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x607bc
close(any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x68de8(lseek+12)
read(any u32, any, any) @ ld-musl-aarch64.so.1+0x53780(__stdio_read*+144)
read(any, any, any) @ ld-musl-aarch64.so.1+0x607bc
read(any, any, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
readv(any u32, any, 2) @ ld-musl-aarch64.so.1+0x5373c(__stdio_read*+76)
writev(any u32, any, any) @ ld-musl-aarch64.so.1+0x53898(__stdio_write*+188)
pread64(any, any, any, any) @ ld-musl-aarch64.so.1+0x607bc
pread64(any, any, any, any) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
ppoll(any, 3, any, 0, 8) @ ld-musl-aarch64.so.1+0x2050c(__init_libc*+344)
readlinkat(AT_FDCWD, ld-musl-aarch64.so.1+0x9f900, any, 512) @ ld-musl-aarch64.so.1+0x690cc(readlink+40)
newfstatat(any, ld-musl-aarch64.so.1+0x9f398, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x52cc4(fstatat+112)
newfstatat(AT_FDCWD, any, any, 0) @ ld-musl-aarch64.so.1+0x52cfc(fstatat+168)
newfstatat(any, ld-musl-aarch64.so.1+0x9f398, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x52d18(fstatat+196)
fstat(any, any) @ ld-musl-aarch64.so.1+0x52c90(fstatat+60)
capset(any, any) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
exit(any) @ ld-musl-aarch64.so.1+0x6075c
exit(0) @ ld-musl-aarch64.so.1+0x62314(pthread_exit+416)
exit_group(any) @ ld-musl-aarch64.so.1+0x20c50(_Exit+12)
futex(any, FUTEX_WAIT, any, 0, any, any u32)
futex(any, any, any, 0, 0, 0)
futex(any, any, 1, any, any, any)
futex(any, any, non-NULL, 0, any u32, 0)
futex(any, FUTEX_REQUEUE, 0, 1, ld-musl-aarch64.so.1+0xc2ab4, any)
futex(any, FUTEX_LOCK_PI-FUTEX_UNLOCK_PI, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any, any u32)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, ld-musl-aarch64.so.1+0xc2ab4, any)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG-FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any, any)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(ld-musl-aarch64.so.1+0xc06b0(barrier_sem*), any, INT_MAX, 0, ld-musl-aarch64.so.1+0xc06b0(barrier_sem*), any u32)
futex(ld-musl-aarch64.so.1+0xc1fd0(maplock*), any, 0-INT_MAX, ld-musl-aarch64.so.1+0xc1fd0(maplock*), any u32, INT_MAX)
futex(ld-musl-aarch64.so.1+0xc25e0(lock*), any, 0-INT_MAX, ld-musl-aarch64.so.1+0xc25e0(lock*), any u32, INT_MAX)
futex(ld-musl-aarch64.so.1+0xc2628(key_lock*), any, 0-INT_MAX, ld-musl-aarch64.so.1+0xc2628(key_lock*), any u32, INT_MAX)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), any, non-NULL, 0, any u32, ld-musl-aarch64.so.1+0xc2684)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2680(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, ld-musl-aarch64.so.1+0xc2680(vmlock*), any)
futex(ld-musl-aarch64.so.1+0xc2a88, FUTEX_WAKE, INT_MAX, ld-musl-aarch64.so.1+0xc2a88, any, any)
futex(ld-musl-aarch64.so.1+0xc2b20(lock*), any, 0-INT_MAX, ld-musl-aarch64.so.1+0xc2b20(lock*), any u32, INT_MAX)
futex(ld-musl-aarch64.so.1+0xc2e78(__thread_list_lock*), any, non-NULL, 0, any u32, ld-musl-aarch64.so.1+0xc2ed0(tl_lock_waiters*))
set_robust_list(0, 24) @ ld-musl-aarch64.so.1+0x62340(pthread_exit+460)
set_robust_list(any, 24) @ ld-musl-aarch64.so.1+0x63454(__pthread_mutex_trylock_owner*+92)
clock_gettime(CLOCK_REALTIME, any) @ ld-musl-aarch64.so.1+0x666e4(clock_gettime+60)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
restart_syscall()
tkill(any u32, SIGSYNCCALL) @ ld-musl-aarch64.so.1+0x24bd8(membarrier+228)
tkill(any u32, SIGSETXID) @ ld-musl-aarch64.so.1+0x612f4(cancel_handler*+132)
tkill(non-NULL, SIGSETXID) @ ld-musl-aarch64.so.1+0x6307c(pthread_kill+68)
rt_sigaction(SIGSETXID-SIGSYNCCALL, any, 0, 8) @ ld-musl-aarch64.so.1+0x52154(__libc_sigaction*+140)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa0ff8(all_mask*), any, 8) @ ld-musl-aarch64.so.1+0x51eb0(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0xa0ff0(app_mask*), any, 8) @ ld-musl-aarch64.so.1+0x51ed0(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x51eec(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x52220(__libc_sigaction*+344)
rt_sigprocmask(SIG_BLOCK, any, any, 8) @ ld-musl-aarch64.so.1+0x641a8(pthread_sigmask+24)
rt_sigreturn(any) @ ld-musl-aarch64.so.1+0x51e6c
setgid(any) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
setgid(any) @ ld-musl-aarch64.so.1+0x692e8(do_setxid*+32)
setuid(any) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
setuid(any) @ ld-musl-aarch64.so.1+0x692e8(do_setxid*+32)
setgroups(any, any) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
setgroups(any, any) @ ld-musl-aarch64.so.1+0x692e8(do_setxid*+32)
prctl(any, any, any, any, any) @ ld-musl-aarch64.so.1+0x3da40(syscall+76)
gettimeofday(any, 0) @ ld-musl-aarch64.so.1+0x66704(clock_gettime+92)
gettimeofday(non-NULL, any) @ [vdso]+0x658(__kernel_gettimeofday+256)
socket(AF_NETLINK, SOCK_RAW|SOCK_CLOEXEC, 16) @ ld-musl-aarch64.so.1+0x46168(socket+40)
socket(AF_NETLINK, SOCK_RAW, 16) @ ld-musl-aarch64.so.1+0x461a0(socket+96)
bind(any, any, 12) @ ld-musl-aarch64.so.1+0x3fbe8(bind+32)
getsockname(any, any, any) @ ld-musl-aarch64.so.1+0x41fe0(getsockname+28)
sendto(any, any, any, 0, 0, 0) @ ld-musl-aarch64.so.1+0x607bc
sendto(any, any, any, 0, 0, 0) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
setsockopt(any, SOL_SOCKET, SO_SNDBUF-SO_RCVBUF, any, 4) @ ld-musl-aarch64.so.1+0x460cc(setsockopt+32)
setsockopt(any, SOL_NETLINK, IP_RECVERR, any, 4) @ ld-musl-aarch64.so.1+0x460cc(setsockopt+32)
sendmsg(any, any, 0) @ ld-musl-aarch64.so.1+0x607bc
sendmsg(any, any, 0) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
recvmsg(any, any, 0) @ ld-musl-aarch64.so.1+0x607bc
recvmsg(any, any, MSG_PEEK|MSG_TRUNC) @ ld-musl-aarch64.so.1+0x607bc
recvmsg(any, any, 0) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
recvmsg(any, any, MSG_PEEK|MSG_TRUNC) @ ld-musl-aarch64.so.1+0x6145c(__syscall_cp_c*+204)
brk(any) @ ld-musl-aarch64.so.1+0x29954(__malloc_alloc_meta*+336)
brk(0) @ ld-musl-aarch64.so.1+0x29a2c(__malloc_alloc_meta*+552)
brk(any) @ ld-musl-aarch64.so.1+0x29a4c(__malloc_alloc_meta*+584)
munmap(NULL-0xfffffffffffffffe, any) @ ld-musl-aarch64.so.1+0x3e718(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x60754
mremap(any, NULL-0xfffffffffffff000, NULL-0xfffffffffffff000, MREMAP_MAYMOVE, 0) @ ld-musl-aarch64.so.1+0x3e628(mremap+48)
mmap(0, any, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mmap(any, any, any, MAP_PRIVATE, any, any) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mmap(any, any, any, MAP_PRIVATE|MAP_FIXED, any, any) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mmap(any, any, any, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, any) @ ld-musl-aarch64.so.1+0x3e544(mmap+76)
mprotect(NULL-0xfffffffffffffffe, any, PROT_READ|PROT_WRITE|PROT_EXEC) @ ld-musl-aarch64.so.1+0x3e5e8(mprotect+56)
mprotect(any, any, PROT_READ|PROT_WRITE) @ ld-musl-aarch64.so.1+0x3e5e8(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x6b0bc(reloc_all*+268)
membarrier(MEMBARRIER_CMD_PRIVATE_EXPEDITED, 0) @ ld-musl-aarch64.so.1+0x24b10(membarrier+28)
