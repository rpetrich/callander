callander: found syscall with unknown number: any
callander: full call stack: libc.so.6+0x7984f-libc.so.6+0x79870
libc.so.6+0x79840(__syscall_cancel_arch)-libc.so.6+0x79849 (conditional continue)
libc.so.6+0x6da93(__internal_syscall_cancel+51)-libc.so.6+0x6dab5(__internal_syscall_cancel+85) (call)
libc.so.6+0x6da91(__internal_syscall_cancel+49) (conditional continue)
libc.so.6+0x6da8e(__internal_syscall_cancel+46) (primary result)
libc.so.6+0x6da89(__internal_syscall_cancel+41)-libc.so.6+0x6da8c(__internal_syscall_cancel+44) (conditional continue)
libc.so.6+0x6da60(__internal_syscall_cancel)-libc.so.6+0x6da87(__internal_syscall_cancel+39) (conditional continue)
libc.so.6+0x6e110(__futex_abstimed_wait_common+96)-libc.so.6+0x6e127(__futex_abstimed_wait_common+119) (call)
libc.so.6+0x6e0be(__futex_abstimed_wait_common+14)-libc.so.6+0x6e0d9(__futex_abstimed_wait_common+41) (conditional jump)
libc.so.6+0x6e0b9(__futex_abstimed_wait_common+9)-libc.so.6+0x6e0bc(__futex_abstimed_wait_common+12) (conditional continue)
libc.so.6+0x6e14a(__futex_abstimed_wait_common+154)-libc.so.6+0x6e164(__futex_abstimed_wait_common+180) (conditional jump)
libc.so.6+0x6e145(__futex_abstimed_wait_common+149)-libc.so.6+0x6e148(__futex_abstimed_wait_common+152) (conditional continue (no jump))
libc.so.6+0x6e140(__futex_abstimed_wait_common+144)-libc.so.6+0x6e143(__futex_abstimed_wait_common+147) (conditional continue (no jump))
libc.so.6+0x6e0f4(__futex_abstimed_wait_common+68)-libc.so.6+0x6e0f7(__futex_abstimed_wait_common+71) (conditional jump (no continue))
libc.so.6+0x6e0f0(__futex_abstimed_wait_common+64)-libc.so.6+0x6e0f2(__futex_abstimed_wait_common+66) (conditional continue)
libc.so.6+0x6e0db(__futex_abstimed_wait_common+43)-libc.so.6+0x6e0ee(__futex_abstimed_wait_common+62) (primary result)
libc.so.6+0x6e0be(__futex_abstimed_wait_common+14)-libc.so.6+0x6e0d9(__futex_abstimed_wait_common+41) (conditional continue (no jump))
libc.so.6+0x6e0b9(__futex_abstimed_wait_common+9)-libc.so.6+0x6e0bc(__futex_abstimed_wait_common+12) (conditional continue (no jump))
libc.so.6+0x6e0b0(__futex_abstimed_wait_common)-libc.so.6+0x6e0b3(__futex_abstimed_wait_common+3) (conditional continue (no jump))
libc.so.6+0x6e170(__futex_abstimed_wait64)-libc.so.6+0x6e177(__futex_abstimed_wait64+7) (jump)
libc.so.6+0x77bb0(pthread_rwlock_wrlock+512)-libc.so.6+0x77bd9(pthread_rwlock_wrlock+553) (call)
libc.so.6+0x77ba5(pthread_rwlock_wrlock+501)-libc.so.6+0x77bae(pthread_rwlock_wrlock+510) (conditional continue)
libc.so.6+0x77b9d(pthread_rwlock_wrlock+493)-libc.so.6+0x77ba3(pthread_rwlock_wrlock+499) (conditional continue)
libc.so.6+0x77b90(pthread_rwlock_wrlock+480)-libc.so.6+0x77b97(pthread_rwlock_wrlock+487) (conditional continue)
libc.so.6+0x77ca1(pthread_rwlock_wrlock+753)-libc.so.6+0x77ca8(pthread_rwlock_wrlock+760) (jump)
libc.so.6+0x77c98(pthread_rwlock_wrlock+744)-libc.so.6+0x77c9b(pthread_rwlock_wrlock+747) (conditional continue (no jump))
libc.so.6+0x77b90(pthread_rwlock_wrlock+480)-libc.so.6+0x77b97(pthread_rwlock_wrlock+487) (conditional jump)
libc.so.6+0x77ba5(pthread_rwlock_wrlock+501)-libc.so.6+0x77bae(pthread_rwlock_wrlock+510) (conditional jump)
libc.so.6+0x77b9d(pthread_rwlock_wrlock+493)-libc.so.6+0x77ba3(pthread_rwlock_wrlock+499) (conditional continue)
libc.so.6+0x77b80(pthread_rwlock_wrlock+464)-libc.so.6+0x77b97(pthread_rwlock_wrlock+487) (conditional continue)
libc.so.6+0x77b78(pthread_rwlock_wrlock+456)-libc.so.6+0x77b7a(pthread_rwlock_wrlock+458) (conditional continue)
libc.so.6+0x77a02(pthread_rwlock_wrlock+82)-libc.so.6+0x77a10(pthread_rwlock_wrlock+96) (conditional jump)
libc.so.6+0x779f7(pthread_rwlock_wrlock+71)-libc.so.6+0x779fc(pthread_rwlock_wrlock+76) (conditional continue)
libc.so.6+0x779ee(pthread_rwlock_wrlock+62)-libc.so.6+0x779f5(pthread_rwlock_wrlock+69) (conditional continue)
libc.so.6+0x779e0(pthread_rwlock_wrlock+48)-libc.so.6+0x779ec(pthread_rwlock_wrlock+60) (conditional continue)
libc.so.6+0x779d2(pthread_rwlock_wrlock+34)-libc.so.6+0x779de(pthread_rwlock_wrlock+46) (conditional continue)
libc.so.6+0x779d0(pthread_rwlock_wrlock+32)-libc.so.6+0x779de(pthread_rwlock_wrlock+46) (conditional jump)
libc.so.6+0x779b0(pthread_rwlock_wrlock)-libc.so.6+0x779ce(pthread_rwlock_wrlock+30) (conditional continue)
libc.so.6+0x1ae7d(__abort_lock_wrlock+29)-libc.so.6+0x1ae84(__abort_lock_wrlock+36) (jump)
libc.so.6+0x1ae60(__abort_lock_wrlock)-libc.so.6+0x1ae7b(__abort_lock_wrlock+27) (primary result)
libc.so.6+0x16b0(abort)-libc.so.6+0x16d8(abort+40) (call)
libc.so.6+0x26f5(__libc_message_impl.cold) (call)
libc.so.6+0x664e9(__libc_message_impl+361)-libc.so.6+0x66523(__libc_message_impl+419) (conditional jump)
libc.so.6+0x664e3(__libc_message_impl+355)-libc.so.6+0x664e7(__libc_message_impl+359) (conditional continue (no jump))
libc.so.6+0x664c3(__libc_message_impl+323)-libc.so.6+0x664e1(__libc_message_impl+353) (primary result)
libc.so.6+0x66452(__libc_message_impl+210)-libc.so.6+0x6647a(__libc_message_impl+250) (conditional jump (no continue))
libc.so.6+0x6649d(__libc_message_impl+285)-libc.so.6+0x664c1(__libc_message_impl+321) (jump)
libc.so.6+0x6648e(__libc_message_impl+270)-libc.so.6+0x66497(__libc_message_impl+279) (conditional continue)
libc.so.6+0x66488(__libc_message_impl+264)-libc.so.6+0x6648c(__libc_message_impl+268) (conditional continue (no jump))
libc.so.6+0x66440(__libc_message_impl+192)-libc.so.6+0x66444(__libc_message_impl+196) (conditional jump (no continue))
libc.so.6+0x6643a(__libc_message_impl+186)-libc.so.6+0x6643e(__libc_message_impl+190) (conditional continue (no jump))
libc.so.6+0x66435(__libc_message_impl+181)-libc.so.6+0x66438(__libc_message_impl+184) (conditional continue (no jump))
libc.so.6+0x663e8(__libc_message_impl+104)-libc.so.6+0x66416(__libc_message_impl+150) (jump)
libc.so.6+0x66380(__libc_message_impl)-libc.so.6+0x663e2(__libc_message_impl+98) (conditional continue (no jump))
libc.so.6+0x665b0(__libc_fatal)-libc.so.6+0x665c4(__libc_fatal+20) (call)
libc.so.6+0x766a7(__pthread_once_slow.isra.0+151)-libc.so.6+0x766ae(__pthread_once_slow.isra.0+158) (call)
libc.so.6+0x76694(__pthread_once_slow.isra.0+132)-libc.so.6+0x766a1(__pthread_once_slow.isra.0+145) (conditional continue)
libc.so.6+0x7668f(__pthread_once_slow.isra.0+127)-libc.so.6+0x76692(__pthread_once_slow.isra.0+130) (conditional continue (no jump))
libc.so.6+0x7668a(__pthread_once_slow.isra.0+122)-libc.so.6+0x7668d(__pthread_once_slow.isra.0+125) (conditional continue)
libc.so.6+0x76682(__pthread_once_slow.isra.0+114)-libc.so.6+0x76688(__pthread_once_slow.isra.0+120) (conditional continue (no jump))
libc.so.6+0x76670(__pthread_once_slow.isra.0+96)-libc.so.6+0x76680(__pthread_once_slow.isra.0+112) (alternate result)
libc.so.6+0x7666c(__pthread_once_slow.isra.0+92)-libc.so.6+0x7666e(__pthread_once_slow.isra.0+94) (conditional continue)
libc.so.6+0x76668(__pthread_once_slow.isra.0+88)-libc.so.6+0x7666a(__pthread_once_slow.isra.0+90) (conditional continue)
libc.so.6+0x76658(__pthread_once_slow.isra.0+72)-libc.so.6+0x76666(__pthread_once_slow.isra.0+86) (conditional continue)
libc.so.6+0x76610(__pthread_once_slow.isra.0)-libc.so.6+0x76633(__pthread_once_slow.isra.0+35) (conditional jump)
libc.so.6+0x76770(__pthread_once+16)-libc.so.6+0x76774(__pthread_once+20) (call)
libc.so.6+0x76760(__pthread_once)-libc.so.6+0x76768(__pthread_once+8) (conditional jump)
libc.so.6+0x66f0(__gconv_load_conf)-libc.so.6+0x6702(__gconv_load_conf+18) (jump)
libc.so.6+0x5230(__gconv_find_transform)-libc.so.6+0x5261(__gconv_find_transform+49) (call)
libc.so.6+0x3d67(__gconv_open+359)-libc.so.6+0x3da1(__gconv_open+417) (call)
libc.so.6+0x3f20(__gconv_open+800)-libc.so.6+0x3f26(__gconv_open+806) (jump)
libc.so.6+0x3d56(__gconv_open+342)-libc.so.6+0x3d61(__gconv_open+353) (conditional jump)
libc.so.6+0x3d41(__gconv_open+321)-libc.so.6+0x3d54(__gconv_open+340) (conditional continue)
libc.so.6+0x3d00(__gconv_open+256)-libc.so.6+0x3d3f(__gconv_open+319) (conditional continue)
libc.so.6+0x3cf5(__gconv_open+245)-libc.so.6+0x3cfa(__gconv_open+250) (conditional continue)
libc.so.6+0x3cea(__gconv_open+234)-libc.so.6+0x3cef(__gconv_open+239) (conditional continue)
libc.so.6+0x3cc3(__gconv_open+195)-libc.so.6+0x3ce4(__gconv_open+228) (conditional continue)
libc.so.6+0x3f30(__gconv_open+816)-libc.so.6+0x3f36(__gconv_open+822) (jump)
libc.so.6+0x3cb2(__gconv_open+178)-libc.so.6+0x3cbd(__gconv_open+189) (conditional jump)
libc.so.6+0x3c9d(__gconv_open+157)-libc.so.6+0x3cb0(__gconv_open+176) (conditional continue)
libc.so.6+0x3c5c(__gconv_open+92)-libc.so.6+0x3c9b(__gconv_open+155) (conditional continue)
libc.so.6+0x3c51(__gconv_open+81)-libc.so.6+0x3c56(__gconv_open+86) (conditional continue)
libc.so.6+0x3c46(__gconv_open+70)-libc.so.6+0x3c4b(__gconv_open+75) (conditional continue)
libc.so.6+0x3c00(__gconv_open)-libc.so.6+0x3c40(__gconv_open+64) (conditional continue)
libc.so.6 (__gconv_open)
callander: try blocking a function from the call stack using --block-function or --block-debug-function
