callander: found syscall with unknown number at any
callander: full call stack: /usr/bin/qemu-alpha-static+0x1c465f-/usr/bin/qemu-alpha-static+0x1c4680 dx=any u32 r8=0 r9=-1 as u32 stack+16=-1 as u32
/usr/bin/qemu-alpha-static+0x1c4650-/usr/bin/qemu-alpha-static+0x1c4659 (conditional continue) ax=any u32 r8=any u32 stack+8=0 stack+16=-1 as u32
/usr/bin/qemu-alpha-static+0x1be273-/usr/bin/qemu-alpha-static+0x1be295 (call) r8=any u32 stack+8=0 stack+16=-1 as u32
/usr/bin/qemu-alpha-static+0x1be271 (conditional continue) ax=any u32 cx=16 dx=any u32 r8=0 r9=-1 as u32 mem=0 stack+24=202
/usr/bin/qemu-alpha-static+0x1be26e (primary result) ax=any u32 cx=16 dx=any u32 r8=0 r9=-1 as u32 mem=0 stack+24=202
/usr/bin/qemu-alpha-static+0x1be269-/usr/bin/qemu-alpha-static+0x1be26c (conditional continue) ax=any u32 cx=any u32 dx=any u32 r8=0 r9=-1 as u32 mem=0 stack+24=202
/usr/bin/qemu-alpha-static+0x1be240-/usr/bin/qemu-alpha-static+0x1be267 (conditional continue) ax=any u32 cx=any u32 dx=any u32 r8=0 r9=-1 as u32 mem=0 stack+24=202
/usr/bin/qemu-alpha-static+0x228350-/usr/bin/qemu-alpha-static+0x228367 (call) ax=any u32 dx=any u32 r8=0 r9=-1 as u32 mem=0-LONG_MAX stack+8=202
/usr/bin/qemu-alpha-static+0x2282fe-/usr/bin/qemu-alpha-static+0x228319 (conditional jump) ax=any u32 dx=any u32 si=any u32 r9=0x1-0xff mem=0-LONG_MAX
/usr/bin/qemu-alpha-static+0x2282f9-/usr/bin/qemu-alpha-static+0x2282fc (conditional continue) dx=NULL-0x1 mem=0-LONG_MAX
/usr/bin/qemu-alpha-static+0x22838a-/usr/bin/qemu-alpha-static+0x2283a4 (conditional jump) mem=0-LONG_MAX
/usr/bin/qemu-alpha-static+0x228385-/usr/bin/qemu-alpha-static+0x228388 (conditional continue (no jump)) ax=0-INT_MAX cx=0 dx=2 si=any u32 di=/usr/bin/qemu-alpha-static+0x38f9e8 r8=0 r9=-1 as u32 r10=0
/usr/bin/qemu-alpha-static+0x228380-/usr/bin/qemu-alpha-static+0x228383 (conditional continue (no jump)) ax=0-INT_MAX cx=0 dx=2 si=any u32 di=/usr/bin/qemu-alpha-static+0x38f9e8 r8=0 r9=-1 as u32 r10=0
/usr/bin/qemu-alpha-static+0x228334-/usr/bin/qemu-alpha-static+0x228337 (conditional jump (no continue)) ax=0-INT_MAX cx=0 dx=2 si=any u32 di=/usr/bin/qemu-alpha-static+0x38f9e8 r8=0 r9=-1 as u32 r10=0
/usr/bin/qemu-alpha-static+0x228330-/usr/bin/qemu-alpha-static+0x228332 (conditional continue) ax=any u32 cx=0 dx=2 si=any u32 di=/usr/bin/qemu-alpha-static+0x38f9e8 r8=0 r9=-1 as u32 r10=0
/usr/bin/qemu-alpha-static+0x22831b-/usr/bin/qemu-alpha-static+0x22832e (primary result) ax=0-LONG_MAX cx=0 dx=2 si=any u32 di=/usr/bin/qemu-alpha-static+0x38f9e8 r8=0 r9=-1 as u32 r10=0
/usr/bin/qemu-alpha-static+0x2282fe-/usr/bin/qemu-alpha-static+0x228319 (conditional continue (no jump)) ax=2 cx=0 dx=0 si=any u32 di=/usr/bin/qemu-alpha-static+0x38f9e8 r8=any u32 r9=0 r10=NULL-0x1 r11=/usr/bin/qemu-alpha-static+0x38f9ec
/usr/bin/qemu-alpha-static+0x2282f9-/usr/bin/qemu-alpha-static+0x2282fc (conditional continue (no jump)) ax=any u32 cx=0 dx=0 si=2 di=/usr/bin/qemu-alpha-static+0x38f9e8 r8=any u32 r9=0 r10=NULL-0x1 r11=/usr/bin/qemu-alpha-static+0x38f9ec
/usr/bin/qemu-alpha-static+0x2282f0-/usr/bin/qemu-alpha-static+0x2282f3 (conditional continue (no jump)) ax=any u32 cx=0 dx=0 si=2 di=/usr/bin/qemu-alpha-static+0x38f9e8 r8=any u32 r9=0 r10=NULL-0x1 r11=/usr/bin/qemu-alpha-static+0x38f9ec
/usr/bin/qemu-alpha-static+0x2283b0-/usr/bin/qemu-alpha-static+0x2283b7 (jump) ax=any u32 cx=0 dx=0 si=2 di=/usr/bin/qemu-alpha-static+0x38f9e8 r8=any u32 r9=0 r10=NULL-0x1 r11=/usr/bin/qemu-alpha-static+0x38f9ec
/usr/bin/qemu-alpha-static+0x1c3ff0-/usr/bin/qemu-alpha-static+0x1c4019 (call) ax=any u32 cx=0 dx=0 bx=any u32 si=2 di=/usr/bin/qemu-alpha-static+0x38f9e8 r8=any u32 r9=/usr/bin/qemu-alpha-static+0x38f9e0 r10=NULL-0x1 r11=/usr/bin/qemu-alpha-static+0x38f9ec
/usr/bin/qemu-alpha-static+0x1c3fe5-/usr/bin/qemu-alpha-static+0x1c3fee (conditional continue) ax=any u32 cx=0x1-0xffffffff dx=any u32 si=2 di=/usr/bin/qemu-alpha-static+0x38f9e8 r9=/usr/bin/qemu-alpha-static+0x38f9e0 r10=NULL-0x1 r11=/usr/bin/qemu-alpha-static+0x38f9ec mem=any u32
/usr/bin/qemu-alpha-static+0x1c3fdd-/usr/bin/qemu-alpha-static+0x1c3fe3 (conditional continue) ax=0 cx=0x1-0xffffffff dx=any u32 si=2 di=/usr/bin/qemu-alpha-static+0x38f9e8 r9=/usr/bin/qemu-alpha-static+0x38f9e0 r10=NULL-0x1 r11=/usr/bin/qemu-alpha-static+0x38f9ec mem=any u32
/usr/bin/qemu-alpha-static+0x1c3fd0-/usr/bin/qemu-alpha-static+0x1c3fd7 (conditional continue) ax=any u32 cx=0x1-0xffffffff dx=any u32 si=2 di=/usr/bin/qemu-alpha-static+0x38f9e8 r9=/usr/bin/qemu-alpha-static+0x38f9e0 r10=NULL-0x1 r11=/usr/bin/qemu-alpha-static+0x38f9ec mem=any u32
/usr/bin/qemu-alpha-static+0x1c40e1-/usr/bin/qemu-alpha-static+0x1c40e8 (jump) ax=any u32 cx=0x1-0xffffffff dx=any u32 si=2 di=/usr/bin/qemu-alpha-static+0x38f9e8 r9=/usr/bin/qemu-alpha-static+0x38f9e0 r10=NULL-0x1 r11=/usr/bin/qemu-alpha-static+0x38f9ec mem=any u32
/usr/bin/qemu-alpha-static+0x1c40d8-/usr/bin/qemu-alpha-static+0x1c40db (conditional continue (no jump)) ax=any u32 cx=0x1-0xffffffff dx=any u32 si=2 di=/usr/bin/qemu-alpha-static+0x38f9e8 r9=/usr/bin/qemu-alpha-static+0x38f9e0 r10=0 r11=/usr/bin/qemu-alpha-static+0x38f9ec mem=any u32
/usr/bin/qemu-alpha-static+0x1c3fd0-/usr/bin/qemu-alpha-static+0x1c3fd7 (conditional jump) ax=any u32 cx=0x1-0xffffffff dx=any u32 si=2 di=/usr/bin/qemu-alpha-static+0x38f9e8 r9=/usr/bin/qemu-alpha-static+0x38f9e0 r10=0 r11=/usr/bin/qemu-alpha-static+0x38f9ec mem=any u32
/usr/bin/qemu-alpha-static+0x1c3fe5-/usr/bin/qemu-alpha-static+0x1c3fee (conditional jump) ax=any u32 cx=0x1-0xffffffff dx=any u32 si=2 di=/usr/bin/qemu-alpha-static+0x38f9e8 r9=/usr/bin/qemu-alpha-static+0x38f9e0 r10=0 r11=/usr/bin/qemu-alpha-static+0x38f9ec mem=any u32
/usr/bin/qemu-alpha-static+0x1c3fdd-/usr/bin/qemu-alpha-static+0x1c3fe3 (conditional continue) ax=0 cx=0x1-0xffffffff dx=any u32 si=/usr/bin/qemu-alpha-static+0x279660 di=/usr/bin/qemu-alpha-static+0x38f9e8 r9=/usr/bin/qemu-alpha-static+0x38f9e0 r10=0 r11=/usr/bin/qemu-alpha-static+0x38f9ec mem=any u32
/usr/bin/qemu-alpha-static+0x1c3fc0-/usr/bin/qemu-alpha-static+0x1c3fd7 (conditional continue) ax=any u32 cx=0x1-0xffffffff dx=any u32 si=/usr/bin/qemu-alpha-static+0x279660 di=/usr/bin/qemu-alpha-static+0x38f9e8 r9=/usr/bin/qemu-alpha-static+0x38f9e0 r10=0 r11=/usr/bin/qemu-alpha-static+0x38f9ec mem=any u32
/usr/bin/qemu-alpha-static+0x1c3fb8-/usr/bin/qemu-alpha-static+0x1c3fba (conditional continue) ax=any u32 cx=0x1-0xffffffff dx=any u32 si=/usr/bin/qemu-alpha-static+0x279660 di=/usr/bin/qemu-alpha-static+0x38f9e0 r9=/usr/bin/qemu-alpha-static+0x38f9e0 r10=8 r11=/usr/bin/qemu-alpha-static+0x38f9ec mem=any u32
/usr/bin/qemu-alpha-static+0x1c3e42-/usr/bin/qemu-alpha-static+0x1c3e50 (conditional jump) ax=any u32 cx=0x1-0xffffffff dx=any u32 si=/usr/bin/qemu-alpha-static+0x279660 di=/usr/bin/qemu-alpha-static+0x38f9e0 r9=/usr/bin/qemu-alpha-static+0x38f9e0 r10=8 r11=/usr/bin/qemu-alpha-static+0x38f9ec mem=any u32
/usr/bin/qemu-alpha-static+0x1c3e37-/usr/bin/qemu-alpha-static+0x1c3e3c (conditional continue) ax=NULL-0x1fffffff cx=0x2-0xffffffff dx=any u32 si=/usr/bin/qemu-alpha-static+0x279660 di=/usr/bin/qemu-alpha-static+0x38f9e0 r9=/usr/bin/qemu-alpha-static+0x38f9e0 r10=8 r11=/usr/bin/qemu-alpha-static+0x38f9ec mem=1
/usr/bin/qemu-alpha-static+0x1c3e2e-/usr/bin/qemu-alpha-static+0x1c3e35 (conditional continue) ax=1 cx=0x2-0xffffffff dx=any u32 si=/usr/bin/qemu-alpha-static+0x279660 di=/usr/bin/qemu-alpha-static+0x38f9e0 r9=/usr/bin/qemu-alpha-static+0x38f9e0 r10=8 r11=/usr/bin/qemu-alpha-static+0x38f9ec mem=1
/usr/bin/qemu-alpha-static+0x1c3e20-/usr/bin/qemu-alpha-static+0x1c3e2c (conditional continue) ax=1 cx=0x2-0xffffffff dx=any u32 si=/usr/bin/qemu-alpha-static+0x279660 di=/usr/bin/qemu-alpha-static+0x38f9e0 r9=/usr/bin/qemu-alpha-static+0x38f9e0 r10=8 r11=/usr/bin/qemu-alpha-static+0x38f9ec mem=any u32
/usr/bin/qemu-alpha-static+0x1c3e12-/usr/bin/qemu-alpha-static+0x1c3e1e (conditional continue) ax=any u32 cx=0x2-0xffffffff dx=any u32 si=/usr/bin/qemu-alpha-static+0x279660 di=/usr/bin/qemu-alpha-static+0x38f9e0 r9=/usr/bin/qemu-alpha-static+0x38f9e0 r10=8 mem=any u32
/usr/bin/qemu-alpha-static+0x1c3e10-/usr/bin/qemu-alpha-static+0x1c3e1e (conditional jump) ax=any u32 cx=0x2-0xffffffff dx=any u32 si=/usr/bin/qemu-alpha-static+0x279660 di=/usr/bin/qemu-alpha-static+0x38f9e0 r9=/usr/bin/qemu-alpha-static+0x38f9e0 r10=8 mem=any u32
/usr/bin/qemu-alpha-static+0x1c3e00-/usr/bin/qemu-alpha-static+0x1c3e0e (conditional continue) ax=any u32 dx=any u32 si=/usr/bin/qemu-alpha-static+0x279660 di=/usr/bin/qemu-alpha-static+0x38f9e0 r9=/usr/bin/qemu-alpha-static+0x38f9e0 r10=8
/usr/bin/qemu-alpha-static+0x1c3df0-/usr/bin/qemu-alpha-static+0x1c3dfc (primary result) ax=0 dx=0 si=/usr/bin/qemu-alpha-static+0x279660 di=/usr/bin/qemu-alpha-static+0x38f9e0 r9=/usr/bin/qemu-alpha-static+0x38f9e0 r10=8
/usr/bin/qemu-alpha-static+0x19e51d-/usr/bin/qemu-alpha-static+0x19e524 (jump) ax=0 dx=0 si=/usr/bin/qemu-alpha-static+0x279660 di=/usr/bin/qemu-alpha-static+0x38f9e0 r10=8
/usr/bin/qemu-alpha-static+0x19e500-/usr/bin/qemu-alpha-static+0x19e51b (primary result) ax=0 dx=0 si=/usr/bin/qemu-alpha-static+0x279660 di=0 r10=8
/usr/bin/qemu-alpha-static+0x6fbf-/usr/bin/qemu-alpha-static+0x6fe7 (call) di=0
/usr/bin/qemu-alpha-static+0x76ca (call) cx=0 dx=non-NULL si=/usr/bin/qemu-alpha-static+0x265fcf di=/usr/bin/qemu-alpha-static+0x263df1 r10=NULL-0xfffffff r11=0 r12=0
/usr/bin/qemu-alpha-static+0x1b81c0-/usr/bin/qemu-alpha-static+0x1b8222 (conditional jump) cx=0 dx=non-NULL si=/usr/bin/qemu-alpha-static+0x265fcf di=/usr/bin/qemu-alpha-static+0x263df1 r10=NULL-0xfffffff r11=0 r12=0
/usr/bin/qemu-alpha-static+0x1c5720-/usr/bin/qemu-alpha-static+0x1c5730 (call) ax=0 cx=0 dx=non-NULL si=/usr/bin/qemu-alpha-static+0x265fcf di=/usr/bin/qemu-alpha-static+0x263df1 r10=NULL-0xfffffff r11=0
/usr/bin/qemu-alpha-static+0x1c7d50-/usr/bin/qemu-alpha-static+0x1c7d57 (call) ax=NULL-0xfffffff cx=0 dx=non-NULL di=/usr/bin/qemu-alpha-static+0x265fcf r10=NULL-0xfffffff r11=0
/usr/bin/qemu-alpha-static+0x1c7be4-/usr/bin/qemu-alpha-static+0x1c7bee (conditional jump) ax=NULL-0xfffffff cx=0 dx=non-NULL di=NULL-0xfffffffffffff r10=NULL-0xfffffff r11=0
/usr/bin/qemu-alpha-static+0x1c7bde-/usr/bin/qemu-alpha-static+0x1c7be2 (conditional continue) ax=0x2-0x100000001 cx=0 dx=non-NULL di=NULL-0xfffffffffffff r10=NULL-0xfffffff r11=0
/usr/bin/qemu-alpha-static+0x1c7bc7-/usr/bin/qemu-alpha-static+0x1c7bdc (conditional continue) ax=0x2-0x100000001 cx=0 dx=non-NULL di=NULL-0xfffffffffffff r10=NULL-0xfffffff r11=0
/usr/bin/qemu-alpha-static+0x1c7bbe-/usr/bin/qemu-alpha-static+0x1c7bc1 (conditional continue) ax=0x2-0x100000001 cx=0 si=0 r10=NULL-0xfffffff r11=0 mem=0x1-0xff
/usr/bin/qemu-alpha-static+0x1c7b99-/usr/bin/qemu-alpha-static+0x1c7bb8 (conditional continue) ax=0x2-0x100000001 cx=0 si=0 r10=NULL-0xfffffff r11=0 mem=0x1-0xff
/usr/bin/qemu-alpha-static+0x1c7b87-/usr/bin/qemu-alpha-static+0x1c7b93 (conditional continue) cx=0 dx=0x20-0xfffffffffffffffe si=0 r10=0x20-0xffffffffffffffff r11=0
/usr/bin/qemu-alpha-static+0x1c7b76-/usr/bin/qemu-alpha-static+0x1c7b81 (conditional continue) cx=0 dx=0x20-0xfffffffffffffffe r10=0x20-0xffffffffffffffff r11=0
/usr/bin/qemu-alpha-static+0x1c7b64-/usr/bin/qemu-alpha-static+0x1c7b70 (conditional continue) ax=0x11-0xffffffffffffffff cx=0 dx=0x20-0xfffffffffffffffe r10=0x20-0xffffffffffffffff r11=0
/usr/bin/qemu-alpha-static+0x1c7b40-/usr/bin/qemu-alpha-static+0x1c7b5e (conditional continue) ax=any u8 cx=0 dx=0x20-0xffffffffffffffff r10=0x20-0xffffffffffffffff r11=0
/usr/bin/qemu-alpha-static+0x1cac18-/usr/bin/qemu-alpha-static+0x1cac24 (call) ax=NULL-0xffffffffffffffe cx=0 dx=0x20-0xffffffffffffffff r9=any u32 r11=any u16
/usr/bin/qemu-alpha-static+0x1cac03-/usr/bin/qemu-alpha-static+0x1cac12 (conditional continue) ax=NULL-0xffffffffffffffe cx=non-NULL dx=0x20-0xffffffffffffffff si=any u16 di=non-NULL r9=any u32 r11=any u16
/usr/bin/qemu-alpha-static+0x1cabf2-/usr/bin/qemu-alpha-static+0x1cabfd (conditional continue) ax=NULL-0xffffffffffffffe cx=non-NULL dx=0x20-0xffffffffffffffff di=non-NULL r9=any u32
/usr/bin/qemu-alpha-static+0x1cabe1-/usr/bin/qemu-alpha-static+0x1cabf0 (conditional continue) ax=NULL-0xffffffffffffffe cx=non-NULL dx=0x20-0xffffffffffffffff si=0 di=non-NULL r9=any u32
/usr/bin/qemu-alpha-static+0x1cabd3-/usr/bin/qemu-alpha-static+0x1cabdf (conditional continue) cx=non-NULL dx=0x20-0xffffffffffffffff si=0 di=non-NULL r9=any u32
/usr/bin/qemu-alpha-static+0x1cabcb-/usr/bin/qemu-alpha-static+0x1cabcd (conditional continue) dx=0x20-0xffffffffffffffff si=0 di=non-NULL r9=any u32
/usr/bin/qemu-alpha-static+0x1cabc1-/usr/bin/qemu-alpha-static+0x1cabc5 (conditional continue) dx=0x20-0xffffffffffffffff si=0 di=non-NULL r9=any u32
/usr/bin/qemu-alpha-static+0x1cabb7-/usr/bin/qemu-alpha-static+0x1cabbb (conditional continue) si=0 di=non-NULL r9=any u32
/usr/bin/qemu-alpha-static+0x1cab7b-/usr/bin/qemu-alpha-static+0x1cabb1 (conditional continue) si=0 di=non-NULL r9=any u32
/usr/bin/qemu-alpha-static+0x1cab70-/usr/bin/qemu-alpha-static+0x1cab79 (conditional continue) si=0 di=non-NULL r9=any u32 r10=/usr/bin/qemu-alpha-static+0x3818c0 mem=NULL-0x24
/usr/bin/qemu-alpha-static+0x1cab60-/usr/bin/qemu-alpha-static+0x1cab6a (conditional continue) si=0 di=non-NULL r9=any u32 mem=NULL-0x24
/usr/bin/qemu-alpha-static+0x1cab49-/usr/bin/qemu-alpha-static+0x1cab5a (conditional continue) si=0 di=non-NULL r9=any u32
/usr/bin/qemu-alpha-static+0x1cab3d-/usr/bin/qemu-alpha-static+0x1cab45 (primary result) si=0 di=non-NULL
/usr/bin/qemu-alpha-static+0x1cab30-/usr/bin/qemu-alpha-static+0x1cab37 (conditional continue (no jump)) si=0 di=non-NULL
/usr/bin/qemu-alpha-static+0x841c-/usr/bin/qemu-alpha-static+0x8427 (call) bp=/usr/bin/qemu-alpha-static+0x38edf0 si=0 di=non-NULL
/usr/bin/qemu-alpha-static+0x8413-/usr/bin/qemu-alpha-static+0x841a (conditional continue) bx=non-NULL bp=/usr/bin/qemu-alpha-static+0x38edf0 si=0 di=/usr/bin/qemu-alpha-static+0x38edf0 mem=non-NULL
/usr/bin/qemu-alpha-static+0x8400-/usr/bin/qemu-alpha-static+0x8411 (conditional continue) bp=/usr/bin/qemu-alpha-static+0x38edf0 si=0 di=/usr/bin/qemu-alpha-static+0x38edf0 mem=0
/usr/bin/qemu-alpha-static+0x8450-/usr/bin/qemu-alpha-static+0x845f (call) di=/usr/bin/qemu-alpha-static+0x38edf0
/usr/bin/qemu-alpha-static (fini)
callander: try blocking a function from the call stack using --block-function or --block-debug-function
