callander: permitted syscalls: getxattr(any, "security.sehash", any, 20) @ libc.so.6+0xed9c8(getxattr+8)
getcwd(any, any) @ libc.so.6+0xe73a8(getcwd+104)
dup(any u32) @ libc.so.6+0xe4188(dup+8)
fcntl(any, F_SETFD, FD_CLOEXEC) @ libc.so.6+0xe98c0(__fcntl64_nocancel+80)
fcntl(any, F_GETFL, any) @ libc.so.6+0xe98c0(__fcntl64_nocancel+80)
fcntl(STDIN_FILENO-0xfffffffffffffffe, F_GETFL, libc.so.6+0x15bfbc) @ libc.so.6+0xe9994(__fcntl64_nocancel_adjusted+52)
fcntl(any, F_SETFD, FD_CLOEXEC) @ libc.so.6+0xe9994(__fcntl64_nocancel_adjusted+52)
ioctl(any, TCGETS, any) @ libc.so.6+0xea0c4(tcgetattr+52)
faccessat(AT_FDCWD, "/var/run/setrans/.setrans-unix", F_OK) @ libc.so.6+0xe3e40(access+16)
chdir("/") @ libc.so.6+0xe3e88(chdir+8)
fchdir(any u32) @ libc.so.6+0xe4608(fchdir+8)
chroot(".") @ libc.so.6+0xeaac8(chroot+8)
openat(AT_FDCWD, any, O_RDONLY, any) @ libc.so.6+0xe8074(__open+116)
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0xe8074(__open+116)
openat(AT_FDCWD, any, O_RDWR|O_CLOEXEC, any) @ libc.so.6+0xe8074(__open+116)
openat(AT_FDCWD, any, O_RDONLY, any) @ libc.so.6+0xe8100(__open+256)
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0xe8100(__open+256)
openat(AT_FDCWD, any, O_RDWR|O_CLOEXEC, any) @ libc.so.6+0xe8100(__open+256)
openat(any, any, O_RDONLY, any) @ libc.so.6+0xe8254(openat+116)
openat(any, any, O_RDONLY, any) @ libc.so.6+0xe82e4(openat+260)
openat(AT_FDCWD, any, O_RDONLY, any) @ libc.so.6+0xe9ad0(__open_nocancel+80)
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0xe9ad0(__open_nocancel+80)
openat(AT_FDCWD, non-NULL, O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC, any) @ libc.so.6+0xe9ad0(__open_nocancel+80)
openat(AT_FDCWD, "/sys/kernel/mm/hugepages", O_RDONLY|O_DIRECTORY, any) @ libc.so.6+0xe9ad0(__open_nocancel+80)
close(any) @ libc.so.6+0xe3f54(__close+36)
close(any) @ libc.so.6+0xe3f84(__close+84)
close(any) @ libc.so.6+0xe9758(__close_nocancel+8)
getdents64(any, any, any) @ libc.so.6+0xbdd54(getdents64+20)
lseek(any, any, any) @ libc.so.6+0xe7eac(__lseek+12)
read(any, any, any) @ libc.so.6+0xe8b34(__read+36)
read(any, any, any) @ libc.so.6+0xe8b78(__read+104)
read(any, any, any) @ libc.so.6+0xe9c88(__read_nocancel+8)
write(any, any, any) @ libc.so.6+0xe96a4(__write+36)
write(any, any, any) @ libc.so.6+0xe96e8(__write+104)
write(any, any, 0-LONG_MAX) @ libc.so.6+0xe9da8(__write_nocancel+8)
readv(any, any, 1) @ libc.so.6+0xf00dc(readv+44)
readv(any, any, 3) @ libc.so.6+0xf00dc(readv+44)
readv(any, any, 1) @ libc.so.6+0xf011c(readv+108)
readv(any, any, 3) @ libc.so.6+0xf011c(readv+108)
writev(any, any, NULL-0x101) @ ld-linux-aarch64.so.1+0xbf44(_dl_debug_vdprintf+292)
writev(STDERR_FILENO, any, any) @ libc.so.6+0x7cb74(__libc_message+468)
pread64(STDIN_FILENO-0xfffffffffffffffe, any, 511, any) @ libc.so.6+0xe9c48(__pread64_nocancel+8)
newfstatat(any, any, any, AT_SYMLINK_NOFOLLOW) @ libc.so.6+0xe4cec(fstatat64+12)
newfstatat(AT_FDCWD, any, any, 0) @ libc.so.6+0xe4cec(fstatat64+12)
fstat(any, any) @ libc.so.6+0xe4ca8(fstat+8)
exit(0) @ libc.so.6+0x2b46c(__libc_start_call_main+156)
exit_group(any) @ ld-linux-aarch64.so.1+0x1b6a4(_exit+20)
exit_group(any) @ libc.so.6+0xc1d28(_exit+24)
futex(any, FUTEX_WAIT, any u32, 0, any, any)
futex(any, any u32, 1, 0, any, any)
futex(any, any u32, INT_MAX, 0, any, any)
futex(any, any, 0x2-0xffffffff, 0, 0, -1 as u32)
futex(any, FUTEX_LOCK_PI, 0, 0, 128, 6)
futex(any, FUTEX_UNLOCK_PI, 0, 0, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any u32, 0, any, any)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, 0, 134)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any, any)
futex(any, FUTEX_WAIT_BITSET|FUTEX_CLOCK_REALTIME, 0, 0, 0, -1 as u32)
futex(any, FUTEX_WAIT_BITSET|FUTEX_PRIVATE_FLAG|FUTEX_CLOCK_REALTIME, 0, 0, 0, -1 as u32)
set_robust_list(any, sizeof(struct robust_list_head)) @ libc.so.6+0xc1ce8(_Fork+72)
clock_gettime(CLOCK_MONOTONIC, any) @ libc.so.6+0xbcf14(clock_gettime+52)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ libc.so.6+0xbd030(clock_nanosleep+64)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ libc.so.6+0xbd070(clock_nanosleep+128)
sched_setscheduler(any u32, any u32, any) @ libc.so.6+0xddf48(__sched_setscheduler+8)
sched_getscheduler(any u32) @ libc.so.6+0xdddc8(sched_getscheduler+8)
sched_getparam(any u32, any) @ libc.so.6+0xddd88(sched_getparam+8)
sched_getaffinity(0, 0x1000, any) @ libc.so.6+0xecefc(__get_nprocs_sched+56)
sched_get_priority_max(1) @ libc.so.6+0xdde08(sched_get_priority_max+8)
sched_get_priority_min(1) @ libc.so.6+0xdde48(__sched_get_priority_min+8)
restart_syscall()
kill(any, 0x0-0x7f) @ libc.so.6+0x3f5c8(kill+8)
tgkill(any, any, SIGSETXID) @ libc.so.6+0x847a0(__nptl_setxid+284)
tgkill(any, any, SIGSETXID) @ libc.so.6+0x8480c(__nptl_setxid+392)
tgkill(any, any, SIGABRT) @ libc.so.6+0x88fd4(__pthread_kill_implementation+260)
tgkill(any, any, SIGABRT) @ libc.so.6+0x89004(__pthread_kill_implementation+308)
rt_sigaction(SIGABRT, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x3f498(__libc_sigaction+136)
rt_sigaction(SIGCHLD, any, any, sizeof(kernel_sigset_t)) @ libc.so.6+0x3f498(__libc_sigaction+136)
rt_sigaction(SIGABRT, 0, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x3f530(__libc_sigaction+288)
rt_sigaction(SIGCHLD, 0, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x3f530(__libc_sigaction+288)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x2ad30(abort+164)
rt_sigprocmask(SIG_BLOCK, libc.so.6+0x1645c0(sigall_set), any, sizeof(kernel_sigset_t)) @ libc.so.6+0x88f34(__pthread_kill_implementation+100)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x88f80(__pthread_kill_implementation+176)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x8e8b8(pthread_sigmask+72)
setgid(any u32) @ libc.so.6+0x845a4(__GI___nptl_setxid_sighandler+84)
setgid(any u32) @ libc.so.6+0x848f0(__nptl_setxid+620)
setgid(any u32) @ libc.so.6+0xddfd4(setgid+52)
setuid(any u32) @ libc.so.6+0x845a4(__GI___nptl_setxid_sighandler+84)
setuid(any u32) @ libc.so.6+0x848f0(__nptl_setxid+620)
setuid(any u32) @ libc.so.6+0xde294(setuid+52)
setgroups(0, 0) @ libc.so.6+0x845a4(__GI___nptl_setxid_sighandler+84)
setgroups(0, 0) @ libc.so.6+0x848f0(__nptl_setxid+620)
setgroups(0, 0) @ libc.so.6+0xbeee0(setgroups+48)
gettimeofday(non-NULL, any) @ [vdso]+0x658(__kernel_gettimeofday+256)
getpid() @ ld-linux-aarch64.so.1+0x1b708(__GI___getpid+8)
getpid() @ libc.so.6+0xcb5c8(__getpid+8)
gettid() @ libc.so.6+0x88fe8(__pthread_kill_implementation+280)
gettid() @ libc.so.6+0xf47c8(gettid+8)
sysinfo(any) @ libc.so.6+0xf4588(sysinfo+8)
socket(AF_UNIX, SOCK_STREAM, 0) @ libc.so.6+0xf5bf0(socket+16)
socket(AF_UNIX, SOCK_STREAM|SOCK_CLOEXEC, 0) @ libc.so.6+0xf5bf0(socket+16)
connect(any, any, 110) @ libc.so.6+0xf509c(connect+44)
connect(any, any, 110) @ libc.so.6+0xf50dc(connect+108)
sendmsg(any, any, MSG_NOSIGNAL) @ libc.so.6+0xf58dc(sendmsg+44)
sendmsg(any, any, MSG_NOSIGNAL) @ libc.so.6+0xf591c(sendmsg+108)
brk(any) @ libc.so.6+0xeaa38(brk+8)
munmap(any, any) @ libc.so.6+0xef188(__munmap+8)
mremap(any, any, any, MREMAP_MAYMOVE, 0) @ libc.so.6+0xf3628(mremap+56)
clone(SIGCHLD|CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID, 0, 0, 0, any) @ libc.so.6+0xc1cc4(_Fork+36)
mmap(0, any, PROT_READ|PROT_WRITE, any, -1, 0) @ libc.so.6+0xee778(mmap+24)
mmap(any, any, PROT_NONE-PROT_READ, any, any, 0) @ libc.so.6+0xee778(mmap+24)
mprotect(any, any, PROT_READ|PROT_WRITE) @ libc.so.6+0xef008(__mprotect+8)
madvise(any, any, MADV_DONTNEED) @ libc.so.6+0xee548(madvise+8)
madvise(any, any, MADV_HUGEPAGE) @ libc.so.6+0xee548(madvise+8)
wait4(0x1-0x7fffffff, any, WUNTRACED, 0) @ libc.so.6+0xdfb4c(wait4+44)
wait4(0x1-0x7fffffff, any, WUNTRACED, 0) @ libc.so.6+0xdfb94(wait4+116)
setns(any u32, 1-127|CLONE_NEWTIME|CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_PIDFD|CLONE_PTRACE|CLONE_VFORK|CLONE_PARENT|CLONE_THREAD|CLONE_NEWNS|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID|CLONE_DETACHED|CLONE_UNTRACED|CLONE_CHILD_SETTID|CLONE_NEWCGROUP|CLONE_NEWUTS|CLONE_NEWIPC|CLONE_NEWUSER|CLONE_NEWPID|CLONE_NEWNET|CLONE_IO) @ libc.so.6+0xf46c8(setns+8)
getrandom(libc.so.6+0x1b6748(tcache_key), 8, GRND_NONBLOCK) @ libc.so.6+0x94458(ptmalloc_init.part.0+72)
