callander: permitted syscalls: read(any u32, any, any) @ libc.so.6+0x11ba5f(__read+15)
read(any u32, any, any) @ libc.so.6+0x11ba98(__read+72)
read(any u32, any, any) @ libc.so.6+0x11c9e6(__read_nocancel+6)
write(any u32, any, any) @ libc.so.6+0x11c572(write+18)
write(any u32, any, any) @ libc.so.6+0x11c5ab(write+75)
write(any u32, any, any) @ libc.so.6+0x11cab9(__write_nocancel+9)
close(any u32) @ libc.so.6+0x1166f2(close+18)
close(any u32) @ libc.so.6+0x11671a(close+58)
close(any u32) @ libc.so.6+0x11c609(__close_nocancel+9)
fstat(any u32, any) @ libc.so.6+0x117389(fstat+9)
poll(any, 1, any u32) @ libc.so.6+0x11b492(__poll+18)
poll(any, any, any u32) @ libc.so.6+0x11b4cb(__poll+75)
lseek(any u32, any, any) @ libc.so.6+0x11afd9(lseek+9)
mmap(0, any, PROT_READ|PROT_WRITE, any u32, -1 as u32, 0) @ libc.so.6+0x12531a(mmap+42)
mmap(any, any, PROT_NONE-PROT_READ, any u32, any u32, 0) @ libc.so.6+0x12531a(mmap+42)
mmap(0, any, PROT_NONE-PROT_READ, any u32, any u32, 0) @ libc.so.6+0x12537d(mmap+141)
mmap(0, any, PROT_READ|PROT_WRITE, any u32, -1 as u32, 0) @ libc.so.6+0x12537d(mmap+141)
mprotect(any, any, PROT_READ|PROT_WRITE) @ libc.so.6+0x125c19(mprotect+9)
munmap(any, any) @ libc.so.6+0x125d49(munmap+9)
brk(any) @ libc.so.6+0x11d779(brk+9)
rt_sigaction(any u32, any, any, 8) @ libc.so.6+0x45408(__libc_sigaction+216)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ libc.so.6+0x288b5(abort+149)
rt_sigprocmask(SIG_BLOCK, libc.so.6+0x1d5e30(sigall_set*), any, 8) @ libc.so.6+0x9ea62(pthread_kill+98)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ libc.so.6+0x9eaae(pthread_kill+174)
rt_sigprocmask(SIG_BLOCK, any, any, 8) @ libc.so.6+0xa3f36(pthread_sigmask+70)
rt_sigprocmask(SIG_SETMASK, any, any, 8) @ libc.so.6+0xa3f36(pthread_sigmask+70)
rt_sigreturn(any) @ libc.so.6+0x45327
ioctl(any u32, TCGETS, any) @ libc.so.6+0x11ce4c(tcgetattr+44)
ioctl(any u32, any u32, any) @ libc.so.6+0x124deb(ioctl+59)
pread64(any u32, any, 384, any) @ libc.so.6+0x11c9ac(__pread64_nocancel+12)
readv(-1 as u32, any, 0x1-0x2) @ libc.so.6+0x126962(readv+18)
readv(any u32, any, any u32) @ libc.so.6+0x126999(readv+73)
writev(STDERR_FILENO, any, any) @ libc.so.6+0x9095f(__libc_message_impl*+351)
access(any, any u32) @ libc.so.6+0x116629(access+9)
mremap(any, any, any, MREMAP_MAYMOVE, 0) @ libc.so.6+0x12a34f(mremap+47)
madvise(any, any, MADV_HUGEPAGE) @ libc.so.6+0x1250b9(madvise+9)
shmat(any u32, 0, any u32) @ libc.so.6+0x12c719(shmat+9)
shmctl(any u32, IPC_STAT, any) @ libc.so.6+0x12c7b9(shmctl+9)
dup(any u32) @ libc.so.6+0x116939(dup+9)
dup2(any u32, any u32) @ libc.so.6+0x116969(__dup2+9)
pause() @ libc.so.6+0xfa3d2(pause+18)
pause() @ libc.so.6+0xfa3f4(pause+52)
alarm(any u32) @ libc.so.6+0xee239(alarm+9)
getpid() @ libc.so.6+0xf5a99(getpid+9)
socket(any u32, any u32, any u32) @ libc.so.6+0x12c2e9(socket+9)
connect(any u32, any, 0) @ libc.so.6+0x12b972(connect+18)
connect(any u32, any, 110) @ libc.so.6+0x12b972(connect+18)
connect(any u32, any, any u32) @ libc.so.6+0x12b9a9(connect+73)
accept(any u32, any, any) @ libc.so.6+0x12b802(accept+18)
accept(any u32, any, any) @ libc.so.6+0x12b83b(accept+75)
sendto(any u32, any, 0xc-0x40c, MSG_NOSIGNAL, 0, 0) @ libc.so.6+0x12beab(__send+27)
sendto(any u32, any, any, any u32, 0, 0) @ libc.so.6+0x12bef8(__send+104)
recvmsg(any u32, any, MSG_CMSG_CLOEXEC) @ libc.so.6+0x12bdfb(recvmsg+27)
recvmsg(any u32, any, any u32) @ libc.so.6+0x12be39(recvmsg+89)
shutdown(any u32, any u32) @ libc.so.6+0x12c199(shutdown+9)
bind(any u32, any, 0) @ libc.so.6+0x12b939(bind+9)
listen(any u32, any u32) @ libc.so.6+0x12bb29(listen+9)
socketpair(any u32, any u32, any u32, any) @ libc.so.6+0x12c31c(socketpair+12)
setsockopt(any u32, SOL_IP, 0x0, any, any u32) @ libc.so.6+0x12c15c(setsockopt+12)
clone(SIGCHLD|CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID, 0, 0, any, 0) @ libc.so.6+0xee1a5(_Fork+37)
exit(0) @ libc.so.6+0x2a1ec(__libc_start_call_main*+156)
wait4(any u32, any, any u32, 0) @ libc.so.6+0x1107a5(wait4+21)
wait4(any u32, any, any u32, any) @ libc.so.6+0x1107e1(wait4+81)
kill(any u32, SIGABRT) @ libc.so.6+0x45529(kill+9)
shmdt(NULL-0xfffffffffffffffe) @ libc.so.6+0x12c749(shmdt+9)
msgsnd(any u32, 0, any u32, any u32) @ libc.so.6+0x12c435(__libc_msgsnd+21)
msgsnd(any u32, any, any, any u32) @ libc.so.6+0x12c472(__libc_msgsnd+82)
msgrcv(any u32, any, any, 0, any u32) @ libc.so.6+0x12c4d5(__libc_msgrcv+21)
msgrcv(any u32, any, any, any, any u32) @ libc.so.6+0x12c51b(__libc_msgrcv+91)
fcntl(any u32, F_SETLKW, any) @ libc.so.6+0x11703e(fcntl64+110)
fcntl(any u32, F_OFD_SETLKW, any) @ libc.so.6+0x11703e(fcntl64+110)
fcntl(any u32, any u32, any) @ libc.so.6+0x117081(fcntl64+177)
fcntl(any u32, F_SETFD, 1) @ libc.so.6+0x11c710(__fcntl64_nocancel*+64)
fcntl(any u32, F_GETFL, any) @ libc.so.6+0x11c710(__fcntl64_nocancel*+64)
fcntl(any u32, F_SETLKW, any) @ libc.so.6+0x11c710(__fcntl64_nocancel*+64)
fcntl(any u32, F_DUPFD-F_SETLK, any) @ libc.so.6+0x11c795(__fcntl64_nocancel_adjusted*+37)
fcntl(any u32, F_SETOWN, any) @ libc.so.6+0x11c795(__fcntl64_nocancel_adjusted*+37)
fcntl(any u32, F_SETSIG-F_OFD_SETLK, any) @ libc.so.6+0x11c795(__fcntl64_nocancel_adjusted*+37)
fcntl(any u32, 0x27-0xffffffff, any) @ libc.so.6+0x11c795(__fcntl64_nocancel_adjusted*+37)
fcntl(any u32, F_GETOWN_EX, any) @ libc.so.6+0x11c7be(__fcntl64_nocancel_adjusted*+78)
flock(any u32, any u32) @ libc.so.6+0x117359(flock+9)
getcwd(non-NULL, any) @ libc.so.6+0x11a499(getcwd+137)
chdir(any) @ libc.so.6+0x116659(chdir+9)
rename(any, any) @ libc.so.6+0x661c9(rename+9)
mkdir(any, 0) @ libc.so.6+0x11b029(mkdir+9)
mkdir(any, 0700) @ libc.so.6+0x11b029(mkdir+9)
rmdir(any) @ libc.so.6+0x11bb59(rmdir+9)
link(any, any) @ libc.so.6+0x11ae59(link+9)
unlink(any) @ libc.so.6+0x11c409(unlink+9)
symlink(any, any) @ libc.so.6+0x11bf79(symlink+9)
readlink(any, non-NULL, 511) @ libc.so.6+0x11baf9(readlink+9)
umask(any) @ libc.so.6+0x11c3f9(umask+9)
gettimeofday(any, any) @ libc.so.6+0xdf6de(__gettimeofday_syscall*+14)
times(any) @ libc.so.6+0x110689(times+9)
getuid() @ libc.so.6+0xf5b49(getuid+9)
getgid() @ libc.so.6+0xf4769(getgid+9)
geteuid() @ libc.so.6+0xf4759(geteuid+9)
getegid() @ libc.so.6+0xf4749(getegid+9)
setpgid(any u32, any u32) @ libc.so.6+0x10e909(setpgid+9)
getppid() @ libc.so.6+0xf5aa9(getppid+9)
setreuid(any u32, -1 as u32) @ libc.so.6+0x1270c9(setreuid+41)
setregid(any u32, -1 as u32) @ libc.so.6+0x127039(setregid+41)
getgroups(any u32, any) @ libc.so.6+0xf4779(getgroups+9)
setgroups(any, any) @ libc.so.6+0x10e8a9(setgroups+41)
setresuid(0, 0, -1 as u32) @ libc.so.6+0x10e9f9(setresuid+41)
setresuid(0, -1 as u32, -1 as u32) @ libc.so.6+0x10e9f9(setresuid+41)
setresuid(-1 as u32, 0, -1 as u32) @ libc.so.6+0x10e9f9(setresuid+41)
setresuid(-1 as u32, -1 as u32, -1 as u32) @ libc.so.6+0x10e9f9(setresuid+41)
setresuid(-1 as u32, NULL-0xfffffffe, -1 as u32) @ libc.so.6+0x126e9a(seteuid+58)
setresgid(any u32, any u32, -1 as u32) @ libc.so.6+0x10e969(setresgid+41)
setresgid(-1 as u32, 0, -1 as u32) @ libc.so.6+0x126dea(setegid+58)
getpgid(any) @ libc.so.6+0xf5a59(getpgid+9)
sigaltstack(0, any) @ libc.so.6+0x135bed(____longjmp_chk*+77)
getpriority(any, any u32) @ libc.so.6+0x11d5e9(getpriority+9)
setpriority(any u32, any u32, any u32) @ libc.so.6+0x11d629(setpriority+9)
sched_getparam(0, any) @ libc.so.6+0x10e659(sched_getparam+9)
sched_setscheduler(0, 0, any) @ libc.so.6+0x10e7a9(sched_setscheduler+9)
sched_getscheduler(any u32) @ libc.so.6+0x10e689(__sched_getscheduler+9)
sched_get_priority_max(1) @ libc.so.6+0x10e6b9(__sched_get_priority_max+9)
sched_get_priority_min(1) @ libc.so.6+0x10e6e9(sched_get_priority_min+9)
prctl(PR_SET_VMA, 0, NULL-0xfffffffffffffffe, 0, libc.so.6+0x1cb259) @ libc.so.6+0x12a7bd(__set_vma_name*+125)
prctl(PR_SET_VMA, 0, NULL-0xfffffffffffffffe, NULL-0xfffffffffffffffe, libc.so.6+0x1cc2f9) @ libc.so.6+0x12a7bd(__set_vma_name*+125)
prctl(PR_SET_VMA, 0, NULL-0xfffffffffffffffe, any, libc.so.6+0x1cc637) @ libc.so.6+0x12a7bd(__set_vma_name*+125)
prctl(PR_SET_VMA, 0, any, any, libc.so.6+0x1cc622) @ libc.so.6+0x12a7bd(__set_vma_name*+125)
chroot(any) @ libc.so.6+0x11d7d9(chroot+9)
gettid() @ libc.so.6+0x9eb05(pthread_kill+261)
time(any) @ libc.so.6+0xdf5d9(time_syscall*+9)
futex(any, any u8, any u32, 0, any, any)
futex(any, any u32, 0, any, 0, -1 as u32)
sched_getaffinity(0, 0x1000, any) @ libc.so.6+0x11fab6(__get_nprocs_sched*+54)
getdents64(any u32, any, any) @ libc.so.6+0xed935(getdents64+21)
restart_syscall()
semtimedop(any u32, any, any, 0) @ libc.so.6+0x12c6dc(semtimedop+12)
clock_gettime(CLOCK_REALTIME-CLOCK_MONOTONIC, any) @ libc.so.6+0xec97d(__clock_gettime+45)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ libc.so.6+0xeca78(clock_nanosleep+88)
clock_nanosleep(any u32, 0, any, any) @ libc.so.6+0xecadd(clock_nanosleep+189)
clock_nanosleep(CLOCK_MONOTONIC, 0, any, any) @ libc.so.6+0xecb29(clock_nanosleep+265)
clock_nanosleep(CLOCK_MONOTONIC, 0, any, any) @ libc.so.6+0xecb4b(clock_nanosleep+299)
clock_nanosleep(CLOCK_MONOTONIC, 0, any, any) @ libc.so.6+0xecbbc(clock_nanosleep+412)
clock_nanosleep(CLOCK_MONOTONIC, 0, any, any) @ libc.so.6+0xecc08(clock_nanosleep+488)
exit_group(NULL-0x1) @ ld-linux-x86-64.so.2+0x25fa3(_exit*+19)
exit_group(5) @ ld-linux-x86-64.so.2+0x25fa3(_exit*+19)
exit_group(127) @ ld-linux-x86-64.so.2+0x25fa3(_exit*+19)
exit_group(1) @ libc.so.6+0xee21b(_Exit+27)
exit_group(127) @ libc.so.6+0xee21b(_Exit+27)
exit_group(-1 as u32) @ libc.so.6+0xee21b(_Exit+27)
tgkill(any u32, 0, SIGABRT) @ libc.so.6+0x9eaef(pthread_kill+239)
tgkill(any u32, any u32, SIGABRT) @ libc.so.6+0x9eb1a(pthread_kill+282)
openat(AT_FDCWD, any, O_RDONLY-62|O_CREAT|O_EXCL, any) @ libc.so.6+0x11b173(__open+83)
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0x11b173(__open+83)
openat(AT_FDCWD, any, O_RDONLY-62|O_CREAT|O_EXCL, any) @ libc.so.6+0x11b1e3(__open+195)
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0x11b1e3(__open+195)
openat(any u32, libc.so.6+0x1cce16, O_RDONLY, any) @ libc.so.6+0x11b2e0(openat+64)
openat(any u32, any, any u32, any) @ libc.so.6+0x11b355(openat+181)
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0x11c8b2(__open_nocancel+66)
openat(AT_FDCWD, non-NULL, O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC, any) @ libc.so.6+0x11c8b2(__open_nocancel+66)
openat(AT_FDCWD, libc.so.6+0x1cf632, O_RDONLY, any) @ libc.so.6+0x11c8b2(__open_nocancel+66)
newfstatat(any u32, any, any, AT_SYMLINK_NOFOLLOW) @ libc.so.6+0x1173bc(fstatat64+12)
newfstatat(AT_FDCWD, any, any, 0) @ libc.so.6+0x1173bc(fstatat64+12)
unlinkat(any u32, any, 0) @ libc.so.6+0x11c439(unlinkat+9)
pselect6(0, any, any, any, any, 0) @ libc.so.6+0x126c3c(select+172)
pselect6(0, any, any, any, any, 0) @ libc.so.6+0x126cd5(select+325)
set_robust_list(any, 24) @ libc.so.6+0xee1df(_Fork+95)
utimensat(any u32, any, any, 0) @ libc.so.6+0x11c4dc(__GI___utimensat64_helper*+12)
accept4(any u32, any, any, SOCK_CLOEXEC) @ libc.so.6+0x12b8a5(accept4+21)
accept4(any u32, any, any, any u32) @ libc.so.6+0x12b8e2(accept4+82)
dup3(STDIN_FILENO, STDIN_FILENO-0xfffffffe, 0) @ libc.so.6+0x116999(dup3+9)
dup3(any u32, any u32, O_CLOEXEC) @ libc.so.6+0x116999(dup3+9)
pipe2(any, 0) @ libc.so.6+0x11b41b(pipe+11)
pipe2(any, O_CLOEXEC) @ libc.so.6+0x11b459(pipe2+9)
prlimit64(0, RLIMIT_NOFILE, 0, any) @ libc.so.6+0x11d1c2(__getrlimit+18)
getrandom(any, 8, GRND_NONBLOCK) @ libc.so.6+0x48852(getrandom+18)
getrandom(any, any, any u32) @ libc.so.6+0x4888b(getrandom+75)
getrandom(libc.so.6+0x20a178(tcache_key*), 8, GRND_NONBLOCK) @ libc.so.6+0xa9d97(ptmalloc_init.part.0*+55)
