callander: permitted syscalls: read(any u32, any, any) @ libc.so.6+0x11ba5f(__read+15)
read(any u32, any, any) @ libc.so.6+0x11ba98(__read+72)
read(any u32, any, any) @ libc.so.6+0x11c9e6(__read_nocancel+6)
write(any u32, any, any) @ libc.so.6+0x11c572(write+18)
write(any u32, any, any) @ libc.so.6+0x11c5ab(write+75)
write(any u32, any, any) @ libc.so.6+0x11cab9(__write_nocancel+9)
close(any u32) @ libc.so.6+0x1166f2(close+18)
close(any u32) @ libc.so.6+0x11671a(close+58)
close(any u32) @ libc.so.6+0x11c609(__close_nocancel+9)
close(STDERR_FILENO-0x7fffffff) @ libc.so.6+0x12725b(syscall+27)
close(any u32) @ libc.so.6+0x13a267(__netlink_open*+167)
close(any u32) @ libc.so.6+0x13a470(getifaddrs_internal*+496)
fstat(any u32, any) @ libc.so.6+0x117389(fstat+9)
poll(any, any, any u32) @ libc.so.6+0x11b492(__poll+18)
poll(any, any, any u32) @ libc.so.6+0x11b4cb(__poll+75)
lseek(any u32, any, any) @ libc.so.6+0x11afd9(lseek+9)
mmap(0, any, PROT_READ|PROT_WRITE, any u32, -1 as u32, 0) @ libc.so.6+0x12531a(mmap+42)
mmap(any, any, PROT_NONE-PROT_READ, any u32, any u32, 0) @ libc.so.6+0x12531a(mmap+42)
mmap(0, any, PROT_NONE-PROT_READ, any u32, any u32, 0) @ libc.so.6+0x12537d(mmap+141)
mmap(0, any, PROT_READ|PROT_WRITE, any u32, -1 as u32, 0) @ libc.so.6+0x12537d(mmap+141)
mprotect(any, any, PROT_READ|PROT_WRITE) @ libc.so.6+0x125c19(mprotect+9)
munmap(any, any) @ libc.so.6+0x125d49(munmap+9)
brk(any) @ libc.so.6+0x11d779(brk+9)
rt_sigaction(any, any, any, sizeof(kernel_sigset_t)) @ libc.so.6+0x45408(__libc_sigaction+216)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x288b5(abort+149)
rt_sigprocmask(SIG_BLOCK, 0, any, sizeof(kernel_sigset_t)) @ libc.so.6+0x486dc(getcontext+204)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x4a96e(setcontext+30)
rt_sigprocmask(SIG_SETMASK, any, any, sizeof(kernel_sigset_t)) @ libc.so.6+0x5813f(swapcontext+143)
rt_sigprocmask(SIG_BLOCK, libc.so.6+0x1d5e30(sigall_set*), any, sizeof(kernel_sigset_t)) @ libc.so.6+0x9ea62(pthread_kill+98)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0x9eaae(pthread_kill+174)
rt_sigprocmask(SIG_BLOCK, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0xa3f36(pthread_sigmask+70)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ libc.so.6+0xa3f36(pthread_sigmask+70)
rt_sigreturn(any) @ libc.so.6+0x45327
ioctl(any u32, TCGETS, any) @ libc.so.6+0x11cc92(tcsetattr+50)
ioctl(any u32, TCSETS, any) @ libc.so.6+0x11cd0e(tcsetattr+174)
ioctl(any u32, TCGETS, any) @ libc.so.6+0x11cd39(tcsetattr+217)
ioctl(any u32, TCGETS, any) @ libc.so.6+0x11ce4c(tcgetattr+44)
ioctl(any u32, FIONREAD, any) @ libc.so.6+0x124deb(ioctl+59)
ioctl(any u32, FIONBIO, any) @ libc.so.6+0x124deb(ioctl+59)
ioctl(any u32, SIOCGIFNAME, any) @ libc.so.6+0x124deb(ioctl+59)
ioctl(any u32, SIOCGIFCONF, any) @ libc.so.6+0x124deb(ioctl+59)
ioctl(any u32, SIOCGIFNETMASK, any) @ libc.so.6+0x124deb(ioctl+59)
ioctl(any u32, SIOCGIFINDEX, any) @ libc.so.6+0x124deb(ioctl+59)
pread64(STDIN_FILENO-0xfffffffe, any, 511, 0) @ libc.so.6+0x11c9ac(__pread64_nocancel+12)
pread64(any u32, any, 384, any) @ libc.so.6+0x11c9ac(__pread64_nocancel+12)
readv(any, any, any u32) @ libc.so.6+0x126962(readv+18)
readv(any u32, any, any u32) @ libc.so.6+0x126999(readv+73)
writev(any u32, any, any) @ ld-linux-x86-64.so.2+0xe52a(_dl_debug_vdprintf*+314)
writev(STDERR_FILENO, any, any) @ libc.so.6+0x9095f(__libc_message_impl*+351)
writev(any u32, any, 0x2-0x4) @ libc.so.6+0x129862(writev+18)
writev(any u32, any, 0x8-0x9) @ libc.so.6+0x129862(writev+18)
writev(any u32, any, any u32) @ libc.so.6+0x129899(writev+73)
access(any, F_OK) @ libc.so.6+0x116629(access+9)
access(any, R_OK) @ libc.so.6+0x116629(access+9)
mremap(any, any, any, MREMAP_MAYMOVE, any) @ libc.so.6+0x12a34f(mremap+47)
madvise(any, any, MADV_DONTNEED) @ libc.so.6+0x1250b9(madvise+9)
madvise(any, any, MADV_HUGEPAGE) @ libc.so.6+0x1250b9(madvise+9)
shmget(114, 1, 0) @ libc.so.6+0x12c77c(shmget+12)
shmget(114, 1, 0444) @ libc.so.6+0x12c77c(shmget+12)
shmat(NULL-0xfffffffe, 0, SHM_NORESERVE) @ libc.so.6+0x12c719(shmat+9)
dup(any u32) @ libc.so.6+0x116939(dup+9)
alarm(any u32) @ libc.so.6+0xee239(alarm+9)
getpid() @ ld-linux-x86-64.so.2+0x25fc9(__GI___getpid*+9)
getpid() @ libc.so.6+0xf5a99(getpid+9)
socket(any u32, any u32, any u32) @ libc.so.6+0x12c2e9(socket+9)
connect(any u32, any, any u32) @ libc.so.6+0x12b972(connect+18)
connect(any u32, any, any u32) @ libc.so.6+0x12b9a9(connect+73)
accept(any u32, any, any) @ libc.so.6+0x12b802(accept+18)
accept(any u32, any, any) @ libc.so.6+0x12b83b(accept+75)
sendto(any u32, any, any, 0, 0, 0) @ libc.so.6+0x12beab(__send+27)
sendto(any u32, any, any, MSG_NOSIGNAL, 0, 0) @ libc.so.6+0x12beab(__send+27)
sendto(any u32, any, any, any u32, 0, 0) @ libc.so.6+0x12bef8(__send+104)
sendto(any u32, any, any, 0, any, any u32) @ libc.so.6+0x12c0a5(sendto+21)
sendto(any u32, any, any, any u32, any, any u32) @ libc.so.6+0x12c0f2(sendto+98)
recvfrom(any u32, any, any, 0, 0, 0) @ libc.so.6+0x12bbcb(__recv+27)
recvfrom(any u32, any, any, any u32, 0, 0) @ libc.so.6+0x12bc18(__recv+104)
recvfrom(any u32, any, any, any u32, any, any) @ libc.so.6+0x12bc85(recvfrom+21)
recvfrom(any u32, any, any, any u32, any, any) @ libc.so.6+0x12bcd2(recvfrom+98)
sendmsg(any u32, any, 0) @ libc.so.6+0x12c002(sendmsg+18)
sendmsg(any u32, any, MSG_NOSIGNAL) @ libc.so.6+0x12c002(sendmsg+18)
sendmsg(any u32, any, any u32) @ libc.so.6+0x12c039(sendmsg+73)
recvmsg(any u32, any, 0) @ libc.so.6+0x12bdfb(recvmsg+27)
recvmsg(any u32, any, MSG_CMSG_CLOEXEC) @ libc.so.6+0x12bdfb(recvmsg+27)
recvmsg(any u32, any, any u32) @ libc.so.6+0x12be39(recvmsg+89)
shutdown(STDIN_FILENO-0xfffffffe, SHUT_RDWR) @ libc.so.6+0x12c199(shutdown+9)
bind(any u32, any, any u32) @ libc.so.6+0x12b939(bind+9)
listen(STDIN_FILENO-0xfffffffe, 0x1000) @ libc.so.6+0x12bb29(listen+9)
listen(any u32, 1) @ libc.so.6+0x12bb29(listen+9)
getsockname(any, any, any) @ libc.so.6+0x12ba39(getsockname+9)
getpeername(any u32, any, any) @ libc.so.6+0x12ba09(getpeername+9)
setsockopt(STDIN_FILENO-0xfffffffe, SOL_SOCKET, SO_REUSEADDR, any, 4) @ libc.so.6+0x12c15c(setsockopt+12)
setsockopt(STDIN_FILENO-0xfffffffe, SOL_TCP, TCP_NODELAY, any, 4) @ libc.so.6+0x12c15c(setsockopt+12)
setsockopt(any u32, SOL_IP-SOL_SOCKET, SO_KEEPALIVE-SO_NO_CHECK, any, 4) @ libc.so.6+0x12c15c(setsockopt+12)
setsockopt(any u32, SOL_SOCKET, SO_LINGER, libkrb5.so.3+0x8ec38, 8) @ libc.so.6+0x12c15c(setsockopt+12)
setsockopt(any u32, SOL_SOCKET, SO_RCVTIMEO_OLD-SO_SNDTIMEO_OLD, any, 16) @ libc.so.6+0x12c15c(setsockopt+12)
setsockopt(any u32, SOL_TCP, TCP_ULP, libcrypto.so.3+0x3fa641, 4) @ libc.so.6+0x12c15c(setsockopt+12)
setsockopt(any u32, SOL_IPV6, IPV6_MTU_DISCOVER, any, 4) @ libc.so.6+0x12c15c(setsockopt+12)
setsockopt(any u32, SOL_IPV6, IPV6_RECVERR-IPV6_V6ONLY, any, 4) @ libc.so.6+0x12c15c(setsockopt+12)
setsockopt(any u32, SOL_IPV6, IPV6_DONTFRAG, any, 4) @ libc.so.6+0x12c15c(setsockopt+12)
setsockopt(any u32, SOL_TLS, TLS_TX-TLS_RX, any, any) @ libc.so.6+0x12c15c(setsockopt+12)
getsockopt(any u32, SOL_IP, IP_MTU, any, any) @ libc.so.6+0x12ba6c(getsockopt+12)
getsockopt(any u32, SOL_SOCKET, SO_TYPE-SO_ERROR, any, any) @ libc.so.6+0x12ba6c(getsockopt+12)
getsockopt(any u32, SOL_SOCKET, SO_RCVTIMEO_OLD-SO_SNDTIMEO_OLD, any, any) @ libc.so.6+0x12ba6c(getsockopt+12)
getsockopt(any u32, SOL_IPV6, IPV6_MTU, any, any) @ libc.so.6+0x12ba6c(getsockopt+12)
exit(0) @ libc.so.6+0x2a1ec(__libc_start_call_main*+156)
kill(any u32, SIGTERM) @ libc.so.6+0x45529(kill+9)
uname(any) @ libc.so.6+0x1106e9(uname+9)
shmdt(any) @ libc.so.6+0x12c749(shmdt+9)
fcntl(any u32, F_SETLKW, any) @ libc.so.6+0x11703e(fcntl64+110)
fcntl(any u32, F_OFD_SETLKW, any) @ libc.so.6+0x11703e(fcntl64+110)
fcntl(any u32, any u32, any) @ libc.so.6+0x117081(fcntl64+177)
fcntl(any u32, F_SETFD, FD_CLOEXEC) @ libc.so.6+0x11c710(__fcntl64_nocancel*+64)
fcntl(any u32, F_GETFL, any) @ libc.so.6+0x11c710(__fcntl64_nocancel*+64)
fcntl(any u32, F_SETLKW, any) @ libc.so.6+0x11c710(__fcntl64_nocancel*+64)
fcntl(any u32, F_GETFD, any) @ libc.so.6+0x11c795(__fcntl64_nocancel_adjusted*+37)
fcntl(any u32, F_SETFD, any u32) @ libc.so.6+0x11c795(__fcntl64_nocancel_adjusted*+37)
fcntl(any u32, F_GETFL, any) @ libc.so.6+0x11c795(__fcntl64_nocancel_adjusted*+37)
fcntl(any u32, F_SETFL, any u16) @ libc.so.6+0x11c795(__fcntl64_nocancel_adjusted*+37)
fcntl(any u32, F_SETLK, any) @ libc.so.6+0x11c795(__fcntl64_nocancel_adjusted*+37)
fcntl(any u32, F_OFD_SETLK, any) @ libc.so.6+0x11c795(__fcntl64_nocancel_adjusted*+37)
flock(any u32, LOCK_SH-LOCK_EX|LOCK_NB) @ libc.so.6+0x117359(flock+9)
flock(any u32, LOCK_UN) @ libc.so.6+0x117359(flock+9)
flock(any u32, LOCK_UN|LOCK_NB) @ libc.so.6+0x117359(flock+9)
fsync(any u32) @ libc.so.6+0x11ede2(fsync+18)
fsync(any u32) @ libc.so.6+0x11ee0a(fsync+58)
ftruncate(any u32, 0) @ libc.so.6+0x11ee69(ftruncate64+9)
getcwd(non-NULL, any) @ libc.so.6+0x11a499(getcwd+137)
rename(any, any) @ libc.so.6+0x661c9(rename+9)
mkdir(any, 0700) @ libc.so.6+0x11b029(mkdir+9)
rmdir(non-NULL) @ libc.so.6+0x11bb59(rmdir+9)
link(any, any) @ libc.so.6+0x11ae59(link+9)
unlink(any) @ libc.so.6+0x11c409(unlink+9)
readlink(any, non-NULL, 511) @ libc.so.6+0x11baf9(readlink+9)
chmod(any, 0600) @ libc.so.6+0x116689(chmod+9)
fchmod(STDIN_FILENO-0xfffffffe, 0-0600) @ libc.so.6+0x116d99(fchmod+9)
gettimeofday(any, any) @ libc.so.6+0xdf6de(__gettimeofday_syscall*+14)
getuid() @ libc.so.6+0xf5b49(getuid+9)
getgid() @ libc.so.6+0xf4769(getgid+9)
geteuid() @ libc.so.6+0xf4759(geteuid+9)
getegid() @ libc.so.6+0xf4749(getegid+9)
sched_getparam(any u32, any) @ libc.so.6+0x10e659(sched_getparam+9)
sched_setscheduler(any u32, any u32, any) @ libc.so.6+0x10e7a9(sched_setscheduler+9)
sched_getscheduler(any u32) @ libc.so.6+0x10e689(__sched_getscheduler+9)
sched_get_priority_max(1) @ libc.so.6+0x10e6b9(__sched_get_priority_max+9)
sched_get_priority_min(1) @ libc.so.6+0x10e6e9(sched_get_priority_min+9)
prctl(PR_GET_DUMPABLE, any, any, any, any) @ libc.so.6+0x12a5b7(prctl+87)
prctl(PR_SET_VMA, 0, NULL-0xfffffffffffffffe, NULL-0xfffffffffffffffe, " glibc: fatal") @ libc.so.6+0x12a7bd(__set_vma_name*+125)
prctl(PR_SET_VMA, 0, NULL-0xfffffffffffffffe, any, " glibc: assert") @ libc.so.6+0x12a7bd(__set_vma_name*+125)
prctl(PR_SET_VMA, 0, NULL-0xfffffffffffffffe, any, " glibc: malloc") @ libc.so.6+0x12a7bd(__set_vma_name*+125)
prctl(PR_SET_VMA, 0, any, any, " glibc: malloc arena") @ libc.so.6+0x12a7bd(__set_vma_name*+125)
sync() @ libc.so.6+0x1271e9(sync+9)
gettid() @ libc.so.6+0x9eb05(pthread_kill+261)
time(any) @ libc.so.6+0xdf5d9(time_syscall*+9)
futex(any, any u8, any u32, 0, any, any)
futex(any, any u32, any u32, any, 0, -1 as u32)
futex(libstdc++.so.6+0x27a7e0, FUTEX_WAKE, INT_MAX, any, any, any)
futex(libstdc++.so.6+0x27a828, FUTEX_WAKE, INT_MAX, any, any, any)
sched_getaffinity(0, 0x1000, any) @ libc.so.6+0x11fab6(__get_nprocs_sched*+54)
getdents64(any u32, any, any) @ libc.so.6+0xed935(getdents64+21)
restart_syscall()
clock_gettime(CLOCK_REALTIME-CLOCK_MONOTONIC, any) @ libc.so.6+0xec97d(__clock_gettime+45)
clock_gettime(CLOCK_REALTIME_COARSE, any) @ libc.so.6+0xec97d(__clock_gettime+45)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ libc.so.6+0xeca78(clock_nanosleep+88)
clock_nanosleep(any u32, 0, any, any) @ libc.so.6+0xecadd(clock_nanosleep+189)
clock_nanosleep(CLOCK_MONOTONIC, 0, any, any) @ libc.so.6+0xecb29(clock_nanosleep+265)
clock_nanosleep(CLOCK_MONOTONIC, 0, any, any) @ libc.so.6+0xecb4b(clock_nanosleep+299)
clock_nanosleep(CLOCK_MONOTONIC, 0, any, any) @ libc.so.6+0xecbbc(clock_nanosleep+412)
clock_nanosleep(CLOCK_MONOTONIC, 0, any, any) @ libc.so.6+0xecc08(clock_nanosleep+488)
exit_group(NULL-0x1fe) @ ld-linux-x86-64.so.2+0x25fa3(_exit*+19)
exit_group(any u32) @ libc.so.6+0xee21b(_Exit+27)
tgkill(any u32, any u32, SIGABRT) @ libc.so.6+0x9eaef(pthread_kill+239)
tgkill(any u32, any u32, SIGFPE) @ libc.so.6+0x9eaef(pthread_kill+239)
tgkill(any u32, any u32, SIGABRT) @ libc.so.6+0x9eb1a(pthread_kill+282)
tgkill(any u32, any u32, SIGFPE) @ libc.so.6+0x9eb1a(pthread_kill+282)
add_key(any, "__krb5_time_offsets__", any, 8, any u32) @ libc.so.6+0x12725b(syscall+27)
add_key("keyring", any, 0, 0, any u32) @ libc.so.6+0x12725b(syscall+27)
add_key("user", any, any, any, any u32) @ libc.so.6+0x12725b(syscall+27)
add_key("big_key", any, any, any, any u32) @ libc.so.6+0x12725b(syscall+27)
keyctl(KEYCTL_GET_KEYRING_ID, any, any, any, any) @ libc.so.6+0x12725b(syscall+27)
keyctl(KEYCTL_DESCRIBE-KEYCTL_READ, any, any, any, any) @ libc.so.6+0x12725b(syscall+27)
keyctl(KEYCTL_SET_TIMEOUT, any, any, any, any) @ libc.so.6+0x12725b(syscall+27)
keyctl(KEYCTL_GET_PERSISTENT, any, any, any, any) @ libc.so.6+0x12725b(syscall+27)
openat(AT_FDCWD, any, any u32, any) @ libc.so.6+0x11b173(__open+83)
openat(AT_FDCWD, any, any u32, any) @ libc.so.6+0x11b1e3(__open+195)
openat(any u32, "..", O_RDONLY, any) @ libc.so.6+0x11b2e0(openat+64)
openat(any u32, any, any u32, any) @ libc.so.6+0x11b355(openat+181)
openat(AT_FDCWD, any, O_WRONLY|O_CREAT|O_TRUNC-O_RDWR|O_CREAT|O_TRUNC, any u32) @ libc.so.6+0x11c8b2(__open_nocancel+66)
openat(AT_FDCWD, any, O_WRONLY|O_CREAT|O_APPEND-O_RDWR|O_CREAT|O_APPEND, any u32) @ libc.so.6+0x11c8b2(__open_nocancel+66)
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0x11c8b2(__open_nocancel+66)
openat(AT_FDCWD, any, O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC, any) @ libc.so.6+0x11c8b2(__open_nocancel+66)
openat(AT_FDCWD, non-NULL, O_RDONLY, any) @ libc.so.6+0x11c8b2(__open_nocancel+66)
openat(AT_FDCWD, "/sys/kernel/mm/hugepages", O_RDONLY|O_DIRECTORY, any) @ libc.so.6+0x11c8b2(__open_nocancel+66)
newfstatat(any u32, any, any, 0) @ libc.so.6+0x1173bc(fstatat64+12)
newfstatat(any u32, any, any, AT_SYMLINK_NOFOLLOW) @ libc.so.6+0x1173bc(fstatat64+12)
unlinkat(any u32, any, 0) @ libc.so.6+0x11c439(unlinkat+9)
pselect6(any u32, any, 0, any, any, 0) @ libc.so.6+0x126c3c(select+172)
pselect6(0x1-0x400, any, any, 0, any, 0) @ libc.so.6+0x126c3c(select+172)
pselect6(any u32, any, any, any, any, 0) @ libc.so.6+0x126cd5(select+325)
sendmmsg(any u32, any, 2, MSG_NOSIGNAL) @ libc.so.6+0x12bf65(sendmmsg+21)
sendmmsg(any u32, any, any u32, any u32) @ libc.so.6+0x12bfa0(sendmmsg+80)
getrandom(any, any, 0) @ libc.so.6+0x4652f(arc4random+47)
getrandom(any, any, 0) @ libc.so.6+0x48730(getentropy+48)
getrandom(any, 8, GRND_NONBLOCK) @ libc.so.6+0x48852(getrandom+18)
getrandom(any, any, any u32) @ libc.so.6+0x4888b(getrandom+75)
getrandom(libc.so.6+0x20a178(tcache_key*), 8, GRND_NONBLOCK) @ libc.so.6+0xa9d97(ptmalloc_init.part.0*+55)
getrandom(any, non-NULL, 0) @ libc.so.6+0x12725b(syscall+27)
map_shadow_stack(0, 0xa0-0x8000000000000a6, 1) @ libc.so.6+0x5efb9(__allocate_shadow_stack*+41)
