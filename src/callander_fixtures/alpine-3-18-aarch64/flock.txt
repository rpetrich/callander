callander: permitted syscalls: dup(any) @ ld-musl-aarch64.so.1+0x64dac(dup+16)
fcntl(any, F_SETFD, FD_CLOEXEC) @ ld-musl-aarch64.so.1+0x21204(open+136)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x5128c(fstatat64+108)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x51e9c(__stdout_write*+56)
flock(any, any) @ ld-musl-aarch64.so.1+0x243b8(flock+20)
faccessat(AT_FDCWD, any, W_OK|R_OK) @ ld-musl-aarch64.so.1+0x64c78(access+32)
openat(AT_FDCWD, "/dev/null", O_RDWR|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x20630(__init_libc*+380)
openat(AT_FDCWD, any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
openat(AT_FDCWD, any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
openat(AT_FDCWD, any, O_RDONLY|O_NONBLOCK|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x61dbc(__map_file*+44)
close(any) @ ld-musl-aarch64.so.1+0x51bb8(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x5dc8c
close(any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
close(any) @ ld-musl-aarch64.so.1+0x61de4(__map_file*+84)
close(any) @ ld-musl-aarch64.so.1+0x61e30(__map_file*+160)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x65550(lseek64+12)
read(any, any, any) @ ld-musl-aarch64.so.1+0x51ce8(__stdio_read*+76)
readv(any, any, 2) @ ld-musl-aarch64.so.1+0x51ce8(__stdio_read*+76)
writev(any, any, any) @ ld-musl-aarch64.so.1+0x51dc0(__stdio_write*+76)
ppoll(any, 3, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x20608(__init_libc*+340)
newfstatat(any, "", any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x512a8(fstatat64+136)
newfstatat(any, "", any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x512dc(fstatat64+188)
newfstatat(AT_FDCWD, any, any, 0) @ ld-musl-aarch64.so.1+0x512dc(fstatat64+188)
fstat(any, any) @ ld-musl-aarch64.so.1+0x51270(fstatat64+80)
exit(0) @ ld-musl-aarch64.so.1+0x5dc2c
exit(0xfffffffffffff001-0xffffffffffffffff) @ ld-musl-aarch64.so.1+0x5dc2c
exit(any) @ ld-musl-aarch64.so.1+0x5dc64
exit(0) @ ld-musl-aarch64.so.1+0x5f384(pthread_exit+400)
exit_group(any) @ ld-musl-aarch64.so.1+0x20cbc(_Exit+12)
set_tid_address(ld-musl-aarch64.so.1+0xb2240(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x48040(_Fork+128)
set_tid_address(any) @ ld-musl-aarch64.so.1+0x5f40c(start*+64)
futex(any, FUTEX_WAIT, any, 0, any, any)
futex(any, FUTEX_WAKE, 0-INT_MAX, any, any u32, any u32)
futex(any, FUTEX_WAKE, 1, any, any, any)
futex(any, FUTEX_WAKE, INT_MAX, INT_MAX, any, any)
futex(any, FUTEX_REQUEUE, 0, 1, ld-musl-aarch64.so.1+0xb1df4, ld-musl-aarch64.so.1+0xb1df4)
futex(any, FUTEX_LOCK_PI-FUTEX_UNLOCK_PI, 0, 0, any u32, any)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any, any)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 0-INT_MAX, any, any u32, any u32)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 1, any, any, any)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, INT_MAX, any, any)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, ld-musl-aarch64.so.1+0xb1df4, ld-musl-aarch64.so.1+0xb1df4)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG-FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any u32, any)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(ld-musl-aarch64.so.1+0xb1dc8, FUTEX_WAKE, INT_MAX, ld-musl-aarch64.so.1+0xb1dc8, any, any)
futex(ld-musl-aarch64.so.1+0xb2338(vmlock*), FUTEX_WAKE, INT_MAX, ld-musl-aarch64.so.1+0xb2338(vmlock*), any, any)
futex(ld-musl-aarch64.so.1+0xb2338(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, ld-musl-aarch64.so.1+0xb2338(vmlock*), any, any)
set_robust_list(0, sizeof(struct robust_list_head)) @ ld-musl-aarch64.so.1+0x5f358(pthread_exit+356)
set_robust_list(any, sizeof(struct robust_list_head)) @ ld-musl-aarch64.so.1+0x60434(__pthread_mutex_trylock_owner*+204)
timer_create(CLOCK_MONOTONIC, any, any) @ ld-musl-aarch64.so.1+0x646e0(timer_create+144)
timer_create(CLOCK_MONOTONIC, any, any) @ ld-musl-aarch64.so.1+0x64814(timer_create+452)
timer_settime(any, 0, any, 0) @ ld-musl-aarch64.so.1+0x6492c(timer_settime+32)
timer_delete(0-INT_MAX) @ ld-musl-aarch64.so.1+0x64600(start*+200)
timer_delete(any) @ ld-musl-aarch64.so.1+0x648ac(timer_delete+56)
clock_gettime(CLOCK_MONOTONIC_RAW, any) @ ld-musl-aarch64.so.1+0x632b0(clock_gettime+72)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
sched_setscheduler(any, any, any) @ ld-musl-aarch64.so.1+0x5f8a8(pthread_create+1040)
restart_syscall()
tkill(any, SIGSETXID) @ ld-musl-aarch64.so.1+0x5e724(cancel_handler*+176)
tkill(non-NULL, SIGSETXID) @ ld-musl-aarch64.so.1+0x5ffec(pthread_kill+68)
tkill(any, SIGCANCEL) @ ld-musl-aarch64.so.1+0x6489c(timer_delete+40)
rt_sigaction(SIGALRM, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x5081c(__libc_sigaction*+240)
rt_sigaction(SIGCHLD, any, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x5081c(__libc_sigaction*+240)
rt_sigaction(SIGCANCEL-SIGSETXID, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x5081c(__libc_sigaction*+240)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0x6f118(all_mask*), any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x50518(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0x6f110(app_mask*), any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x50538(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x50554(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x508a4(__libc_sigaction*+376)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x5f44c(start*+128)
rt_sigprocmask(SIG_UNBLOCK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x5f544(pthread_create+172)
rt_sigprocmask(SIG_BLOCK, any, any, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x610e8(pthread_sigmask+24)
rt_sigprocmask(SIG_SETMASK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x610e8(pthread_sigmask+24)
rt_sigprocmask(SIG_BLOCK, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x647a8(timer_create+344)
rt_sigtimedwait(any, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x5dc8c
rt_sigtimedwait(any, any, 0, sizeof(kernel_sigset_t)) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
rt_sigreturn(any) @ ld-musl-aarch64.so.1+0x504d4
gettimeofday(non-NULL, any) @ [vdso]+0x658(__kernel_gettimeofday+256)
brk(0) @ ld-musl-aarch64.so.1+0x2b624(__malloc_alloc_meta*+304)
brk(any) @ ld-musl-aarch64.so.1+0x2b644(__malloc_alloc_meta*+336)
brk(any) @ ld-musl-aarch64.so.1+0x2b6b4(__malloc_alloc_meta*+448)
munmap(any, any) @ ld-musl-aarch64.so.1+0x3e974(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x5dc24
clone(SIGCHLD, 0, any, any, any) @ ld-musl-aarch64.so.1+0x47ff8(_Fork+56)
clone(CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID|CLONE_DETACHED, any, any, any, ld-musl-aarch64.so.1+0xb2240(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x5dc4c
mmap(0, NULL-0x7ffffffffffffffe, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
mmap(0, NULL-0x7ffffffffffffffe, PROT_READ, MAP_SHARED, any, 0) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
mmap(0, NULL-0x7ffffffffffffffe, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
mmap(any, NULL-0x7ffffffffffffffe, PROT_NONE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
mprotect(any, any, PROT_READ|PROT_WRITE) @ ld-musl-aarch64.so.1+0x3e834(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x66cb8(reloc_all*+364)
wait4(0x1-0x7fffffff, any, 0, 0) @ ld-musl-aarch64.so.1+0x5dc8c
wait4(0x1-0x7fffffff, any, 0, 0) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
membarrier(MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED, 0) @ ld-musl-aarch64.so.1+0x2462c(__membarrier_init*+12)
