callander: permitted syscalls: getxattr(any, /usr/bin/strace+0xf3897, any, 255) @ ld-musl-aarch64.so.1+0x24d94(getxattr+4)
getcwd(any, 0x1000) @ ld-musl-aarch64.so.1+0x65238(getcwd+36)
getcwd(non-NULL, 0x1000-0x1001) @ ld-musl-aarch64.so.1+0x65238(getcwd+36)
dup(STDIN_FILENO-0xfffffffffffffffe) @ ld-musl-aarch64.so.1+0x64dac(dup+16)
dup3(STDOUT_FILENO--1 as u32, STDIN_FILENO, 0) @ ld-musl-aarch64.so.1+0x64dd8(dup2+28)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x21164(fcntl+376)
fcntl(any, F_SETFD, any u32) @ ld-musl-aarch64.so.1+0x21164(fcntl+376)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x21204(open+136)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x45cc0(socket+148)
fcntl(any, F_SETFL, 2048) @ ld-musl-aarch64.so.1+0x45cd8(socket+172)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x5128c(fstatat64+108)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x517f0(fdopen+176)
fcntl(any, F_GETFL, any) @ ld-musl-aarch64.so.1+0x51810(fdopen+208)
fcntl(any, F_SETFL, any) @ ld-musl-aarch64.so.1+0x51828(fdopen+232)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x52fd4(fopen64+148)
fcntl(STDIN_FILENO, F_GETFD, any) @ ld-musl-aarch64.so.1+0x64e0c(dup2+80)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x650a0(fchdir+76)
ioctl(any, SIOCGIFNAME, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, NS_GET_PARENT, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x5186c(fdopen+300)
ioctl(any u32, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x51e9c(__stdout_write*+56)
chdir(/usr/bin/strace+0xf391d) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
chdir(any) @ ld-musl-aarch64.so.1+0x650c0(fchdir+108)
fchdir(any) @ ld-musl-aarch64.so.1+0x6506c(fchdir+24)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9bee9, O_RDWR|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x20630(__init_libc*+380)
openat(AT_FDCWD, any, O_RDONLY, any) @ ld-musl-aarch64.so.1+0x52fb0(fopen64+112)
openat(AT_FDCWD, any, O_WRONLY|O_CREAT|O_TRUNC, 0666) @ ld-musl-aarch64.so.1+0x52fb0(fopen64+112)
openat(AT_FDCWD, any, O_WRONLY|O_CREAT|O_APPEND, 0666) @ ld-musl-aarch64.so.1+0x52fb0(fopen64+112)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9bee9, O_RDONLY|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x52fb0(fopen64+112)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9c31c, O_RDONLY|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x52fb0(fopen64+112)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9c332, O_RDONLY|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x52fb0(fopen64+112)
openat(AT_FDCWD, any, O_RDONLY|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x5dc8c
openat(AT_FDCWD, any, O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x5dc8c
openat(AT_FDCWD, any, O_RDONLY|O_DIRECTORY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x5dc8c
openat(AT_FDCWD, non-NULL, O_WRONLY|O_CREAT|O_TRUNC|O_NOFOLLOW, 0666) @ ld-musl-aarch64.so.1+0x5dc8c
openat(AT_FDCWD, non-NULL, O_WRONLY|O_CREAT|O_APPEND|O_NOFOLLOW, 0666) @ ld-musl-aarch64.so.1+0x5dc8c
openat(AT_FDCWD, any, O_RDONLY|O_NOFOLLOW, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
openat(AT_FDCWD, any, O_RDONLY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
openat(AT_FDCWD, any, O_RDONLY|O_DIRECTORY|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
openat(AT_FDCWD, non-NULL, O_WRONLY|O_CREAT|O_TRUNC|O_NOFOLLOW, 0666) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
openat(AT_FDCWD, non-NULL, O_WRONLY|O_CREAT|O_APPEND|O_NOFOLLOW, 0666) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
openat(AT_FDCWD, any, O_RDONLY|O_NONBLOCK|O_NOFOLLOW|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x61dbc(__map_file*+44)
close(any) @ ld-musl-aarch64.so.1+0x20014(opendir+56)
close(any) @ ld-musl-aarch64.so.1+0x41ff4(if_indextoname+84)
close(any) @ ld-musl-aarch64.so.1+0x51bb8(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x52ff0(fopen64+176)
close(any) @ ld-musl-aarch64.so.1+0x5dc8c
close(any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
close(any) @ ld-musl-aarch64.so.1+0x61de4(__map_file*+84)
close(any) @ ld-musl-aarch64.so.1+0x61e30(__map_file*+160)
pipe2(any, 0) @ ld-musl-aarch64.so.1+0x65620(pipe+16)
getdents64(any u32, any, 2048) @ ld-musl-aarch64.so.1+0x2005c(readdir64+44)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x65550(lseek64+12)
read(any u32, any, any) @ ld-musl-aarch64.so.1+0x51ce8(__stdio_read*+76)
read(any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
read(any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
write(any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
write(any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
readv(any u32, any, 2) @ ld-musl-aarch64.so.1+0x51ce8(__stdio_read*+76)
writev(any u32, any, any) @ ld-musl-aarch64.so.1+0x51dc0(__stdio_write*+76)
pread64(any, any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
pread64(any, any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
ppoll(any, 3, any, 0, 8) @ ld-musl-aarch64.so.1+0x20608(__init_libc*+340)
ppoll(0, 0, 0, 0, 0) @ ld-musl-aarch64.so.1+0x5dc8c
ppoll(0, 0, 0, 0, 0) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
readlinkat(AT_FDCWD, any, any, non-NULL) @ ld-musl-aarch64.so.1+0x65808(readlink+44)
newfstatat(any, any, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x512a8(fstatat64+136)
newfstatat(any, any, any, 0-AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x512dc(fstatat64+188)
fstat(any, any) @ ld-musl-aarch64.so.1+0x51270(fstatat64+80)
exit(any) @ ld-musl-aarch64.so.1+0x5dc2c
exit(any) @ ld-musl-aarch64.so.1+0x5dc64
exit(0) @ ld-musl-aarch64.so.1+0x5f384(pthread_exit+400)
exit_group(any) @ ld-musl-aarch64.so.1+0x20cbc(_Exit+12)
exit_group(0) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
set_tid_address(ld-musl-aarch64.so.1+0xb2240(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x48040(_Fork+128)
set_tid_address(any) @ ld-musl-aarch64.so.1+0x5f40c(start*+64)
futex(any, FUTEX_WAIT, any, 0, 0, any)
futex(any, FUTEX_WAIT, non-NULL, 0, any, any u32)
futex(any, FUTEX_WAIT, 0xffffffff80000000-0xffffffffffffffff, 0, 0x80000000-0xffffffff, any)
futex(any, FUTEX_WAKE, 0-INT_MAX, any, any u32, any u32)
futex(any, FUTEX_WAKE, 1, any, any, any)
futex(any, FUTEX_WAKE, INT_MAX, any, any, any)
futex(any, FUTEX_REQUEUE, 0, 1, any, any)
futex(any, FUTEX_LOCK_PI-FUTEX_UNLOCK_PI, 0, 0, any u32, any)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, 0, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, any, any u32)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, 0xffffffff80000000-0xffffffffffffffff, 0, 0x80000000-0xffffffff, any)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 0-INT_MAX, any, any u32, any u32)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 1, any, any, any)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, any, any)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG-FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any u32, any)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(ld-musl-aarch64.so.1+0xb2240(__thread_list_lock*), FUTEX_WAIT, non-NULL, 0, ld-musl-aarch64.so.1+0xb22e4(tl_lock_waiters*), ld-musl-aarch64.so.1+0xb2240(__thread_list_lock*))
futex(ld-musl-aarch64.so.1+0xb2240(__thread_list_lock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, ld-musl-aarch64.so.1+0xb22e4(tl_lock_waiters*), ld-musl-aarch64.so.1+0xb2240(__thread_list_lock*))
futex(ld-musl-aarch64.so.1+0xb2338(vmlock*), FUTEX_WAIT, non-NULL, 0, ld-musl-aarch64.so.1+0xb233c, ld-musl-aarch64.so.1+0xb2338(vmlock*))
futex(ld-musl-aarch64.so.1+0xb2338(vmlock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, non-NULL, 0, ld-musl-aarch64.so.1+0xb233c, ld-musl-aarch64.so.1+0xb2338(vmlock*))
futex(ld-musl-aarch64.so.1+0xb2338(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, ld-musl-aarch64.so.1+0xb2338(vmlock*), any, any)
set_robust_list(0, 24) @ ld-musl-aarch64.so.1+0x5f358(pthread_exit+356)
set_robust_list(any, 24) @ ld-musl-aarch64.so.1+0x60434(__pthread_mutex_trylock_owner*+204)
nanosleep(any, any) @ ld-musl-aarch64.so.1+0x5dc8c
nanosleep(any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
setitimer(ITIMER_REAL, any, any) @ ld-musl-aarch64.so.1+0x5070c(setitimer+16)
timer_create(CLOCK_MONOTONIC, 0, any) @ ld-musl-aarch64.so.1+0x646e0(timer_create+144)
timer_gettime(CLOCK_REALTIME-0xfffffffffffffffe, any) @ ld-musl-aarch64.so.1+0x648fc(timer_gettime+28)
timer_settime(any, TIMER_ABSTIME, any, 0) @ ld-musl-aarch64.so.1+0x6492c(timer_settime+32)
clock_gettime(CLOCK_REALTIME-CLOCK_MONOTONIC, any) @ ld-musl-aarch64.so.1+0x632b0(clock_gettime+72)
clock_gettime(CLOCK_BOOTTIME, any) @ ld-musl-aarch64.so.1+0x632b0(clock_gettime+72)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
ptrace(any, any, 0, any) @ ld-musl-aarch64.so.1+0x24928(ptrace+104)
ptrace(PTRACE_PEEKDATA, any, any, any) @ ld-musl-aarch64.so.1+0x24928(ptrace+104)
ptrace(PTRACE_POKEDATA, any, any, any) @ ld-musl-aarch64.so.1+0x24928(ptrace+104)
ptrace(PTRACE_GETREGSET, any, 0x1-0x2, any) @ ld-musl-aarch64.so.1+0x24928(ptrace+104)
ptrace(PTRACE_SETREGSET, any, 1, any) @ ld-musl-aarch64.so.1+0x24928(ptrace+104)
ptrace(PTRACE_SETREGSET, any, 1028, any) @ ld-musl-aarch64.so.1+0x24928(ptrace+104)
ptrace(PTRACE_GET_SYSCALL_INFO, any, 88, any) @ ld-musl-aarch64.so.1+0x24928(ptrace+104)
sched_setscheduler(any u32, any, any) @ ld-musl-aarch64.so.1+0x5f8a8(pthread_create+1040)
sched_getaffinity(0, 0x1-0xffffffff, 0) @ ld-musl-aarch64.so.1+0x4f7f4(do_getaffinity*+8)
restart_syscall()
kill(any, SIGKILL) @ ld-musl-aarch64.so.1+0x24a8c(do_setgroups*+76)
kill(any, any) @ ld-musl-aarch64.so.1+0x50590(kill+20)
kill(any, SIGKILL) @ ld-musl-aarch64.so.1+0x65a38(do_setxid*+76)
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x20d1c(abort+84)
tkill(any u32, 0x0) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
tkill(any u32, SIGSTOP) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
tkill(any, any) @ ld-musl-aarch64.so.1+0x506d8(raise+44)
tkill(any u32, SIGSETXID) @ ld-musl-aarch64.so.1+0x5e724(cancel_handler*+176)
tkill(non-NULL, SIGSETXID) @ ld-musl-aarch64.so.1+0x5ffec(pthread_kill+68)
tkill(any u32, SIGSYNCCALL) @ ld-musl-aarch64.so.1+0x61b18(__synccall*+404)
rt_sigaction(SIGABRT, any, 0, 8) @ ld-musl-aarch64.so.1+0x20d08(abort+64)
rt_sigaction(any u8, any, any, 8) @ ld-musl-aarch64.so.1+0x5081c(__libc_sigaction*+240)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x20d34(abort+108)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0x6f118(all_mask*), any, 8) @ ld-musl-aarch64.so.1+0x50518(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0x6f110(app_mask*), any, 8) @ ld-musl-aarch64.so.1+0x50538(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x50554(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x508a4(__libc_sigaction*+376)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x5f44c(start*+128)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x5f544(pthread_create+172)
rt_sigprocmask(SIG_BLOCK-SIG_UNBLOCK, any, any, 8) @ ld-musl-aarch64.so.1+0x610e8(pthread_sigmask+24)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x610e8(pthread_sigmask+24)
rt_sigreturn(any) @ ld-musl-aarch64.so.1+0x504d4
setpgid(0, 0) @ ld-musl-aarch64.so.1+0x65950(setpgid+20)
setsid() @ ld-musl-aarch64.so.1+0x659c8(setsid+12)
setgroups(any, any) @ ld-musl-aarch64.so.1+0x24a60(do_setgroups*+32)
setgroups(any, any) @ ld-musl-aarch64.so.1+0x65a0c(do_setxid*+32)
uname(any) @ ld-musl-aarch64.so.1+0x3e200(uname+12)
getrlimit(0x20, any) @ ld-musl-aarch64.so.1+0x3ca94(getrlimit+112)
getrlimit(0x64, any) @ ld-musl-aarch64.so.1+0x3ca94(getrlimit+112)
setrlimit(any u32, any) @ ld-musl-aarch64.so.1+0x3db34(do_setrlimit*+24)
prctl(PR_SET_SECCOMP, 2, 0, any, any) @ ld-musl-aarch64.so.1+0x24844(prctl+104)
prctl(PR_SET_SECCOMP, 2, /usr/bin/strace+0x132050, any, any) @ ld-musl-aarch64.so.1+0x24844(prctl+104)
prctl(PR_SET_SECCOMP, 2, /usr/bin/strace+0x180068, any, any) @ ld-musl-aarch64.so.1+0x24844(prctl+104)
prctl(PR_SET_NO_NEW_PRIVS, 1, 0, any, any) @ ld-musl-aarch64.so.1+0x24844(prctl+104)
prctl(PR_SET_PTRACER, -1, any u32, any, any) @ ld-musl-aarch64.so.1+0x24844(prctl+104)
gettimeofday(any, 0) @ ld-musl-aarch64.so.1+0x632d0(clock_gettime+104)
gettimeofday(non-NULL, any) @ [vdso]+0x658(__kernel_gettimeofday+256)
getpid() @ ld-musl-aarch64.so.1+0x24a80(do_setgroups*+64)
getpid() @ ld-musl-aarch64.so.1+0x6541c(getpid+4)
getpid() @ ld-musl-aarch64.so.1+0x65a2c(do_setxid*+64)
getuid() @ ld-musl-aarch64.so.1+0x65454(getuid+4)
geteuid() @ ld-musl-aarch64.so.1+0x652c8(geteuid+4)
getgid() @ ld-musl-aarch64.so.1+0x652d4(getgid+4)
gettid() @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
gettid() @ ld-musl-aarch64.so.1+0x61aa8(__synccall*+292)
socket(AF_UNIX, SOCK_STREAM|SOCK_CLOEXEC-SOCK_DGRAM|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x45c54(socket+40)
socket(AF_NETLINK, SOCK_RAW, 4) @ ld-musl-aarch64.so.1+0x45c54(socket+40)
socket(AF_NETLINK, SOCK_RAW, 16) @ ld-musl-aarch64.so.1+0x45c54(socket+40)
socket(AF_UNIX, 0-SOCK_DGRAM|SOCK_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x45c8c(socket+96)
connect(any, ld-musl-aarch64.so.1+0x95b22(addr*), 24) @ ld-musl-aarch64.so.1+0x5dc8c
connect(any, ld-musl-aarch64.so.1+0x95b22(addr*), 24) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
sendmsg(any, any, 0) @ ld-musl-aarch64.so.1+0x5dc8c
sendmsg(any, any, MSG_NOSIGNAL) @ ld-musl-aarch64.so.1+0x5dc8c
sendmsg(any, any, 0) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
sendmsg(any, any, MSG_NOSIGNAL) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
recvmsg(any, any, 0) @ ld-musl-aarch64.so.1+0x5dc8c
recvmsg(any, any, MSG_DONTWAIT) @ ld-musl-aarch64.so.1+0x5dc8c
recvmsg(any, any, 0) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
recvmsg(any, any, MSG_DONTWAIT) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
brk(0) @ ld-musl-aarch64.so.1+0x249e4(sbrk+16)
brk(0) @ ld-musl-aarch64.so.1+0x2b624(__malloc_alloc_meta*+304)
brk(any) @ ld-musl-aarch64.so.1+0x2b644(__malloc_alloc_meta*+336)
brk(any) @ ld-musl-aarch64.so.1+0x2b6b4(__malloc_alloc_meta*+448)
munmap(any, any) @ ld-musl-aarch64.so.1+0x3e974(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x5dc24
mremap(any, NULL-0xfffffffffffff000, NULL-0x7ffffffffffffffe, MREMAP_MAYMOVE, 0) @ ld-musl-aarch64.so.1+0x3e8d0(mremap+140)
clone(SIGCHLD, 0, any, any, any) @ ld-musl-aarch64.so.1+0x47ff8(_Fork+56)
clone(SIGCHLD|CLONE_VM|CLONE_VFORK, 0, any, any, any) @ ld-musl-aarch64.so.1+0x48098
clone(CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID|CLONE_DETACHED, any, any, any, ld-musl-aarch64.so.1+0xb2240(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x5dc4c
mmap(0, NULL-0x7ffffffffffffffe, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
mmap(0, NULL-0x7ffffffffffffffe, PROT_READ, MAP_SHARED-MAP_PRIVATE, any, 0) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
mmap(0, NULL-0x7ffffffffffffffe, PROT_READ|PROT_WRITE, MAP_PRIVATE, any, any) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
mmap(0, NULL-0x7ffffffffffffffe, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
mmap(NULL-0xfffffffffffffffe, NULL-0x7ffffffffffffffe, PROT_READ, MAP_PRIVATE|MAP_FIXED, any, any) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
mmap(any, NULL-0x7ffffffffffffffe, PROT_NONE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
mprotect(any, any, PROT_READ|PROT_WRITE) @ ld-musl-aarch64.so.1+0x3e834(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x66cb8(reloc_all*+364)
wait4(-1, any, __WALL-WNOHANG|__WALL, any) @ ld-musl-aarch64.so.1+0x24d7c(wait4+20)
wait4(0-INT_MAX, any, WUNTRACED, 0) @ ld-musl-aarch64.so.1+0x5dc8c
wait4(any, 0, 0, 0) @ ld-musl-aarch64.so.1+0x5dc8c
wait4(any, any, __WALL, 0) @ ld-musl-aarch64.so.1+0x5dc8c
wait4(0x1-0x7fffffff, any, 0, 0) @ ld-musl-aarch64.so.1+0x5dc8c
wait4(0-INT_MAX, any, WUNTRACED, 0) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
wait4(any, 0, 0, 0) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
wait4(any, any, __WALL, 0) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
wait4(0x1-0x7fffffff, any, 0, 0) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
prlimit64(0, 0x20, 0, any) @ ld-musl-aarch64.so.1+0x3ca50(getrlimit+44)
prlimit64(0, 0x64, 0, any) @ ld-musl-aarch64.so.1+0x3ca50(getrlimit+44)
prlimit64(0, RLIMIT_CORE, any, 0) @ ld-musl-aarch64.so.1+0x3db68(setrlimit+36)
process_vm_readv(any, any, 1, any, 1, 0) @ ld-musl-aarch64.so.1+0x248b8(process_vm_readv+8)
process_vm_writev(any, any, 1, any, 1, 0) @ ld-musl-aarch64.so.1+0x248a8(process_vm_writev+8)
membarrier(MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED, 0) @ ld-musl-aarch64.so.1+0x2462c(__membarrier_init*+12)
