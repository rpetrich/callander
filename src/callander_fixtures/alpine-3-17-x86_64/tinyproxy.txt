callander: permitted syscalls: read(any, any, any) @ ld-musl-x86_64.so.1+0x4a70c(__stdio_read*+77)
read(any, any, any) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
read(any, any, any) @ ld-musl-x86_64.so.1+0x583bc
write(any, any, any) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
write(any, any, any) @ ld-musl-x86_64.so.1+0x583bc
open(ld-musl-x86_64.so.1+0x94bc8, O_RDONLY|O_LARGEFILE|O_CLOEXEC, any) @ ld-musl-x86_64.so.1+0x4a451(__fopen_rb_ca*+52)
open(ld-musl-x86_64.so.1+0x94bd3, O_RDONLY|O_LARGEFILE|O_CLOEXEC, any) @ ld-musl-x86_64.so.1+0x4a451(__fopen_rb_ca*+52)
open(ld-musl-x86_64.so.1+0x94c58, O_RDONLY|O_LARGEFILE|O_CLOEXEC, any) @ ld-musl-x86_64.so.1+0x4a451(__fopen_rb_ca*+52)
open(any, O_RDONLY, any) @ ld-musl-x86_64.so.1+0x4b706(fopen64+85)
open(ld-musl-x86_64.so.1+0x94b63, O_RDONLY|O_CLOEXEC, any) @ ld-musl-x86_64.so.1+0x4b706(fopen64+85)
open(ld-musl-x86_64.so.1+0x94cae, O_RDONLY|O_CLOEXEC, any) @ ld-musl-x86_64.so.1+0x4b706(fopen64+85)
open(ld-musl-x86_64.so.1+0x94cb9, O_RDONLY|O_CLOEXEC, any) @ ld-musl-x86_64.so.1+0x4b706(fopen64+85)
open(non-NULL, any u16, any) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
open(non-NULL, any u16, any) @ ld-musl-x86_64.so.1+0x583bc
open(any, O_RDONLY|O_NONBLOCK|O_LARGEFILE|O_CLOEXEC, any) @ ld-musl-x86_64.so.1+0x583dc(__map_file*+24)
close(any) @ ld-musl-x86_64.so.1+0x3c34d(if_indextoname+72)
close(any) @ ld-musl-x86_64.so.1+0x3c62d(if_nametoindex+84)
close(any) @ ld-musl-x86_64.so.1+0x3e669(cleanup*+5)
close(any) @ ld-musl-x86_64.so.1+0x4a624(__stdio_close*+17)
close(any) @ ld-musl-x86_64.so.1+0x4b74f(fopen64+158)
close(any) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
close(any) @ ld-musl-x86_64.so.1+0x583bc
close(any) @ ld-musl-x86_64.so.1+0x58412(__map_file*+78)
close(any) @ ld-musl-x86_64.so.1+0x58448(__map_file*+132)
stat(any, any) @ ld-musl-x86_64.so.1+0x49dbb(fstatat64+207)
fstat(any, any) @ ld-musl-x86_64.so.1+0x49d23(fstatat64+55)
fstat(any, any) @ ld-musl-x86_64.so.1+0x583fb(__map_file*+55)
lstat(non-NULL, any) @ ld-musl-x86_64.so.1+0x49dbb(fstatat64+207)
poll(any, any, any) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
poll(any, any, any) @ ld-musl-x86_64.so.1+0x583bc
lseek(any, any, any) @ ld-musl-x86_64.so.1+0x5b425(lseek64+11)
mmap(0, any, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, any) @ ld-musl-x86_64.so.1+0x390f3(mmap+118)
mmap(0, any, PROT_READ, MAP_SHARED, any, any) @ ld-musl-x86_64.so.1+0x390f3(mmap+118)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, any) @ ld-musl-x86_64.so.1+0x390f3(mmap+118)
mmap(any, 0x1000, PROT_NONE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, any) @ ld-musl-x86_64.so.1+0x390f3(mmap+118)
mprotect(NULL-0xfffffffffffff000, any, PROT_READ|PROT_WRITE) @ ld-musl-x86_64.so.1+0x39165(mprotect+37)
munmap(any, any) @ ld-musl-x86_64.so.1+0x3926b(munmap+25)
munmap(any, any) @ ld-musl-x86_64.so.1+0x58350
brk(0) @ ld-musl-x86_64.so.1+0x26e0a(__malloc_alloc_meta*+234)
brk(any) @ ld-musl-x86_64.so.1+0x26e2f(__malloc_alloc_meta*+271)
brk(any) @ ld-musl-x86_64.so.1+0x26e59(__malloc_alloc_meta*+313)
rt_sigaction(SIGHUP-SIGINT, any, 0, 8) @ ld-musl-x86_64.so.1+0x494cb(__libc_sigaction*+282)
rt_sigaction(SIGUSR1, any, 0, 8) @ ld-musl-x86_64.so.1+0x494cb(__libc_sigaction*+282)
rt_sigaction(SIGPIPE, any, 0, 8) @ ld-musl-x86_64.so.1+0x494cb(__libc_sigaction*+282)
rt_sigaction(SIGTERM, any, 0, 8) @ ld-musl-x86_64.so.1+0x494cb(__libc_sigaction*+282)
rt_sigaction(SIGCHLD, any, 0, 8) @ ld-musl-x86_64.so.1+0x494cb(__libc_sigaction*+282)
rt_sigaction(SIGSETXID-SIGSYNCCALL, any, 0, 8) @ ld-musl-x86_64.so.1+0x494cb(__libc_sigaction*+282)
rt_sigaction(SIGHUP-SIGINT, any, any, 8) @ ld-musl-x86_64.so.1+0x494df(__libc_sigaction*+302)
rt_sigaction(SIGUSR1, any, any, 8) @ ld-musl-x86_64.so.1+0x494df(__libc_sigaction*+302)
rt_sigaction(SIGPIPE, any, any, 8) @ ld-musl-x86_64.so.1+0x494df(__libc_sigaction*+302)
rt_sigaction(SIGTERM, any, any, 8) @ ld-musl-x86_64.so.1+0x494df(__libc_sigaction*+302)
rt_sigaction(SIGCHLD, any, any, 8) @ ld-musl-x86_64.so.1+0x494df(__libc_sigaction*+302)
rt_sigprocmask(SIG_BLOCK, ld-musl-x86_64.so.1+0x937b8(all_mask*), any, 8) @ ld-musl-x86_64.so.1+0x491f6(__block_all_sigs*+23)
rt_sigprocmask(SIG_BLOCK, ld-musl-x86_64.so.1+0x937b0(app_mask*), any, 8) @ ld-musl-x86_64.so.1+0x49210(__block_app_sigs*+23)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-x86_64.so.1+0x49228(__restore_sigs*+21)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-x86_64.so.1+0x4944c(__libc_sigaction*+155)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-x86_64.so.1+0x56080(start*+104)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-x86_64.so.1+0x56194(pthread_create+202)
rt_sigprocmask(SIG_BLOCK, any, any, 8) @ ld-musl-x86_64.so.1+0x578ce(pthread_sigmask+29)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-x86_64.so.1+0x578ce(pthread_sigmask+29)
rt_sigreturn(any) @ ld-musl-x86_64.so.1+0x49ad1(__restore_rt*+7)
ioctl(any, SIOCGIFNAME, any) @ ld-musl-x86_64.so.1+0x37874(ioctl+48)
ioctl(any, SIOCGIFINDEX, any) @ ld-musl-x86_64.so.1+0x37874(ioctl+48)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-x86_64.so.1+0x4a344(fdopen+270)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-x86_64.so.1+0x4a883(__stdout_write*+48)
readv(any, any, 2) @ ld-musl-x86_64.so.1+0x4a70c(__stdio_read*+77)
writev(any, any, any) @ ld-musl-x86_64.so.1+0x4a7d4(__stdio_write*+81)
mremap(any, any u32, NULL-0xfffffffffffff000, MREMAP_MAYMOVE, any) @ ld-musl-x86_64.so.1+0x391ed(mremap+124)
madvise(NULL-0xfffffffffffffffe, any, MADV_FREE) @ ld-musl-x86_64.so.1+0x39038(madvise+9)
nanosleep(any, any) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
nanosleep(any, any) @ ld-musl-x86_64.so.1+0x583bc
getpid() @ ld-musl-x86_64.so.1+0x2049b(do_setgroups*+51)
getpid() @ ld-musl-x86_64.so.1+0x5b364(getpid+5)
getpid() @ ld-musl-x86_64.so.1+0x5b7fb(do_setxid*+54)
socket(any, any, any) @ ld-musl-x86_64.so.1+0x3f39a(socket+27)
socket(any, any, any) @ ld-musl-x86_64.so.1+0x3f3ca(socket+75)
connect(any, any, any u32) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
connect(any, any, any u32) @ ld-musl-x86_64.so.1+0x583bc
accept(any, any, any) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
accept(any, any, any) @ ld-musl-x86_64.so.1+0x583bc
sendto(any, any, any, 0, 0, 0) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
sendto(any, any, any, MSG_NOSIGNAL, any, any u32) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
sendto(any, any, any, 0, 0, 0) @ ld-musl-x86_64.so.1+0x583bc
sendto(any, any, any, MSG_NOSIGNAL, any, any u32) @ ld-musl-x86_64.so.1+0x583bc
recvfrom(any, any, any, 0, any, any) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
recvfrom(any, any, 512, MSG_PEEK, 0, 0) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
recvfrom(any, non-NULL, 2, MSG_PEEK, 0, 0) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
recvfrom(any, any, any, 0, any, any) @ ld-musl-x86_64.so.1+0x583bc
recvfrom(any, any, 512, MSG_PEEK, 0, 0) @ ld-musl-x86_64.so.1+0x583bc
recvfrom(any, non-NULL, 2, MSG_PEEK, 0, 0) @ ld-musl-x86_64.so.1+0x583bc
sendmsg(any, any, MSG_NOSIGNAL) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
sendmsg(any, any, MSG_NOSIGNAL) @ ld-musl-x86_64.so.1+0x583bc
shutdown(any, SHUT_WR) @ ld-musl-x86_64.so.1+0x3f34c(shutdown+23)
bind(any, any, any u32) @ ld-musl-x86_64.so.1+0x3a2d9(bind+20)
listen(any, 1024) @ ld-musl-x86_64.so.1+0x3ccbb(listen+23)
getsockname(any, any, any) @ ld-musl-x86_64.so.1+0x3c23b(getsockname+18)
setsockopt(any, SOL_SOCKET, SO_REUSEADDR, any, 4) @ ld-musl-x86_64.so.1+0x3f329(setsockopt+24)
setsockopt(any, SOL_SOCKET, 0x14-0x15, any, 16) @ ld-musl-x86_64.so.1+0x3f329(setsockopt+24)
setsockopt(any, SOL_IPV6, 0x1a, any, 4) @ ld-musl-x86_64.so.1+0x3f329(setsockopt+24)
clone(CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID|CLONE_DETACHED, any, any, ld-musl-x86_64.so.1+0x99fb0(__thread_list_lock*), any) @ ld-musl-x86_64.so.1+0x5837f
fork() @ ld-musl-x86_64.so.1+0x41471(_Fork+47)
exit(0) @ ld-musl-x86_64.so.1+0x56014(pthread_exit+483)
exit(0) @ ld-musl-x86_64.so.1+0x56066(start*+78)
exit(0) @ ld-musl-x86_64.so.1+0x5835a
wait4(-1, any, WNOHANG, 0) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
wait4(-1, any, WNOHANG, 0) @ ld-musl-x86_64.so.1+0x583bc
kill(any, SIGKILL) @ ld-musl-x86_64.so.1+0x204aa(do_setgroups*+66)
kill(any, SIGKILL) @ ld-musl-x86_64.so.1+0x5b80a(do_setxid*+69)
uname(any) @ ld-musl-x86_64.so.1+0x38bb1(uname+6)
fcntl(any, F_GETFL, 0) @ ld-musl-x86_64.so.1+0x1d2ad(fcntl+328)
fcntl(any, F_SETFL, any u16) @ ld-musl-x86_64.so.1+0x1d2ad(fcntl+328)
fcntl(any, F_SETLK, 0) @ ld-musl-x86_64.so.1+0x1d2ad(fcntl+328)
fcntl(any, F_SETFD, 1) @ ld-musl-x86_64.so.1+0x1d33a(open+126)
fcntl(any, F_SETFD, 1) @ ld-musl-x86_64.so.1+0x3f3f1(socket+114)
fcntl(any, F_SETFL, 2048) @ ld-musl-x86_64.so.1+0x3f40b(socket+140)
fcntl(any, F_GETFD, any) @ ld-musl-x86_64.so.1+0x49d3b(fstatat64+79)
fcntl(any, F_SETFD, 1) @ ld-musl-x86_64.so.1+0x4a2d5(fdopen+159)
fcntl(any, F_SETFD, 1) @ ld-musl-x86_64.so.1+0x4a472(__fopen_rb_ca*+85)
fcntl(any, F_SETFD, 1) @ ld-musl-x86_64.so.1+0x4b735(fopen64+132)
fsync(any) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
fsync(any) @ ld-musl-x86_64.so.1+0x583bc
chdir(/usr/bin/tinyproxy+0xff32) @ ld-musl-x86_64.so.1+0x5ad9b(chdir+6)
unlink(non-NULL) @ ld-musl-x86_64.so.1+0x5ba2d(unlink+6)
umask(127) @ ld-musl-x86_64.so.1+0x4a121(umask+8)
gettimeofday(any, 0) @ ld-musl-x86_64.so.1+0x59638(clock_gettime+80)
geteuid() @ ld-musl-x86_64.so.1+0x5b273(geteuid+5)
setsid() @ ld-musl-x86_64.so.1+0x5b7a9(setsid+6)
setgroups(any, any) @ ld-musl-x86_64.so.1+0x20480(do_setgroups*+24)
setgroups(any, any) @ ld-musl-x86_64.so.1+0x5b7e0(do_setxid*+27)
sched_setscheduler(any, any, any) @ ld-musl-x86_64.so.1+0x5650e(pthread_create+1092)
gettid() @ ld-musl-x86_64.so.1+0x41488(_Fork+70)
gettid() @ ld-musl-x86_64.so.1+0x580ab(__synccall*+172)
tkill(any, SIGSETXID) @ ld-musl-x86_64.so.1+0x5552b(cancel_handler*+103)
tkill(any, SIGCHLD) @ ld-musl-x86_64.so.1+0x56b68(pthread_kill+65)
tkill(any, SIGSETXID) @ ld-musl-x86_64.so.1+0x56b68(pthread_kill+65)
tkill(any, SIGSYNCCALL) @ ld-musl-x86_64.so.1+0x5811e(__synccall*+287)
futex(any, FUTEX_WAIT, any, 0, any u32, 0)
futex(any, FUTEX_WAIT, any, 0, any u32, 202)
futex(any, any u32, 1, any, 202, any)
futex(any, any, any, any, 0, any)
futex(any, FUTEX_WAKE, 1, any, any u32, 202)
futex(any, FUTEX_REQUEUE, 0, 1, ld-musl-x86_64.so.1+0x99884(init_fini_lock*+4), 202)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any u32, 0)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any u32, 202)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 1, any, any u32, 202)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, ld-musl-x86_64.so.1+0x99884(init_fini_lock*+4), 202)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, 128, any u32)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(ld-musl-x86_64.so.1+0x97460(maplock*), any u32, 0-INT_MAX, any, 202, any u32)
futex(ld-musl-x86_64.so.1+0x98b60(lock*), any u32, 0-INT_MAX, any, 202, any u32)
futex(ld-musl-x86_64.so.1+0x98ba0(key_lock*), any u32, 0-INT_MAX, any, 202, any u32)
futex(ld-musl-x86_64.so.1+0x99848(ctor_cond*+8), FUTEX_WAKE, INT_MAX, any, 202, any)
futex(ld-musl-x86_64.so.1+0x99900(lock*), any u32, 0-INT_MAX, any, 202, any u32)
futex(ld-musl-x86_64.so.1+0x99ee0(vmlock*), FUTEX_WAIT, any, 0, ld-musl-x86_64.so.1+0x99ee4(vmlock*+4), 0x1-0xffffffff)
futex(ld-musl-x86_64.so.1+0x99ee0(vmlock*), FUTEX_WAKE, INT_MAX, any, 202, any)
futex(ld-musl-x86_64.so.1+0x99ee0(vmlock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, ld-musl-x86_64.so.1+0x99ee4(vmlock*+4), 0x1-0xffffffff)
futex(ld-musl-x86_64.so.1+0x99ee0(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, any, 202, any)
futex(ld-musl-x86_64.so.1+0x99fb0(__thread_list_lock*), FUTEX_WAIT, any, 0, ld-musl-x86_64.so.1+0x9a038(tl_lock_waiters*), 0x1-0xffffffff)
set_tid_address(any) @ ld-musl-x86_64.so.1+0x5605a(start*+66)
restart_syscall()
clock_gettime(any, any) @ ld-musl-x86_64.so.1+0x59619(clock_gettime+49)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ ld-musl-x86_64.so.1+0x583bc
exit_group(any) @ ld-musl-x86_64.so.1+0x1cea9(_Exit+8)
newfstatat(any, ld-musl-x86_64.so.1+0x94d68, any, AT_EMPTY_PATH) @ ld-musl-x86_64.so.1+0x49d54(fstatat64+104)
newfstatat(any, ld-musl-x86_64.so.1+0x94d68, any, AT_EMPTY_PATH) @ ld-musl-x86_64.so.1+0x49dcd(fstatat64+225)
set_robust_list(0, 24) @ ld-musl-x86_64.so.1+0x55fbe(pthread_exit+397)
set_robust_list(any, 24) @ ld-musl-x86_64.so.1+0x56ede(__pthread_mutex_trylock_owner*+182)
membarrier(MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED, 0) @ ld-musl-x86_64.so.1+0x2016c(__membarrier_init*+12)
