callander: permitted syscalls: read(any, any, any) @ ld-musl-x86_64.so.1+0x4a70c(__stdio_read*+77)
read(any, any, 128) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
read(STDERR_FILENO, any, 1) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
read(STDERR_FILENO, any, 8) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
read(any, any, 128) @ ld-musl-x86_64.so.1+0x583bc
read(STDERR_FILENO, any, 1) @ ld-musl-x86_64.so.1+0x583bc
read(STDERR_FILENO, any, 8) @ ld-musl-x86_64.so.1+0x583bc
read(any, any, any) @ ld-musl-x86_64.so.1+0x5b7e0(do_setxid*+27)
open(any, O_RDONLY, any) @ ld-musl-x86_64.so.1+0x4b706(fopen64+85)
open(/bin/more+0x85a5, any u16, any) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
open(/bin/more+0x85a5, any u16, any) @ ld-musl-x86_64.so.1+0x583bc
open(any, O_RDONLY|O_NONBLOCK|O_LARGEFILE|O_CLOEXEC, any) @ ld-musl-x86_64.so.1+0x583dc(__map_file*+24)
close(any) @ ld-musl-x86_64.so.1+0x4a624(__stdio_close*+17)
close(any) @ ld-musl-x86_64.so.1+0x4b74f(fopen64+158)
close(any) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
close(any) @ ld-musl-x86_64.so.1+0x583bc
close(any) @ ld-musl-x86_64.so.1+0x58412(__map_file*+78)
close(any) @ ld-musl-x86_64.so.1+0x58448(__map_file*+132)
fstat(any, any) @ ld-musl-x86_64.so.1+0x583fb(__map_file*+55)
poll(any, 2, 1) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
poll(any, 2, -1) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
poll(any, 2, 1) @ ld-musl-x86_64.so.1+0x583bc
poll(any, 2, -1) @ ld-musl-x86_64.so.1+0x583bc
lseek(any, any, any) @ ld-musl-x86_64.so.1+0x5b425(lseek64+11)
mmap(0, any, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, any) @ ld-musl-x86_64.so.1+0x390f3(mmap+118)
mmap(0, any, PROT_READ, MAP_SHARED, any, any) @ ld-musl-x86_64.so.1+0x390f3(mmap+118)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, any) @ ld-musl-x86_64.so.1+0x390f3(mmap+118)
mmap(any, 0x1000, PROT_NONE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, any) @ ld-musl-x86_64.so.1+0x390f3(mmap+118)
mprotect(NULL-0xfffffffffffff000, any, PROT_READ|PROT_WRITE) @ ld-musl-x86_64.so.1+0x39165(mprotect+37)
munmap(any, any) @ ld-musl-x86_64.so.1+0x3926b(munmap+25)
brk(0) @ ld-musl-x86_64.so.1+0x26e0a(__malloc_alloc_meta*+234)
brk(any) @ ld-musl-x86_64.so.1+0x26e2f(__malloc_alloc_meta*+271)
rt_sigaction(SIGABRT, any, 0, 8) @ ld-musl-x86_64.so.1+0x1cf05(abort+78)
rt_sigaction(SIGINT, 0, 0, 8) @ ld-musl-x86_64.so.1+0x494cb(__libc_sigaction*+282)
rt_sigaction(SIGCHLD, 0, 0, 8) @ ld-musl-x86_64.so.1+0x494cb(__libc_sigaction*+282)
rt_sigaction(SIGTSTP, 0, 0, 8) @ ld-musl-x86_64.so.1+0x494cb(__libc_sigaction*+282)
rt_sigaction(SIGSETXID-SIGSYNCCALL, any, 0, 8) @ ld-musl-x86_64.so.1+0x494cb(__libc_sigaction*+282)
rt_sigaction(SIGINT, any, any, 8) @ ld-musl-x86_64.so.1+0x494df(__libc_sigaction*+302)
rt_sigaction(SIGCHLD, any, any, 8) @ ld-musl-x86_64.so.1+0x494df(__libc_sigaction*+302)
rt_sigaction(SIGTSTP, any, any, 8) @ ld-musl-x86_64.so.1+0x494df(__libc_sigaction*+302)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-x86_64.so.1+0x1cf36(abort+127)
rt_sigprocmask(SIG_BLOCK, ld-musl-x86_64.so.1+0x937b8(all_mask*), any, 8) @ ld-musl-x86_64.so.1+0x491f6(__block_all_sigs*+23)
rt_sigprocmask(SIG_BLOCK, ld-musl-x86_64.so.1+0x937b0(app_mask*), any, 8) @ ld-musl-x86_64.so.1+0x49210(__block_app_sigs*+23)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-x86_64.so.1+0x49228(__restore_sigs*+21)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-x86_64.so.1+0x4944c(__libc_sigaction*+155)
rt_sigprocmask(SIG_BLOCK, any, any, 8) @ ld-musl-x86_64.so.1+0x578ce(pthread_sigmask+29)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-x86_64.so.1+0x578ce(pthread_sigmask+29)
rt_sigreturn(any) @ ld-musl-x86_64.so.1+0x49ad1(__restore_rt*+7)
ioctl(any, TCGETS, any) @ ld-musl-x86_64.so.1+0x37874(ioctl+48)
ioctl(STDOUT_FILENO, TIOCGWINSZ, any) @ ld-musl-x86_64.so.1+0x37874(ioctl+48)
ioctl(STDERR_FILENO, TCSETS, any) @ ld-musl-x86_64.so.1+0x37874(ioctl+48)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-x86_64.so.1+0x4a344(fdopen+270)
ioctl(STDIN_FILENO, TIOCGWINSZ, any) @ ld-musl-x86_64.so.1+0x4a883(__stdout_write*+48)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-x86_64.so.1+0x5b3a2(isatty+22)
readv(any, any, 2) @ ld-musl-x86_64.so.1+0x4a70c(__stdio_read*+77)
writev(any, any, any) @ ld-musl-x86_64.so.1+0x4a7d4(__stdio_write*+81)
access(any, X_OK|W_OK|R_OK) @ ld-musl-x86_64.so.1+0x5ad31(access+9)
access(non-NULL, R_OK) @ ld-musl-x86_64.so.1+0x5ad31(access+9)
madvise(any, NULL-0xfffffffffffff000, MADV_FREE) @ ld-musl-x86_64.so.1+0x39038(madvise+9)
nanosleep(any, any) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
nanosleep(any, any) @ ld-musl-x86_64.so.1+0x583bc
getpid() @ ld-musl-x86_64.so.1+0x5b364(getpid+5)
getpid() @ ld-musl-x86_64.so.1+0x5b7fb(do_setxid*+54)
fork() @ ld-musl-x86_64.so.1+0x41471(_Fork+47)
wait4(-1, 0, 0, 0) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
wait4(-1, 0, 0, 0) @ ld-musl-x86_64.so.1+0x583bc
kill(any, SIGSTOP) @ ld-musl-x86_64.so.1+0x4924c(kill+12)
kill(any, SIGKILL) @ ld-musl-x86_64.so.1+0x5b80a(do_setxid*+69)
fcntl(any, F_SETFD, 1) @ ld-musl-x86_64.so.1+0x1d33a(open+126)
fcntl(any, F_SETFD, 1) @ ld-musl-x86_64.so.1+0x205a0(signalfd+68)
fcntl(any, F_SETFL, 2048) @ ld-musl-x86_64.so.1+0x205b8(signalfd+92)
fcntl(any, F_SETFD, 1) @ ld-musl-x86_64.so.1+0x4a2d5(fdopen+159)
fcntl(any, F_SETFD, 1) @ ld-musl-x86_64.so.1+0x4b735(fopen64+132)
gettimeofday(any, 0) @ ld-musl-x86_64.so.1+0x59638(clock_gettime+80)
getrlimit(RLIMIT_CPU-0x3fff, any) @ ld-musl-x86_64.so.1+0x37713(getrlimit+73)
sysinfo(any) @ ld-musl-x86_64.so.1+0x20657(sysinfo+6)
getuid() @ ld-musl-x86_64.so.1+0x5b389(getuid+5)
getgid() @ ld-musl-x86_64.so.1+0x5b27b(getgid+5)
geteuid() @ ld-musl-x86_64.so.1+0x5b273(geteuid+5)
getegid() @ ld-musl-x86_64.so.1+0x5b26b(getegid+5)
gettid() @ ld-musl-x86_64.so.1+0x41488(_Fork+70)
gettid() @ ld-musl-x86_64.so.1+0x580ab(__synccall*+172)
tkill(any, SIGABRT) @ ld-musl-x86_64.so.1+0x1cf1c(abort+101)
tkill(any, SIGABRT) @ ld-musl-x86_64.so.1+0x4936a(raise+43)
tkill(any, SIGSETXID) @ ld-musl-x86_64.so.1+0x5552b(cancel_handler*+103)
tkill(any, SIGSYNCCALL) @ ld-musl-x86_64.so.1+0x5811e(__synccall*+287)
futex(any, FUTEX_WAIT, any, 0, any u32, 0)
futex(any, FUTEX_WAIT, any, 0, any u32, 202)
futex(any, FUTEX_WAIT, any, any, 0, any)
futex(any, any u32, 1, any, 202, any)
futex(any, FUTEX_WAKE, 1, any, any u32, 202)
futex(any, FUTEX_REQUEUE, 0, 1, ld-musl-x86_64.so.1+0x99884(init_fini_lock*+4), 202)
futex(any, FUTEX_LOCK_PI, 0, 0, 0, any u32)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, 0, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any u32, 0)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any u32, 202)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 1, any, any u32, 202)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, ld-musl-x86_64.so.1+0x99884(init_fini_lock*+4), 202)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, 128, any u32)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(ld-musl-x86_64.so.1+0x97460(maplock*), any u32, 0-INT_MAX, any, 202, any u32)
futex(ld-musl-x86_64.so.1+0x99900(lock*), any u32, 0-INT_MAX, any, 202, any u32)
futex(ld-musl-x86_64.so.1+0x99ee0(vmlock*), FUTEX_WAIT, any, 0, ld-musl-x86_64.so.1+0x99ee4(vmlock*+4), 0x1-0xffffffff)
futex(ld-musl-x86_64.so.1+0x99ee0(vmlock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, ld-musl-x86_64.so.1+0x99ee4(vmlock*+4), 0x1-0xffffffff)
futex(ld-musl-x86_64.so.1+0x99fb0(__thread_list_lock*), FUTEX_WAIT, any, 0, ld-musl-x86_64.so.1+0x9a038(tl_lock_waiters*), 0x1-0xffffffff)
sched_getaffinity(0, 128, any) @ ld-musl-x86_64.so.1+0x19218(sysconf+255)
restart_syscall()
clock_gettime(any, any) @ ld-musl-x86_64.so.1+0x59619(clock_gettime+49)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ ld-musl-x86_64.so.1+0x583bc
exit_group(any) @ ld-musl-x86_64.so.1+0x1cea9(_Exit+8)
set_robust_list(any, 24) @ ld-musl-x86_64.so.1+0x56ede(__pthread_mutex_trylock_owner*+182)
signalfd(-1, any, 8) @ ld-musl-x86_64.so.1+0x2057e(signalfd+34)
signalfd4(-1, any, 8, SFD_CLOEXEC) @ ld-musl-x86_64.so.1+0x2056d(signalfd+17)
prlimit64(0, RLIMIT_CPU-0x3fff, 0, any) @ ld-musl-x86_64.so.1+0x376e8(getrlimit+30)
