callander: permitted syscalls: read(any, any, any) @ ld-musl-x86_64.so.1+0x4a1f3(__stdio_read*+77)
read(any, any, 8) @ ld-musl-x86_64.so.1+0x550cb(__syscall_cp_c*+57)
read(any, any, 19) @ ld-musl-x86_64.so.1+0x550cb(__syscall_cp_c*+57)
read(any, any, 256) @ ld-musl-x86_64.so.1+0x550cb(__syscall_cp_c*+57)
read(any, any, 8) @ ld-musl-x86_64.so.1+0x57f61
read(any, any, 19) @ ld-musl-x86_64.so.1+0x57f61
read(any, any, 256) @ ld-musl-x86_64.so.1+0x57f61
write(any, any, 8) @ ld-musl-x86_64.so.1+0x550cb(__syscall_cp_c*+57)
write(any, libusb-1.0.so.0+0x1362a, NULL-0xf) @ ld-musl-x86_64.so.1+0x550cb(__syscall_cp_c*+57)
write(any, any, 8) @ ld-musl-x86_64.so.1+0x57f61
write(any, libusb-1.0.so.0+0x1362a, NULL-0xf) @ ld-musl-x86_64.so.1+0x57f61
open(any, any u16, any) @ ld-musl-x86_64.so.1+0x550cb(__syscall_cp_c*+57)
open(any, any u16, any) @ ld-musl-x86_64.so.1+0x57f61
close(any) @ ld-musl-x86_64.so.1+0x1b553(opendir+47)
close(any) @ ld-musl-x86_64.so.1+0x4a10b(__stdio_close*+17)
close(any) @ ld-musl-x86_64.so.1+0x550cb(__syscall_cp_c*+57)
close(any) @ ld-musl-x86_64.so.1+0x57f61
poll(any, any u32, any) @ ld-musl-x86_64.so.1+0x550cb(__syscall_cp_c*+57)
poll(any, any u32, any) @ ld-musl-x86_64.so.1+0x57f61
lseek(any, any, any) @ ld-musl-x86_64.so.1+0x5afe0(lseek64+11)
mmap(0, any, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, any) @ ld-musl-x86_64.so.1+0x381c0(mmap+118)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_SHARED, any, any) @ ld-musl-x86_64.so.1+0x381c0(mmap+118)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, any) @ ld-musl-x86_64.so.1+0x381c0(mmap+118)
mmap(any, 0x1000, PROT_NONE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, any) @ ld-musl-x86_64.so.1+0x381c0(mmap+118)
mprotect(NULL-0xfffffffffffff000, any, PROT_READ|PROT_WRITE) @ ld-musl-x86_64.so.1+0x38232(mprotect+37)
munmap(any, any) @ ld-musl-x86_64.so.1+0x38338(munmap+25)
munmap(any, any) @ ld-musl-x86_64.so.1+0x57ef5
brk(0) @ ld-musl-x86_64.so.1+0x25e74(__malloc_alloc_meta*+242)
brk(any) @ ld-musl-x86_64.so.1+0x25e99(__malloc_alloc_meta*+279)
brk(any) @ ld-musl-x86_64.so.1+0x25ec3(__malloc_alloc_meta*+321)
rt_sigaction(SIGABRT, any, 8, 8) @ ld-musl-x86_64.so.1+0x1bfe8(abort+78)
rt_sigaction(SIGINT, any, 0, 8) @ ld-musl-x86_64.so.1+0x48fa8(__libc_sigaction*+282)
rt_sigaction(SIGUSR1, any, 0, 8) @ ld-musl-x86_64.so.1+0x48fa8(__libc_sigaction*+282)
rt_sigaction(SIGUSR2, any, 0, 8) @ ld-musl-x86_64.so.1+0x48fa8(__libc_sigaction*+282)
rt_sigaction(SIGTERM, any, 0, 8) @ ld-musl-x86_64.so.1+0x48fa8(__libc_sigaction*+282)
rt_sigaction(SIGSETXID, any, 0, 8) @ ld-musl-x86_64.so.1+0x48fa8(__libc_sigaction*+282)
rt_sigaction(SIGINT, any, any, 8) @ ld-musl-x86_64.so.1+0x48fbc(__libc_sigaction*+302)
rt_sigaction(SIGTERM, any, any, 8) @ ld-musl-x86_64.so.1+0x48fbc(__libc_sigaction*+302)
rt_sigprocmask(SIG_UNBLOCK, any, 8, 8) @ ld-musl-x86_64.so.1+0x1c019(abort+127)
rt_sigprocmask(SIG_BLOCK, ld-musl-x86_64.so.1+0x937c8(all_mask*), any, 8) @ ld-musl-x86_64.so.1+0x48cd3(__block_all_sigs*+23)
rt_sigprocmask(SIG_BLOCK, ld-musl-x86_64.so.1+0x937c0(app_mask*), any, 8) @ ld-musl-x86_64.so.1+0x48ced(__block_app_sigs*+23)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-x86_64.so.1+0x48d05(__restore_sigs*+21)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-x86_64.so.1+0x48f29(__libc_sigaction*+155)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-x86_64.so.1+0x55bba(start*+104)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-x86_64.so.1+0x55cce(pthread_create+202)
rt_sigprocmask(SIG_BLOCK, any, any, 8) @ ld-musl-x86_64.so.1+0x5745f(pthread_sigmask+29)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-x86_64.so.1+0x5745f(pthread_sigmask+29)
rt_sigreturn(any) @ ld-musl-x86_64.so.1+0x495ae(__restore_rt*+7)
ioctl(any, USBDEVFS_DISCARDURB, any) @ ld-musl-x86_64.so.1+0x3690c(ioctl+48)
ioctl(any, USBDEVFS_RESET, 0) @ ld-musl-x86_64.so.1+0x3690c(ioctl+48)
ioctl(any, USBDEVFS_GET_SPEED, 0) @ ld-musl-x86_64.so.1+0x3690c(ioctl+48)
ioctl(any, USBDEVFS_REAPURBNDELAY, any) @ ld-musl-x86_64.so.1+0x3690c(ioctl+48)
ioctl(any, USBDEVFS_CONNECTINFO, any) @ ld-musl-x86_64.so.1+0x3690c(ioctl+48)
ioctl(any, USBDEVFS_GETDRIVER, any) @ ld-musl-x86_64.so.1+0x3690c(ioctl+48)
ioctl(any, USBDEVFS_SETCONFIGURATION, any) @ ld-musl-x86_64.so.1+0x3690c(ioctl+48)
ioctl(any, USBDEVFS_CLAIMINTERFACE-USBDEVFS_RELEASEINTERFACE, any) @ ld-musl-x86_64.so.1+0x3690c(ioctl+48)
ioctl(any, USBDEVFS_CLEAR_HALT, any) @ ld-musl-x86_64.so.1+0x3690c(ioctl+48)
ioctl(any, USBDEVFS_GET_CAPABILITIES, any) @ ld-musl-x86_64.so.1+0x3690c(ioctl+48)
ioctl(any, USBDEVFS_SETINTERFACE, any) @ ld-musl-x86_64.so.1+0x3690c(ioctl+48)
ioctl(any, USBDEVFS_ALLOC_STREAMS-USBDEVFS_FREE_STREAMS, non-NULL) @ ld-musl-x86_64.so.1+0x3690c(ioctl+48)
ioctl(any, USBDEVFS_SUBMITURB, any) @ ld-musl-x86_64.so.1+0x3690c(ioctl+48)
ioctl(any, USBDEVFS_DISCONNECT_CLAIM, any) @ ld-musl-x86_64.so.1+0x3690c(ioctl+48)
ioctl(any, USBDEVFS_IOCTL, any) @ ld-musl-x86_64.so.1+0x3690c(ioctl+48)
ioctl(any, USBDEVFS_CONTROL, any) @ ld-musl-x86_64.so.1+0x3690c(ioctl+48)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-x86_64.so.1+0x4a36a(__stdout_write*+48)
readv(any, any, 2) @ ld-musl-x86_64.so.1+0x4a1f3(__stdio_read*+77)
writev(any, any, any) @ ld-musl-x86_64.so.1+0x4a2bb(__stdio_write*+81)
mremap(any, any u32, NULL-0xfffffffffffff000, MREMAP_MAYMOVE, any) @ ld-musl-x86_64.so.1+0x382ba(mremap+124)
nanosleep(any, 0) @ ld-musl-x86_64.so.1+0x550cb(__syscall_cp_c*+57)
nanosleep(any, 0) @ ld-musl-x86_64.so.1+0x57f61
socket(AF_NETLINK, SOCK_RAW, 15) @ ld-musl-x86_64.so.1+0x3ed28(socket+27)
socket(AF_NETLINK, SOCK_RAW|SOCK_NONBLOCK|SOCK_CLOEXEC, 15) @ ld-musl-x86_64.so.1+0x3ed28(socket+27)
socket(AF_NETLINK, SOCK_RAW, 15) @ ld-musl-x86_64.so.1+0x3ed58(socket+75)
recvmsg(any, any, 0) @ ld-musl-x86_64.so.1+0x550cb(__syscall_cp_c*+57)
recvmsg(any, any, 0) @ ld-musl-x86_64.so.1+0x57f61
bind(any, any, 12) @ ld-musl-x86_64.so.1+0x3944e(bind+20)
setsockopt(any, SOL_SOCKET, SO_PASSCRED, any, 4) @ ld-musl-x86_64.so.1+0x3ecb7(setsockopt+24)
clone(CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID|CLONE_DETACHED, any, any, ld-musl-x86_64.so.1+0x99fb8(__thread_list_lock*), any) @ ld-musl-x86_64.so.1+0x57f24
exit(0) @ ld-musl-x86_64.so.1+0x55b4e(pthread_exit+486)
exit(0) @ ld-musl-x86_64.so.1+0x55ba0(start*+78)
exit(0) @ ld-musl-x86_64.so.1+0x57eff
uname(any) @ ld-musl-x86_64.so.1+0x37c84(uname+6)
fcntl(any, F_GETFD, any) @ ld-musl-x86_64.so.1+0x1c390(fcntl+328)
fcntl(any, F_SETFD, any u32) @ ld-musl-x86_64.so.1+0x1c390(fcntl+328)
fcntl(any, F_GETFL, any) @ ld-musl-x86_64.so.1+0x1c390(fcntl+328)
fcntl(any, F_SETFL, any u16) @ ld-musl-x86_64.so.1+0x1c390(fcntl+328)
fcntl(any, F_SETFD, 1) @ ld-musl-x86_64.so.1+0x1c41d(open+126)
fcntl(any, F_SETFD, 1) @ ld-musl-x86_64.so.1+0x3ed7f(socket+114)
fcntl(any, F_SETFL, 2048) @ ld-musl-x86_64.so.1+0x3ed99(socket+140)
readlink(any, any, 4095) @ ld-musl-x86_64.so.1+0x5b224(readlink+27)
gettimeofday(any, 0) @ ld-musl-x86_64.so.1+0x591d7(clock_gettime+80)
statfs(libusb-1.0.so.0+0x12d3a, any) @ ld-musl-x86_64.so.1+0x49aab(statfs64+24)
sched_setscheduler(any, any, any) @ ld-musl-x86_64.so.1+0x56048(pthread_create+1092)
prctl(PR_SET_NAME, libusb-1.0.so.0+0x1362a, 0, any, any) @ ld-musl-x86_64.so.1+0x1f3c5(prctl+71)
gettid() @ ld-musl-x86_64.so.1+0x377d5(syscall+153)
tkill(any, SIGABRT) @ ld-musl-x86_64.so.1+0x1bfff(abort+101)
tkill(any, any) @ ld-musl-x86_64.so.1+0x48e47(raise+43)
tkill(any, SIGSETXID) @ ld-musl-x86_64.so.1+0x5508b(cancel_handler*+133)
tkill(any, SIGSETXID) @ ld-musl-x86_64.so.1+0x566f9(pthread_kill+65)
futex(any, FUTEX_WAIT, any, 0, any u32, 0)
futex(any, FUTEX_WAIT, any, 0, any u32, 202)
futex(any, any u32, 1, any, 202, any)
futex(any, any, any, any, 0, any)
futex(any, FUTEX_WAKE, INT_MAX, any, 202, any)
futex(any, FUTEX_REQUEUE, 0, 1, any, 202)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any u32, 0)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any u32, 202)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, any, 202)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, 128, any u32)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(140, FUTEX_WAKE, 1, any, any u32, 202)
futex(140, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 1, any, any u32, 202)
futex(ld-musl-x86_64.so.1+0x9714c(__stderr_FILE*+140), FUTEX_WAKE, 1, any, any u32, 202)
futex(ld-musl-x86_64.so.1+0x9714c(__stderr_FILE*+140), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 1, any, any u32, 202)
futex(ld-musl-x86_64.so.1+0x97460(maplock*), any u32, 0-INT_MAX, any, 202, any u32)
futex(ld-musl-x86_64.so.1+0x98b60(lock*), any u32, 0-INT_MAX, any, 202, any u32)
futex(ld-musl-x86_64.so.1+0x98ba0(key_lock*), any u32, 0-INT_MAX, any, 202, any u32)
futex(ld-musl-x86_64.so.1+0x99900(lock*), any u32, 0-INT_MAX, any, 202, any u32)
futex(ld-musl-x86_64.so.1+0x99ee0(vmlock*), FUTEX_WAIT, any, 0, ld-musl-x86_64.so.1+0x99ee4(vmlock*+4), 0x1-0xffffffff)
futex(ld-musl-x86_64.so.1+0x99ee0(vmlock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, ld-musl-x86_64.so.1+0x99ee4(vmlock*+4), 0x1-0xffffffff)
futex(ld-musl-x86_64.so.1+0x99ee0(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, any, 202, any)
futex(ld-musl-x86_64.so.1+0x99fb8(__thread_list_lock*), FUTEX_WAIT, any, 0, ld-musl-x86_64.so.1+0x9a03c(tl_lock_waiters*), 0x1-0xffffffff)
getdents64(any, any, 2048) @ ld-musl-x86_64.so.1+0x1b57c(readdir64+30)
set_tid_address(any) @ ld-musl-x86_64.so.1+0x55b94(start*+66)
restart_syscall()
clock_gettime(any, any) @ ld-musl-x86_64.so.1+0x591b8(clock_gettime+49)
clock_nanosleep(CLOCK_REALTIME, 0, any, 0) @ ld-musl-x86_64.so.1+0x550cb(__syscall_cp_c*+57)
clock_nanosleep(CLOCK_REALTIME, 0, any, 0) @ ld-musl-x86_64.so.1+0x57f61
exit_group(any) @ ld-musl-x86_64.so.1+0x1bf8c(_Exit+8)
set_robust_list(0, 24) @ ld-musl-x86_64.so.1+0x55b05(pthread_exit+413)
set_robust_list(any, 24) @ ld-musl-x86_64.so.1+0x56a6f(__pthread_mutex_trylock_owner*+182)
timerfd_create(CLOCK_MONOTONIC, TFD_NONBLOCK|TFD_CLOEXEC) @ ld-musl-x86_64.so.1+0x1f763(timerfd_create+12)
timerfd_settime(any, 0, any, 8) @ ld-musl-x86_64.so.1+0x1f77e(timerfd_settime+15)
timerfd_settime(any, TFD_TIMER_ABSTIME, any, 0) @ ld-musl-x86_64.so.1+0x1f77e(timerfd_settime+15)
eventfd2(0, EFD_NONBLOCK|EFD_CLOEXEC) @ ld-musl-x86_64.so.1+0x1ef2a(eventfd+11)
membarrier(MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED, 0) @ ld-musl-x86_64.so.1+0x1f248(__membarrier_init*+12)
