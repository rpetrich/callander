callander: permitted syscalls: read(any, any, any) @ ld-musl-x86_64.so.1+0x4a1f3(__stdio_read*+77)
read(STDIN_FILENO, any, 1) @ ld-musl-x86_64.so.1+0x550cb(__syscall_cp_c*+57)
read(any, any, 8) @ ld-musl-x86_64.so.1+0x550cb(__syscall_cp_c*+57)
read(any, any, 128) @ ld-musl-x86_64.so.1+0x550cb(__syscall_cp_c*+57)
read(STDIN_FILENO, any, 1) @ ld-musl-x86_64.so.1+0x57f61
read(any, any, 8) @ ld-musl-x86_64.so.1+0x57f61
read(any, any, 128) @ ld-musl-x86_64.so.1+0x57f61
write(any, any, non-NULL) @ ld-musl-x86_64.so.1+0x550cb(__syscall_cp_c*+57)
write(any, any, non-NULL) @ ld-musl-x86_64.so.1+0x57f61
open(any, O_RDONLY, any) @ ld-musl-x86_64.so.1+0x4b1e9(fopen64+85)
open(any, O_RDONLY|O_NONBLOCK|O_LARGEFILE|O_CLOEXEC, any) @ ld-musl-x86_64.so.1+0x57f81(__map_file*+24)
close(any) @ ld-musl-x86_64.so.1+0x4a10b(__stdio_close*+17)
close(any) @ ld-musl-x86_64.so.1+0x4b232(fopen64+158)
close(any) @ ld-musl-x86_64.so.1+0x57fab(__map_file*+66)
close(any) @ ld-musl-x86_64.so.1+0x57fe1(__map_file*+120)
stat(any, any) @ ld-musl-x86_64.so.1+0x498a2(fstatat64+207)
fstat(any, any) @ ld-musl-x86_64.so.1+0x4980a(fstatat64+55)
poll(any, 1, 0) @ ld-musl-x86_64.so.1+0x550cb(__syscall_cp_c*+57)
poll(any, 1, 0) @ ld-musl-x86_64.so.1+0x57f61
lseek(any, any, any) @ ld-musl-x86_64.so.1+0x5afe0(lseek64+11)
mmap(0, any, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1, any) @ ld-musl-x86_64.so.1+0x381c0(mmap+118)
mmap(0, any, PROT_READ, MAP_SHARED, any, any) @ ld-musl-x86_64.so.1+0x381c0(mmap+118)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, any) @ ld-musl-x86_64.so.1+0x381c0(mmap+118)
mmap(any, 0x1000, PROT_NONE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, any) @ ld-musl-x86_64.so.1+0x381c0(mmap+118)
mprotect(NULL-0xfffffffffffff000, any, PROT_READ|PROT_WRITE) @ ld-musl-x86_64.so.1+0x38232(mprotect+37)
munmap(any, any) @ ld-musl-x86_64.so.1+0x38338(munmap+25)
munmap(any, any) @ ld-musl-x86_64.so.1+0x57ef5
brk(0) @ ld-musl-x86_64.so.1+0x25e74(__malloc_alloc_meta*+242)
brk(any) @ ld-musl-x86_64.so.1+0x25e99(__malloc_alloc_meta*+279)
brk(any) @ ld-musl-x86_64.so.1+0x25ec3(__malloc_alloc_meta*+321)
rt_sigaction(SIGABRT, any, 8, 8) @ ld-musl-x86_64.so.1+0x1bfe8(abort+78)
rt_sigaction(SIGINT, any, 0, 8) @ ld-musl-x86_64.so.1+0x48fa8(__libc_sigaction*+282)
rt_sigaction(SIGTERM, any, 0, 8) @ ld-musl-x86_64.so.1+0x48fa8(__libc_sigaction*+282)
rt_sigaction(SIGTSTP, any, 0, 8) @ ld-musl-x86_64.so.1+0x48fa8(__libc_sigaction*+282)
rt_sigaction(SIGWINCH, any, 0, 8) @ ld-musl-x86_64.so.1+0x48fa8(__libc_sigaction*+282)
rt_sigaction(SIGSETXID, any, 0, 8) @ ld-musl-x86_64.so.1+0x48fa8(__libc_sigaction*+282)
rt_sigaction(SIGINT, any, any, 8) @ ld-musl-x86_64.so.1+0x48fbc(__libc_sigaction*+302)
rt_sigaction(SIGTERM, any, any, 8) @ ld-musl-x86_64.so.1+0x48fbc(__libc_sigaction*+302)
rt_sigaction(SIGTSTP, any, any, 8) @ ld-musl-x86_64.so.1+0x48fbc(__libc_sigaction*+302)
rt_sigaction(SIGWINCH, any, any, 8) @ ld-musl-x86_64.so.1+0x48fbc(__libc_sigaction*+302)
rt_sigprocmask(SIG_UNBLOCK, any, 8, 8) @ ld-musl-x86_64.so.1+0x1c019(abort+127)
rt_sigprocmask(SIG_BLOCK, ld-musl-x86_64.so.1+0x937c8(all_mask*), any, 8) @ ld-musl-x86_64.so.1+0x48cd3(__block_all_sigs*+23)
rt_sigprocmask(SIG_BLOCK, ld-musl-x86_64.so.1+0x937c0(app_mask*), any, 8) @ ld-musl-x86_64.so.1+0x48ced(__block_app_sigs*+23)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-x86_64.so.1+0x48d05(__restore_sigs*+21)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-x86_64.so.1+0x48f29(__libc_sigaction*+155)
rt_sigprocmask(SIG_BLOCK-SIG_SETMASK, any, any, 8) @ ld-musl-x86_64.so.1+0x5745f(pthread_sigmask+29)
rt_sigreturn(any) @ ld-musl-x86_64.so.1+0x495ae(__restore_rt*+7)
ioctl(STDIN_FILENO, TCSETSF, any) @ ld-musl-x86_64.so.1+0x3690c(ioctl+48)
ioctl(STDIN_FILENO, TIOCGPGRP, any) @ ld-musl-x86_64.so.1+0x3690c(ioctl+48)
ioctl(any, TCGETS, any) @ ld-musl-x86_64.so.1+0x3690c(ioctl+48)
ioctl(any, TCSETSW, non-NULL) @ ld-musl-x86_64.so.1+0x3690c(ioctl+48)
ioctl(any, TCFLSH, 0) @ ld-musl-x86_64.so.1+0x3690c(ioctl+48)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-x86_64.so.1+0x3690c(ioctl+48)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-x86_64.so.1+0x49e2b(fdopen+270)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-x86_64.so.1+0x4a36a(__stdout_write*+48)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-x86_64.so.1+0x5af5d(isatty+22)
readv(any, any, 2) @ ld-musl-x86_64.so.1+0x4a1f3(__stdio_read*+77)
writev(any, any, any) @ ld-musl-x86_64.so.1+0x4a2bb(__stdio_write*+81)
access(any, X_OK|W_OK|R_OK) @ ld-musl-x86_64.so.1+0x5a8e2(access+9)
access(non-NULL, R_OK) @ ld-musl-x86_64.so.1+0x5a8e2(access+9)
mremap(any, any u32, NULL-0xfffffffffffff000, MREMAP_MAYMOVE, any) @ ld-musl-x86_64.so.1+0x382ba(mremap+124)
nanosleep(any, any) @ ld-musl-x86_64.so.1+0x550cb(__syscall_cp_c*+57)
nanosleep(any, any) @ ld-musl-x86_64.so.1+0x57f61
getpid() @ ld-musl-x86_64.so.1+0x5af1f(getpid+5)
exit(0) @ ld-musl-x86_64.so.1+0x55b4e(pthread_exit+486)
exit(0) @ ld-musl-x86_64.so.1+0x57eff
kill(any, SIGTSTP) @ ld-musl-x86_64.so.1+0x48d29(kill+12)
uname(any) @ ld-musl-x86_64.so.1+0x37c84(uname+6)
fcntl(any, F_SETFD, 1) @ ld-musl-x86_64.so.1+0x1f67c(signalfd+68)
fcntl(any, F_SETFL, 2048) @ ld-musl-x86_64.so.1+0x1f694(signalfd+92)
fcntl(any, F_GETFD, any) @ ld-musl-x86_64.so.1+0x49822(fstatat64+79)
fcntl(any, F_SETFD, 1) @ ld-musl-x86_64.so.1+0x49dbc(fdopen+159)
fcntl(any, F_SETFD, 1) @ ld-musl-x86_64.so.1+0x4b218(fopen64+132)
gettimeofday(any, 0) @ ld-musl-x86_64.so.1+0x591d7(clock_gettime+80)
getrlimit(RLIMIT_CPU-0x3fff, any) @ ld-musl-x86_64.so.1+0x367ab(getrlimit+73)
getpgid(0) @ ld-musl-x86_64.so.1+0x5af17(getpgrp+7)
tkill(any, SIGABRT) @ ld-musl-x86_64.so.1+0x1bfff(abort+101)
tkill(any, SIGABRT) @ ld-musl-x86_64.so.1+0x48e47(raise+43)
tkill(any, SIGSETXID) @ ld-musl-x86_64.so.1+0x5508b(cancel_handler*+133)
tkill(any, SIGSETXID) @ ld-musl-x86_64.so.1+0x566f9(pthread_kill+65)
futex(any, FUTEX_WAIT, any, 0, any u32, 0)
futex(any, FUTEX_WAIT, any, 0, any u32, 202)
futex(any, any u32, 1, any, 202, any)
futex(any, any, any, any, 0, any)
futex(any, FUTEX_WAKE, 1, any, any u32, 202)
futex(any, FUTEX_REQUEUE, 0, 1, ld-musl-x86_64.so.1+0x99884(init_fini_lock*+4), 202)
futex(any, FUTEX_UNLOCK_PI, any, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any u32, 0)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any u32, 202)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 1, any, any u32, 202)
futex(any, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, ld-musl-x86_64.so.1+0x99884(init_fini_lock*+4), 202)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, 128, any u32)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, any, any, any, any)
futex(ld-musl-x86_64.so.1+0x97460(maplock*), any u32, 0-INT_MAX, any, 202, any u32)
futex(ld-musl-x86_64.so.1+0x98ba0(key_lock*), any u32, 0-INT_MAX, any, 202, any u32)
futex(ld-musl-x86_64.so.1+0x99848(ctor_cond*+8), FUTEX_WAKE, INT_MAX, any, 202, any)
futex(ld-musl-x86_64.so.1+0x99900(lock*), any u32, 0-INT_MAX, any, 202, any u32)
futex(ld-musl-x86_64.so.1+0x99ee0(vmlock*), FUTEX_WAIT, any, 0, ld-musl-x86_64.so.1+0x99ee4(vmlock*+4), 0x1-0xffffffff)
futex(ld-musl-x86_64.so.1+0x99ee0(vmlock*), FUTEX_WAKE, INT_MAX, any, 202, any)
futex(ld-musl-x86_64.so.1+0x99ee0(vmlock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, ld-musl-x86_64.so.1+0x99ee4(vmlock*+4), 0x1-0xffffffff)
futex(ld-musl-x86_64.so.1+0x99ee0(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, any, 202, any)
futex(ld-musl-x86_64.so.1+0x99fb8(__thread_list_lock*), FUTEX_WAIT, any, 0, ld-musl-x86_64.so.1+0x9a03c(tl_lock_waiters*), 0x1-0xffffffff)
epoll_create(1) @ ld-musl-x86_64.so.1+0x1ee5a(epoll_create1+36)
restart_syscall()
clock_gettime(any, any) @ ld-musl-x86_64.so.1+0x591b8(clock_gettime+49)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ ld-musl-x86_64.so.1+0x550cb(__syscall_cp_c*+57)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ ld-musl-x86_64.so.1+0x57f61
exit_group(any) @ ld-musl-x86_64.so.1+0x1bf8c(_Exit+8)
epoll_wait(any, any, 3, any) @ ld-musl-x86_64.so.1+0x550cb(__syscall_cp_c*+57)
epoll_wait(any, any, 3, any) @ ld-musl-x86_64.so.1+0x57f61
epoll_ctl(any, 1, any, any) @ ld-musl-x86_64.so.1+0x1ee92(epoll_ctl+18)
newfstatat(any, ld-musl-x86_64.so.1+0x94d80, any, AT_EMPTY_PATH) @ ld-musl-x86_64.so.1+0x4983b(fstatat64+104)
newfstatat(any, ld-musl-x86_64.so.1+0x94d80, any, AT_EMPTY_PATH) @ ld-musl-x86_64.so.1+0x498b4(fstatat64+225)
set_robust_list(0, 24) @ ld-musl-x86_64.so.1+0x55b05(pthread_exit+413)
set_robust_list(any, 24) @ ld-musl-x86_64.so.1+0x56a6f(__pthread_mutex_trylock_owner*+182)
epoll_pwait(any, any, 3, -1) @ ld-musl-x86_64.so.1+0x550cb(__syscall_cp_c*+57)
epoll_pwait(any, any, 3, -1) @ ld-musl-x86_64.so.1+0x57f61
signalfd(-1, any, 8) @ ld-musl-x86_64.so.1+0x1f65a(signalfd+34)
timerfd_create(CLOCK_MONOTONIC, 0) @ ld-musl-x86_64.so.1+0x1f763(timerfd_create+12)
timerfd_settime(any, 0, any, 0) @ ld-musl-x86_64.so.1+0x1f77e(timerfd_settime+15)
signalfd4(-1, any, 8, SFD_CLOEXEC) @ ld-musl-x86_64.so.1+0x1f649(signalfd+17)
epoll_create1(0) @ ld-musl-x86_64.so.1+0x1ee42(epoll_create1+12)
prlimit64(0, RLIMIT_CPU-0x3fff, 0, any) @ ld-musl-x86_64.so.1+0x36780(getrlimit+30)
